(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["app.76e92ee3"],{"0987":function(t,e,a){},"24d5":function(t,e,a){"use strict";var o=function(){var t=this,e=t._self._c;return e("div",{staticClass:"catarro-cuentas-menu-container"},[e("h1",[t._v("Menú de Cuentas Catarro")]),e("div",{staticClass:"actions-container"},[e("router-link",{staticClass:"action-button back-btn",attrs:{to:"/cuentas-mexico"}},[t._v(" Cuentas México ")]),e("router-link",{staticClass:"action-button new-cuenta-btn",attrs:{to:"/cuentas-catarro/nueva"}},[t._v(" Nueva Cuenta ")]),e("router-link",{staticClass:"action-button ventas-ganancias-btn",attrs:{to:"/ventas-ganancias-catarro"}},[t._v(" Ventas y Ganancias ")]),e("PreciosHistorialModal"),e("StashModal",{attrs:{cliente:"catarro"}})],1),e("div",{staticClass:"filter-container"},[e("label",{attrs:{for:"filter-select"}},[t._v("Filtrar por estado:")]),e("select",{directives:[{name:"model",rawName:"v-model",value:t.filtroEstado,expression:"filtroEstado"}],attrs:{id:"filter-select"},on:{change:function(e){var a=Array.prototype.filter.call(e.target.options,(function(t){return t.selected})).map((function(t){var e="_value"in t?t._value:t.value;return e}));t.filtroEstado=e.target.multiple?a:a[0]}}},[e("option",{attrs:{value:"todas"}},[t._v("Todas")]),e("option",{attrs:{value:"pagadas"}},[t._v("Pagadas")]),e("option",{attrs:{value:"no-pagadas"}},[t._v("No Pagadas")])])]),e("div",{staticClass:"cuentas-list"},[e("h2",[t._v("Registros de Cuentas")]),t.isLoading?e("div",{staticClass:"loading"},[t._v("Cargando registros...")]):0===t.cuentasFiltradas.length?e("div",{staticClass:"no-records"},[t._v(" No hay registros de cuentas que coincidan con el filtro. ")]):e("ul",t._l(t.cuentasFiltradas,(function(a){return e("li",{key:a.id,staticClass:"cuenta-item",class:{"tiene-observacion":a.tieneObservacion}},[e("div",{staticClass:"cuenta-content"},[e("span",{staticClass:"cuenta-date"},[t._v(t._s(t.formatDate(a.fecha)))]),e("p",{staticClass:"cuenta-summary"},[e("span",[t._v("Saldo Hoy: $"+t._s(t.formatNumber(a.saldoHoy)))]),e("span",[t._v("Total Acumulado: $"+t._s(t.formatNumber(a.totalNota)))])]),a.tieneObservacion?e("div",{staticClass:"observacion-container"},[e("p",{staticClass:"observacion-texto"},[t._v(t._s(a.observacion))]),e("button",{staticClass:"delete-observacion-btn",attrs:{title:"Borrar observación"},on:{click:function(e){return t.borrarObservacion(a.id)}}},[t._v("×")])]):t._e(),a.abonos&&a.abonos.length>0?e("div",{staticClass:"abonos-info"},t._l(a.abonos,(function(a,o){return e("p",{key:o,staticClass:"abono-detail"},[e("span",{staticClass:"abono-label"},[t._v("Abono:")]),e("span",{staticClass:"abono-monto"},[t._v("$"+t._s(t.formatNumber(a.monto)))]),e("span",{staticClass:"abono-descripcion"},[t._v(t._s(a.descripcion||"Sin descripción"))])])})),0):t._e(),e("span",{class:["estado-cuenta",a.estadoPagado?"pagado":"no-pagado"]},[t._v(" "+t._s(a.estadoPagado?"Pagado":"No Pagado")+" ")])]),e("div",{staticClass:"cuenta-actions"},[e("button",{staticClass:"edit-btn",on:{click:function(e){return t.editarCuenta(a.id)}}},[t._v("Editar")]),e("button",{staticClass:"delete-btn",on:{click:function(e){return t.borrarCuenta(a.id)}}},[t._v("Borrar")])])])})),0)])])},n=[],i=(a("14d9"),a("13d5"),a("dc59")),s=a("1494"),r=a("74c9"),c=a("666c"),l=a("19aa"),d={name:"CatarroCuentasMenu",components:{BackButton:r["a"],PreciosHistorialModal:c["a"],StashModal:l["a"]},data(){return{cuentas:[],isLoading:!0,filtroEstado:"todas",unsubscribe:null}},computed:{cuentasFiltradas(){switch(this.filtroEstado){case"pagadas":return this.cuentas.filter(t=>t.estadoPagado);case"no-pagadas":return this.cuentas.filter(t=>!t.estadoPagado);default:return this.cuentas}}},methods:{async loadCuentas(){try{this.isLoading=!0;const t=Object(s["c"])(i["a"],"cuentasCatarro"),e=Object(s["o"])(t,Object(s["l"])("fecha","asc"));this.unsubscribe=Object(s["k"])(e,async t=>{const e=t.docs.map(t=>{const e=t.data(),a=(e.cobros||[]).reduce((t,e)=>t+(parseFloat(e.monto)||0),0),o=(e.abonos||[]).reduce((t,e)=>t+(parseFloat(e.monto)||0),0),n=(e.totalGeneralVenta||0)-a-o;return{id:t.id,fecha:e.fecha,saldoHoy:e.totalGeneralVenta||0,totalCobros:a,totalAbonos:o,totalNota:e.nuevoSaldoAcumulado||0,estadoPagado:0===n,nuevoSaldoAcumulado:e.nuevoSaldoAcumulado||0,saldoAcumuladoAnterior:e.saldoAcumuladoAnterior||0,abonos:e.abonos||[],tieneObservacion:e.tieneObservacion||!1,observacion:e.observacion||""}}),a=e.sort((t,e)=>new Date(t.fecha)-new Date(e.fecha));let o=0;const n=[];for(let i=0;i<a.length;i++){const t=a[i],e=t.saldoHoy-t.totalCobros-t.totalAbonos;o+=e;const s=0===i?0:a[i-1].nuevoSaldoAcumulado;t.saldoAcumuladoAnterior===s&&t.nuevoSaldoAcumulado===o||n.push({id:t.id,updates:{saldoAcumuladoAnterior:s,nuevoSaldoAcumulado:o,estadoPagado:0===e}}),t.totalNota=o,t.saldoAcumuladoAnterior=s,t.estadoPagado=0===e,o<=0&&(o=0)}n.length>0&&await Promise.all(n.map(({id:t,updates:e})=>Object(s["r"])(Object(s["e"])(i["a"],"cuentasCatarro",t),e))),this.cuentas=a.reverse(),this.isLoading=!1})}catch(t){console.error("Error al cargar cuentas: ",t),this.error=t.message,this.cuentas=[],this.isLoading=!1}},formatDate(t){const e=new Date(t);return e.setMinutes(e.getMinutes()+e.getTimezoneOffset()),e.toLocaleDateString("es-ES",{year:"numeric",month:"long",day:"numeric"})},formatNumber(t){return t.toLocaleString("es-ES",{minimumFractionDigits:2,maximumFractionDigits:2})},editarCuenta(t){this.$router.push(`/cuentas-catarro/${t}?edit=true`)},async borrarCuenta(t){if(confirm("¿Estás seguro de que quieres borrar este registro de cuenta?"))try{await Object(s["d"])(Object(s["e"])(i["a"],"cuentasCatarro",t)),alert("Registro de cuenta borrado con éxito")}catch(e){console.error("Error al borrar el registro de cuenta: ",e),alert("Error al borrar el registro de cuenta")}},async borrarObservacion(t){if(confirm("¿Estás seguro de que quieres borrar esta observación?"))try{await Object(s["r"])(Object(s["e"])(i["a"],"cuentasCatarro",t),{tieneObservacion:!1,observacion:""}),alert("Observación borrada con éxito")}catch(e){console.error("Error al borrar la observación: ",e),alert("Error al borrar la observación")}}},mounted(){this.loadCuentas()},beforeUnmount(){this.unsubscribe&&this.unsubscribe()}},u=d,m=(a("6a76"),a("2877")),h=Object(m["a"])(u,o,n,!1,null,"4da548ba",null);e["a"]=h.exports},4786:function(t,e,a){"use strict";var o=function(){var t=this,e=t._self._c;return e("div",{staticClass:"cuentas-catarro-container"},[t.isSaving?e("div",{staticClass:"auto-save-indicator"},[e("span",{staticClass:"save-dot"}),t._v(" Guardando... ")]):t._e(),e("div",{staticClass:"back-button-container"},[e("BackButton",{attrs:{to:"/cuentas-catarro"}}),e("PreciosHistorialModal",{attrs:{clienteActual:"catarro"}}),e("StashModal",{attrs:{cliente:"catarro"}})],1),e("h1",[t._v("Cuentas Catarro")]),e("div",{staticClass:"precios-button-container"},[e("PreciosClienteButton",{attrs:{clienteId:"catarro"}})],1),e("div",{staticClass:"fecha-actual"},[e("div",{staticClass:"fecha-input"},[e("input",{directives:[{name:"model",rawName:"v-model",value:t.fechaSeleccionada,expression:"fechaSeleccionada"}],attrs:{type:"date"},domProps:{value:t.fechaSeleccionada},on:{input:function(e){e.target.composing||(t.fechaSeleccionada=e.target.value)}}})]),e("div",{staticClass:"fecha-display"},[t._v(" "+t._s(t.fechaFormateada)+" ")])]),e("div",{staticClass:"input-section"},[e("h2",[t._v("Ingresar Datos")]),e("div",{staticClass:"input-row"},[e("input",{directives:[{name:"model",rawName:"v-model.number",value:t.newItem.kilos,expression:"newItem.kilos",modifiers:{number:!0}}],staticClass:"responsive-input",attrs:{type:"number",placeholder:"Kilos",inputmode:"decimal",pattern:"[0-9]*"},domProps:{value:t.newItem.kilos},on:{input:function(e){e.target.composing||t.$set(t.newItem,"kilos",t._n(e.target.value))},blur:function(e){return t.$forceUpdate()}}}),e("input",{directives:[{name:"model",rawName:"v-model",value:t.newItem.medida,expression:"newItem.medida"}],staticClass:"responsive-input",attrs:{type:"text",placeholder:"Medida"},domProps:{value:t.newItem.medida},on:{input:function(e){e.target.composing||t.$set(t.newItem,"medida",e.target.value)}}}),e("input",{directives:[{name:"model",rawName:"v-model.number",value:t.newItem.costo,expression:"newItem.costo",modifiers:{number:!0}}],staticClass:"responsive-input",attrs:{type:"number",placeholder:"Costo",inputmode:"decimal",pattern:"[0-9]*"},domProps:{value:t.newItem.costo},on:{input:function(e){e.target.composing||t.$set(t.newItem,"costo",t._n(e.target.value))},blur:function(e){return t.$forceUpdate()}}}),e("input",{directives:[{name:"model",rawName:"v-model.number",value:t.newItem.precioVenta,expression:"newItem.precioVenta",modifiers:{number:!0}}],staticClass:"responsive-input",attrs:{type:"number",placeholder:"Precio Venta",inputmode:"decimal",pattern:"[0-9]*"},domProps:{value:t.newItem.precioVenta},on:{input:function(e){e.target.composing||t.$set(t.newItem,"precioVenta",t._n(e.target.value))},blur:function(e){return t.$forceUpdate()}}}),e("button",{on:{click:t.addItem}},[t._v("Agregar")])])]),e("table",{staticClass:"tabla-principal"},[t._m(0),e("tbody",t._l(t.items,(function(a,o){return e("tr",{key:o},[e("td",{on:{click:function(e){return t.editField(o,"kilos")},touchstart:function(e){return t.startLongPress(o,"kilos")},touchend:t.endLongPress}},[t._v(" "+t._s(t.editingField.index===o&&"kilos"===t.editingField.field?"":t.formatNumber(a.kilos))+" "),t.editingField.index===o&&"kilos"===t.editingField.field?e("input",{directives:[{name:"model",rawName:"v-model.number",value:a.kilos,expression:"item.kilos",modifiers:{number:!0}}],ref:"editInput",refInFor:!0,attrs:{type:"number"},domProps:{value:a.kilos},on:{blur:[t.finishEditing,function(e){return t.$forceUpdate()}],keyup:function(e){return!e.type.indexOf("key")&&t._k(e.keyCode,"enter",13,e.key,"Enter")?null:t.finishEditing.apply(null,arguments)},input:function(e){e.target.composing||t.$set(a,"kilos",t._n(e.target.value))}}}):t._e()]),e("td",{on:{click:function(e){return t.editField(o,"medida")},touchstart:function(e){return t.startLongPress(o,"medida")},touchend:t.endLongPress}},[t._v(" "+t._s(t.editingField.index===o&&"medida"===t.editingField.field?"":a.medida)+" "),t.editingField.index===o&&"medida"===t.editingField.field?e("input",{directives:[{name:"model",rawName:"v-model",value:a.medida,expression:"item.medida"}],ref:"editInput",refInFor:!0,attrs:{type:"text"},domProps:{value:a.medida},on:{blur:t.finishEditing,keyup:function(e){return!e.type.indexOf("key")&&t._k(e.keyCode,"enter",13,e.key,"Enter")?null:t.finishEditing.apply(null,arguments)},input:function(e){e.target.composing||t.$set(a,"medida",e.target.value)}}}):t._e()]),e("td",{on:{click:function(e){return t.editField(o,"costo")},touchstart:function(e){return t.startLongPress(o,"costo")},touchend:t.endLongPress}},[t._v(" "+t._s(t.editingField.index===o&&"costo"===t.editingField.field?"":"$"+t.formatNumber(a.costo))+" "),t.editingField.index===o&&"costo"===t.editingField.field?e("input",{directives:[{name:"model",rawName:"v-model.number",value:a.costo,expression:"item.costo",modifiers:{number:!0}}],ref:"editInput",refInFor:!0,attrs:{type:"number"},domProps:{value:a.costo},on:{blur:[t.finishEditing,function(e){return t.$forceUpdate()}],keyup:function(e){return!e.type.indexOf("key")&&t._k(e.keyCode,"enter",13,e.key,"Enter")?null:t.finishEditing.apply(null,arguments)},input:function(e){e.target.composing||t.$set(a,"costo",t._n(e.target.value))}}}):t._e()]),e("td",[t._v("$"+t._s(t.formatNumber(a.total)))]),e("td",{staticClass:"action-column desktop-only"},[e("button",{staticClass:"delete-btn",on:{click:function(e){return t.removeItem(o)}}},[t._v("Eliminar")])])])})),0),e("tfoot",[e("tr",{staticClass:"total"},[t._m(1),e("td",[e("strong",[t._v("$"+t._s(t.formatNumber(t.totalGeneral)))])]),e("td")])])]),e("h2",[t._v("Precios de Venta")]),e("div",{staticClass:"add-product-button"},[e("button",{on:{click:function(e){t.showAddProductModal=!0}}},[t._v("Agregar Producto")])]),e("table",{staticClass:"tabla-venta"},[t._m(2),e("tbody",[t._l(t.itemsVenta,(function(a,o){return e("tr",{key:o,on:{click:function(e){return t.toggleGananciasMobile(o)}}},[e("td",{on:{click:function(e){return t.editKilos(o)},touchstart:function(e){return t.startLongPress(o)},touchend:t.endLongPress}},[t._v(" "+t._s(t.editingKilosIndex===o?"":t.formatNumber(a.kilosVenta))+" "),t.editingKilosIndex===o?e("input",{directives:[{name:"model",rawName:"v-model.number",value:a.kilosVenta,expression:"item.kilosVenta",modifiers:{number:!0}}],ref:"kilosInput",refInFor:!0,attrs:{type:"number"},domProps:{value:a.kilosVenta},on:{blur:[t.finishEditingKilos,function(e){return t.$forceUpdate()}],keyup:function(e){return!e.type.indexOf("key")&&t._k(e.keyCode,"enter",13,e.key,"Enter")?null:t.finishEditingKilos.apply(null,arguments)},input:function(e){e.target.composing||t.$set(a,"kilosVenta",t._n(e.target.value))}}}):t._e()]),e("td",[t._v(t._s(a.medida))]),e("td",[e("input",{directives:[{name:"model",rawName:"v-model.number",value:a.precioVenta,expression:"item.precioVenta",modifiers:{number:!0}}],staticClass:"precio-venta-input",attrs:{type:"number",inputmode:"decimal",pattern:"[0-9]*"},domProps:{value:a.precioVenta},on:{input:[function(e){e.target.composing||t.$set(a,"precioVenta",t._n(e.target.value))},function(e){return t.calcularTotalVenta(o)}],blur:function(e){return t.$forceUpdate()}}})]),e("td",[t._v("$"+t._s(t.formatNumber(a.totalVenta)))]),e("td",{class:{"desktop-only":!0,"ganancia-positiva":a.ganancia>0,"ganancia-negativa":a.ganancia<0}},[t._v(" $"+t._s(t.formatNumber(a.ganancia))+" ")])])})),null!==t.selectedRowIndex?e("tr",{staticClass:"mobile-only ganancia-row"},[e("td",{attrs:{colspan:"4"}},[e("strong",[t._v("Ganancias:")]),e("span",{class:{"ganancia-positiva":t.itemsVenta[t.selectedRowIndex].ganancia>0,"ganancia-negativa":t.itemsVenta[t.selectedRowIndex].ganancia<0}},[t._v(" $"+t._s(t.formatNumber(t.itemsVenta[t.selectedRowIndex].ganancia))+" ")])])]):t._e()],2),e("tfoot",[e("tr",{staticClass:"total"},[t._m(3),e("td",[e("strong",[t._v("$"+t._s(t.formatNumber(t.totalGeneralVenta)))])]),e("td",{staticClass:"desktop-only"},[e("strong",[t._v("$"+t._s(t.formatNumber(t.gananciaTotal)))])])])])]),e("div",{staticClass:"ganancia-del-dia"},[e("h3",[t._v("Ganancia del Día")]),e("p",{class:{"ganancia-positiva":t.gananciaDelDia>0,"ganancia-negativa":t.gananciaDelDia<0}},[t._v(" $"+t._s(t.formatNumber(t.gananciaDelDia))+" ")])]),e("h2",[t._v("Saldo pendiente")]),e("div",{staticClass:"saldo-pendiente"},[e("div",{staticClass:"input-row"},[e("span",[t._v("Saldo Acumulado Anterior: $"+t._s(t.formatNumber(t.saldoAcumuladoAnterior)))])]),t._l(t.cobros,(function(a,o){return e("div",{key:o,staticClass:"input-row"},[e("input",{directives:[{name:"model",rawName:"v-model",value:a.descripcion,expression:"cobro.descripcion"}],staticClass:"responsive-input",attrs:{type:"text",placeholder:"Flete"},domProps:{value:a.descripcion},on:{input:function(e){e.target.composing||t.$set(a,"descripcion",e.target.value)}}}),e("input",{directives:[{name:"model",rawName:"v-model",value:a.monto,expression:"cobro.monto"}],staticClass:"responsive-input",attrs:{type:"number",placeholder:"Monto"},domProps:{value:a.monto},on:{input:function(e){e.target.composing||t.$set(a,"monto",e.target.value)}}}),e("button",{staticClass:"delete-btn",on:{click:function(e){return t.removeCobro(o)}}},[t._v("Eliminar")])])})),e("button",{staticClass:"add-btn",on:{click:t.addCobro}},[t._v("Agregar Flete")])],2),e("h2",[t._v("Abonos")]),e("div",{staticClass:"abonos"},[t._l(t.abonos,(function(a,o){return e("div",{key:o,staticClass:"input-row"},[e("input",{directives:[{name:"model",rawName:"v-model",value:a.descripcion,expression:"abono.descripcion"}],staticClass:"responsive-input",attrs:{type:"text",placeholder:"Descripción"},domProps:{value:a.descripcion},on:{input:function(e){e.target.composing||t.$set(a,"descripcion",e.target.value)}}}),e("input",{directives:[{name:"model",rawName:"v-model.number",value:a.monto,expression:"abono.monto",modifiers:{number:!0}}],staticClass:"responsive-input",attrs:{type:"number",placeholder:"Monto"},domProps:{value:a.monto},on:{input:function(e){e.target.composing||t.$set(a,"monto",t._n(e.target.value))},blur:function(e){return t.$forceUpdate()}}}),e("button",{staticClass:"delete-btn",on:{click:function(e){return t.removeAbono(o)}}},[t._v("Eliminar")])])})),e("button",{staticClass:"add-btn",on:{click:t.addAbono}},[t._v("Agregar Abono")])],2),e("table",{staticClass:"tabla-saldo"},[e("tr",[e("td",[t._v("Saldo Acumulado Anterior")]),e("td",[t._v("$"+t._s(t.formatNumber(t.saldoAcumuladoAnterior)))])]),e("tr",[e("td",[t._v("Saldo Hoy")]),e("td",[t._v("$"+t._s(t.formatNumber(t.totalGeneralVenta)))])]),t._l(t.cobros,(function(a,o){return e("tr",{key:o},[e("td",[t._v(t._s(a.descripcion))]),e("td",[t._v("-$"+t._s(t.formatNumber(a.monto)))])])})),t._l(t.abonos,(function(a,o){return e("tr",{key:"abono-"+o},[e("td",[t._v(t._s(a.descripcion)+" (Abono)")]),e("td",[t._v("-$"+t._s(t.formatNumber(a.monto)))])])})),e("tr",{staticClass:"total"},[e("td",[t._v("Total")]),e("td",[t._v("$"+t._s(t.formatNumber(t.totalDiaActual)))])]),e("tr",{staticClass:"total"},[e("td",[t._v("Nuevo Saldo Acumulado")]),e("td",[t._v("$"+t._s(t.formatNumber(t.nuevoSaldoAcumulado)))])])],2),e("div",{staticClass:"button-container"},[e("button",{staticClass:"save-button",attrs:{disabled:t.isGuardando},on:{click:t.guardarNota}},[t._v(" "+t._s(t.isGuardando?"Guardando...":"Guardar Nota")+" ")]),e("button",{staticClass:"print-button",on:{click:t.imprimirTablas}},[t._v("Imprimir")])]),t.showMobileActions?e("div",{staticClass:"mobile-actions-modal"},[e("button",{staticClass:"edit-btn",on:{click:function(e){return t.editItem(t.selectedItemIndex)}}},[t._v("Editar")]),e("button",{staticClass:"delete-btn",on:{click:function(e){return t.removeItem(t.selectedItemIndex)}}},[t._v("Eliminar")]),e("button",{on:{click:t.cancelMobileActions}},[t._v("Cancelar")])]):t._e(),t.showEditModal?e("div",{staticClass:"edit-modal"},[e("h3",[t._v("Editar Item")]),e("div",{staticClass:"input-row"},[e("input",{directives:[{name:"model",rawName:"v-model.number",value:t.editingItem.kilos,expression:"editingItem.kilos",modifiers:{number:!0}}],staticClass:"responsive-input",attrs:{type:"number",placeholder:"Kilos",inputmode:"decimal",pattern:"[0-9]*"},domProps:{value:t.editingItem.kilos},on:{input:function(e){e.target.composing||t.$set(t.editingItem,"kilos",t._n(e.target.value))},blur:function(e){return t.$forceUpdate()}}}),e("input",{directives:[{name:"model",rawName:"v-model",value:t.editingItem.medida,expression:"editingItem.medida"}],staticClass:"responsive-input",attrs:{type:"text",placeholder:"Medida"},domProps:{value:t.editingItem.medida},on:{input:function(e){e.target.composing||t.$set(t.editingItem,"medida",e.target.value)}}}),e("input",{directives:[{name:"model",rawName:"v-model.number",value:t.editingItem.costo,expression:"editingItem.costo",modifiers:{number:!0}}],staticClass:"responsive-input",attrs:{type:"number",placeholder:"Costo",inputmode:"decimal",pattern:"[0-9]*"},domProps:{value:t.editingItem.costo},on:{input:function(e){e.target.composing||t.$set(t.editingItem,"costo",t._n(e.target.value))},blur:function(e){return t.$forceUpdate()}}})]),e("div",{staticClass:"button-row"},[e("button",{on:{click:t.saveEditedItem}},[t._v("Guardar")]),e("button",{on:{click:t.cancelEdit}},[t._v("Cancelar")])])]):t._e(),t.showAddProductModal?e("div",{staticClass:"modal"},[e("div",{staticClass:"modal-content"},[e("h3",[t._v("Agregar Nuevo Producto")]),e("div",{staticClass:"input-row"},[e("input",{directives:[{name:"model",rawName:"v-model.number",value:t.newProduct.kilosVenta,expression:"newProduct.kilosVenta",modifiers:{number:!0}}],staticClass:"responsive-input",attrs:{type:"number",placeholder:"Kilos",inputmode:"decimal",pattern:"[0-9]*"},domProps:{value:t.newProduct.kilosVenta},on:{input:function(e){e.target.composing||t.$set(t.newProduct,"kilosVenta",t._n(e.target.value))},blur:function(e){return t.$forceUpdate()}}}),e("input",{directives:[{name:"model",rawName:"v-model",value:t.newProduct.medida,expression:"newProduct.medida"}],staticClass:"responsive-input",attrs:{type:"text",placeholder:"Medida"},domProps:{value:t.newProduct.medida},on:{input:function(e){e.target.composing||t.$set(t.newProduct,"medida",e.target.value)}}}),e("input",{directives:[{name:"model",rawName:"v-model.number",value:t.newProduct.precioVenta,expression:"newProduct.precioVenta",modifiers:{number:!0}}],staticClass:"responsive-input",attrs:{type:"number",placeholder:"Precio de Venta",inputmode:"decimal",pattern:"[0-9]*"},domProps:{value:t.newProduct.precioVenta},on:{input:function(e){e.target.composing||t.$set(t.newProduct,"precioVenta",t._n(e.target.value))},blur:function(e){return t.$forceUpdate()}}})]),e("div",{staticClass:"button-row"},[e("button",{on:{click:t.addNewProduct}},[t._v("Agregar")]),e("button",{on:{click:function(e){t.showAddProductModal=!1}}},[t._v("Cancelar")])])])]):t._e(),e("div",{class:["estado-cuenta",t.estadoCuenta.toLowerCase(),{"no-pagado":"No Pagado"===t.estadoCuenta}]},[t._v(" "+t._s(t.estadoCuenta)+" ")]),e("div",{staticClass:"guardar-container"},[e("div",{staticClass:"observacion-container"},[e("button",{staticClass:"btn-agregar-observacion",on:{click:t.agregarObservacion}},[e("i",{staticClass:"fas fa-plus"}),t._v(" Agregar observación ")])]),t.observacion?e("div",{staticClass:"observacion-existente"},[e("div",{staticClass:"observacion-header"},[e("p",{staticClass:"observacion-titulo"},[t._v("Observación actual:")]),e("div",{staticClass:"observacion-buttons"},[e("button",{staticClass:"btn-editar",on:{click:t.editarObservacion}},[t._v("Editar")]),e("button",{staticClass:"btn-eliminar",attrs:{title:"Eliminar observación"},on:{click:t.eliminarObservacion}},[t._v("×")])])]),e("p",{staticClass:"observacion-texto"},[t._v(t._s(t.observacion))])]):t._e()]),t.showObservacionModal?e("div",{staticClass:"modal-overlay"},[e("div",{staticClass:"modal-content"},[e("h3",[t._v(t._s(t.observacion?"Editar":"Agregar")+" Observación")]),e("textarea",{directives:[{name:"model",rawName:"v-model",value:t.observacion,expression:"observacion"}],attrs:{placeholder:"Escribe tu observación aquí...",rows:"4"},domProps:{value:t.observacion},on:{input:function(e){e.target.composing||(t.observacion=e.target.value)}}}),e("div",{staticClass:"modal-buttons"},[e("button",{staticClass:"btn-guardar",on:{click:t.guardarObservacion}},[t._v("Guardar")]),e("button",{staticClass:"btn-cancelar",on:{click:t.cancelarObservacion}},[t._v("Cancelar")])])])]):t._e(),t.showSaveMessage?e("div",{staticClass:"auto-save-message"},[t._v(" "+t._s(t.lastSaveMessage)+" ")]):t._e()])},n=[function(){var t=this,e=t._self._c;return e("thead",[e("tr",[e("th",[t._v("Kilos")]),e("th",[t._v("Medida")]),e("th",[t._v("Costo")]),e("th",[t._v("Total")]),e("th",{staticClass:"desktop-only"},[t._v("Acciones")])])])},function(){var t=this,e=t._self._c;return e("td",{staticClass:"text-right",attrs:{colspan:"3"}},[e("strong",[t._v("Total General Costo:")])])},function(){var t=this,e=t._self._c;return e("thead",[e("tr",[e("th",[t._v("Kilos")]),e("th",[t._v("Medida")]),e("th",[t._v("Precio")]),e("th",[t._v("Total")]),e("th",{staticClass:"desktop-only"},[t._v("Ganancias")])])])},function(){var t=this,e=t._self._c;return e("td",{staticClass:"text-right",attrs:{colspan:"3"}},[e("strong",[t._v("Total General Venta:")])])}],i=(a("d9e2"),a("14d9"),a("13d5"),a("dc59")),s=a("1494"),r=a("74c9"),c=a("666c"),l=a("19aa"),d=a("03c4"),u=(a("fa40"),{name:"CuentasCatarro",components:{BackButton:r["a"],PreciosHistorialModal:c["a"],StashModal:l["a"],PreciosClienteButton:d["a"]},data(){return{items:[],newItem:{kilos:null,medida:"",costo:null,precioVenta:null},saldoAcumuladoAnterior:0,cobros:[],abonos:[],fechaSeleccionada:this.obtenerFechaActual(),showMobileActions:!1,selectedItemIndex:null,presionTimer:null,itemsVenta:[],showEditModal:!1,editingItem:null,editingIndex:null,estadoPagado:!1,editingKilosIndex:null,longPressTimer:null,editingField:{index:null,field:null},selectedRowIndex:null,showAddProductModal:!1,newProduct:{kilosVenta:null,medida:"",precioVenta:null},autoSaveTimer:null,lastSavedData:null,saveQueue:[],isSaving:!1,lastSaveTime:null,saveMinInterval:5e3,tieneObservacion:!1,showObservacionModal:!1,observacion:"",isGuardando:!1,lastSaveMessage:"",showSaveMessage:!1,saveMessageTimer:null}},computed:{fechaFormateada(){const t=new Date(this.fechaSeleccionada+"T00:00:00"),e={year:"numeric",month:"long",day:"numeric"};return t.toLocaleDateString("es-ES",e)},totalGeneral(){return this.items.reduce((t,e)=>t+(e.total||0),0)},totalGeneralVenta(){return this.itemsVenta.reduce((t,e)=>t+(e.totalVenta||0),0)},totalSaldo(){const t=this.cobros.reduce((t,e)=>t+(e.monto||0),0),e=this.abonos.reduce((t,e)=>t+(e.monto||0),0);return this.saldoAcumuladoAnterior+this.totalGeneralVenta+t-e},nuevoSaldoAcumulado(){return(this.saldoAcumuladoAnterior||0)+(this.totalDiaActual||0)},gananciaDelDia(){const t=this.items.reduce((t,e)=>t+(e.total||0),0);return(this.totalGeneralVenta||0)-(t||0)},saldoPendiente(){return this.totalGeneralVenta-this.abonos.reduce((t,e)=>t+(e.monto||0),0)},estadoCuenta(){return this.totalSaldo<=0||0===this.totalDiaActual?"Pagado":"No Pagado"},gananciaTotal(){return this.itemsVenta.reduce((t,e)=>t+(e.ganancia||0),0)},totalDiaActual(){const t=this.cobros.reduce((t,e)=>t+(parseFloat(e.monto)||0),0),e=this.abonos.reduce((t,e)=>t+(parseFloat(e.monto)||0),0);return(this.totalGeneralVenta||0)-t-e}},watch:{fechaSeleccionada:{handler:"loadSaldoAcumuladoAnterior",immediate:!0},items:{handler:"handleDataChange",deep:!0},itemsVenta:{handler:"handleDataChange",deep:!0},cobros:{handler:"handleDataChange",deep:!0},abonos:{handler:"handleDataChange",deep:!0},fechaSeleccionada:{handler:"handleDataChange"},saldoAcumuladoAnterior:{handler:"handleDataChange"},"newItem.kilos":"handleDataChange","newItem.medida":"handleDataChange","newItem.costo":"handleDataChange",observacion:"handleDataChange"},async mounted(){console.log("Mounted ejecutado",this.$route.params,this.$route.query);const t=this.$route.params.id,e="true"===this.$route.query.edit;t&&e?(console.log("Iniciando carga de cuenta existente"),await this.loadExistingCuenta(t)):(console.log("Cargando saldo acumulado anterior para nueva cuenta"),await this.loadSaldoAcumuladoAnterior())},methods:{async loadExistingCuenta(t){try{console.log("Cargando cuenta con ID:",t);const e=Object(s["e"])(i["a"],"cuentasCatarro",t),a=await Object(s["f"])(e);if(a.exists()){const t=a.data();console.log("Datos de la cuenta cargados:",t),this.$nextTick(()=>{this.items=t.items||[],this.saldoAcumuladoAnterior=t.saldoAcumuladoAnterior||0,this.cobros=t.cobros||[],this.abonos=t.abonos||[],this.fechaSeleccionada=t.fecha||this.obtenerFechaActual(),this.showObservacionModal=!1,this.tieneObservacion=t.tieneObservacion||!1,this.observacion=t.observacion||"",this.itemsVenta=t.itemsVenta||this.items.map(t=>({...t,precioVenta:t.precioVenta||0,totalVenta:(t.precioVenta||0)*t.kilos,kilosVenta:t.kilos})),this.actualizarItemsVenta(),console.log("Estado actualizado con $nextTick:",{items:this.items,saldoAcumuladoAnterior:this.saldoAcumuladoAnterior,cobros:this.cobros,abonos:this.abonos,fechaSeleccionada:this.fechaSeleccionada,itemsVenta:this.itemsVenta,tieneObservacion:this.tieneObservacion,observacion:this.observacion})})}else console.error("No se encontró la cuenta con el ID proporcionado")}catch(e){console.error("Error al cargar la cuenta existente: ",e)}},async loadSaldoAcumuladoAnterior(){try{this.saldoAcumuladoAnterior=await this.obtenerSaldoAcumuladoAnterior(),console.log("Saldo acumulado anterior cargado:",this.saldoAcumuladoAnterior)}catch(t){console.error("Error al cargar el saldo acumulado anterior:",t),this.saldoAcumuladoAnterior=0}},async obtenerSaldoAcumuladoAnterior(){try{const t=Object(s["c"])(i["a"],"cuentasCatarro"),e=Object(s["o"])(t,Object(s["s"])("fecha","<",this.fechaSeleccionada),Object(s["l"])("fecha","desc"),Object(s["j"])(1)),a=await Object(s["g"])(e);if(!a.empty){const t=a.docs[0].data();return t.nuevoSaldoAcumulado||0}return 0}catch(t){return console.error("Error al obtener saldo acumulado anterior:",t),0}},async actualizarCuentasPosteriores(t){try{const e=Object(s["c"])(i["a"],"cuentasCatarro"),a=Object(s["o"])(e,Object(s["s"])("fecha",">=",t),Object(s["l"])("fecha","asc"),Object(s["j"])(50)),o=await Object(s["g"])(a),n=o.docs.map(t=>({id:t.id,...t.data()}));let r=this.nuevoSaldoAcumulado;await Promise.all(n.map(async t=>{const e=t.totalGeneralVenta+(t.cobros||[]).reduce((t,e)=>t+(parseFloat(e.monto)||0),0)-(t.abonos||[]).reduce((t,e)=>t+(parseFloat(e.monto)||0),0);return r+=e,Object(s["r"])(Object(s["e"])(i["a"],"cuentasCatarro",t.id),{saldoAcumuladoAnterior:t.id===this.$route.params.id?this.saldoAcumuladoAnterior:r-e,nuevoSaldoAcumulado:r,estadoPagado:r<=0})}))}catch(e){throw console.error("Error al actualizar cuentas posteriores:",e),e}},formatNumber(t){return null===t||void 0===t?"0.00":t.toLocaleString("en-US",{minimumFractionDigits:2,maximumFractionDigits:2})},async addItem(){if(this.newItem.kilos&&this.newItem.medida&&this.newItem.costo&&this.newItem.precioVenta)try{const t=this.newItem.kilos*this.newItem.costo;this.items.push({kilos:this.newItem.kilos,medida:this.newItem.medida,costo:this.newItem.costo,total:t});let e=this.newItem.kilos;const a=this.calcularKilosCrudos(this.newItem.medida,this.newItem.kilos,!1);a!==this.newItem.kilos&&(e=a);const o=e*this.newItem.precioVenta,n=o-t;this.itemsVenta.push({kilosVenta:e,medida:this.newItem.medida,precioVenta:this.newItem.precioVenta,totalVenta:o,ganancia:n}),this.newItem={kilos:null,medida:"",costo:null,precioVenta:null},await this.queueSave()}catch(t){console.error("Error al guardar el item:",t),alert("Hubo un problema al guardar. Por favor, intente nuevamente."),this.items.pop(),this.itemsVenta.pop()}else alert("Por favor complete todos los campos")},async crearNuevaCuenta(){try{const t=Object(s["c"])(i["a"],"cuentasCatarro"),e=Object(s["o"])(t,Object(s["s"])("fecha","==",this.fechaSeleccionada)),a=await Object(s["g"])(e);if(!a.empty)throw new Error("Ya existe una nota registrada para esta fecha.");const o={fecha:this.fechaSeleccionada,items:this.items,itemsVenta:this.itemsVenta,saldoAcumuladoAnterior:await this.obtenerSaldoAcumuladoAnterior(),cobros:[],abonos:[],totalGeneral:this.totalGeneral,totalGeneralVenta:0,nuevoSaldoAcumulado:this.saldoAcumuladoAnterior,estadoPagado:!1,tieneObservacion:this.tieneObservacion,observacion:this.observacion},n=await Object(s["b"])(Object(s["c"])(i["a"],"cuentasCatarro"),o);return this.$router.replace({name:this.$route.name,params:{id:n.id},query:{edit:"true"}}),n.id}catch(t){throw"Ya existe una nota registrada para esta fecha."===t.message?alert(t.message):(console.error("Error al crear nueva cuenta:",t),alert("Error al crear la cuenta. Por favor, intente nuevamente.")),t}},async removeItem(t){try{this.items.splice(t,1),this.itemsVenta.splice(t,1),this.showMobileActions=!1,await this.queueSave()}catch(e){console.error("Error al eliminar item:",e)}},addCobro(){this.cobros.push({descripcion:"Flete",monto:0})},removeCobro(t){this.cobros.splice(t,1)},addAbono(){this.abonos.push({descripcion:"",monto:0})},removeAbono(t){this.abonos.splice(t,1)},obtenerFechaActual(){const t=new Date;return t.getFullYear()+"-"+String(t.getMonth()+1).padStart(2,"0")+"-"+String(t.getDate()).padStart(2,"0")},async guardarNota(){try{this.isGuardando=!0;const t=this.totalGeneralVenta-this.cobros.reduce((t,e)=>t+(parseFloat(e.monto)||0),0)-this.abonos.reduce((t,e)=>t+(parseFloat(e.monto)||0),0),e=await this.obtenerSaldoAcumuladoAnterior(),a=e+t,o=a<=0,n={fecha:this.fechaSeleccionada,items:this.items,saldoAcumuladoAnterior:e,cobros:this.cobros,abonos:this.abonos,totalGeneral:this.totalGeneral,totalGeneralVenta:this.totalGeneralVenta,nuevoSaldoAcumulado:o?0:a,gananciaDelDia:this.gananciaDelDia,estadoPagado:o,itemsVenta:this.itemsVenta,tieneObservacion:this.tieneObservacion,observacion:this.observacion,ultimaActualizacion:(new Date).toISOString()},r=this.$route.params.id,c="true"===this.$route.query.edit;if(r&&c)await Object(s["r"])(Object(s["e"])(i["a"],"cuentasCatarro",r),n),this.actualizarCuentasPosteriores(this.fechaSeleccionada).catch(console.error),alert("Cuenta guardada exitosamente"),this.$router.push("/cuentas-catarro");else{const t=Object(s["c"])(i["a"],"cuentasCatarro"),e=Object(s["o"])(t,Object(s["s"])("fecha","==",this.fechaSeleccionada)),a=await Object(s["g"])(e);if(!a.empty)return void alert("Ya existe una nota registrada para esta fecha. No se puede crear una nueva.");await Object(s["b"])(Object(s["c"])(i["a"],"cuentasCatarro"),n),this.actualizarCuentasPosteriores(this.fechaSeleccionada).catch(console.error),alert("Cuenta guardada exitosamente"),this.$router.push("/cuentas-catarro")}}catch(t){console.error("Error al guardar la cuenta:",t),alert("Error al guardar la cuenta")}finally{this.isGuardando=!1}},iniciarPresion(t){this.presionTimer=setTimeout(()=>{this.showMobileActionsModal(t)},500)},finalizarPresion(){clearTimeout(this.presionTimer)},showMobileActionsModal(t){this.selectedItemIndex=t,this.showMobileActions=!0},cancelMobileActions(){this.showMobileActions=!1,this.selectedItemIndex=null},editItem(t){this.editingIndex=t,this.editingItem={...this.items[t]},this.showEditModal=!0},saveEditedItem(){this.editingItem.kilos&&this.editingItem.medida&&this.editingItem.costo&&(this.editingItem.total=this.editingItem.kilos*this.editingItem.costo,this.items[this.editingIndex]={...this.editingItem},this.actualizarItemsVenta(),this.showEditModal=!1,this.editingItem=null,this.editingIndex=null)},cancelEdit(){this.showEditModal=!1,this.editingItem=null,this.editingIndex=null},imprimirTablas(){const t=`\n        <html>\n          <head>\n            <title>Cuentas Catarro - ${this.fechaFormateada}</title>\n            <style>\n              body {\n                font-family: Arial, sans-serif;\n                font-size: 20pt;\n                line-height: 1.6;\n                max-width: 800px;\n                margin: 0 auto;\n                padding: 20px;\n                text-align: center;\n              }\n              h1 { font-size: 30pt; margin-bottom: 20px; }\n              h2 { font-size: 27pt; margin-top: 30px; margin-bottom: 15px; }\n              table {\n                width: 100%;\n                border-collapse: collapse;\n                margin-bottom: 30px;\n                font-size: 20pt;\n              }\n              th, td {\n                border: 1px solid #ddd;\n                padding: 10px;\n                text-align: left;\n              }\n              th { background-color: #f2f2f2; font-weight: bold; }\n              .total { font-weight: bold; }\n              .total td:first-child { text-align: right; }\n              @media print {\n                body { font-size: 20pt; }\n                h1 { font-size: 25pt; }\n                h2 { font-size: 25pt; }\n                table { font-size: 20pt; }\n              }\n            </style>\n          </head>\n          <body>\n            <h1>Cuentas Catarro - ${this.fechaFormateada}</h1>\n            \n            <h2>Detalles de la cuenta</h2>\n            <table>\n              <thead>\n                <tr>\n                  <th>Kilos</th>\n                  <th>Medida</th>\n                  <th>Costo</th>\n                  <th>Total</th>\n                </tr>\n              </thead>\n              <tbody>\n                ${this.items.map(t=>`\n                  <tr>\n                    <td>${this.formatNumber(t.kilos)}</td>\n                    <td>${t.medida}</td>\n                    <td>$${this.formatNumber(t.costo)}</td>\n                    <td>$${this.formatNumber(t.total)}</td>\n                  </tr>\n                `).join("")}\n              </tbody>\n              <tfoot>\n                <tr class="total">\n                  <td colspan="3">Total</td>\n                  <td>$${this.formatNumber(this.totalGeneral)}</td>\n                </tr>\n              </tfoot>\n            </table>\n\n            <h2>Precios de Venta</h2>\n            <table>\n              <thead>\n                <tr>\n                  <th>Kilos</th>\n                  <th>Medida</th>\n                  <th>Precio de Venta</th>\n                  <th>Total</th>\n                  <th>Ganancias</th>\n                </tr>\n              </thead>\n              <tbody>\n                ${this.itemsVenta.map(t=>`\n                  <tr>\n                    <td>${this.formatNumber(t.kilosVenta)}</td>\n                    <td>${t.medida}</td>\n                    <td>$${this.formatNumber(t.precioVenta)}</td>\n                    <td>$${this.formatNumber(t.totalVenta)}</td>\n                    <td class="${t.ganancia>0?"ganancia-positiva":"ganancia-negativa"}">$${this.formatNumber(t.ganancia)}</td>\n                  </tr>\n                `).join("")}\n              </tbody>\n              <tfoot>\n                <tr class="total">\n                  <td colspan="3">Total Venta</td>\n                  <td>$${this.formatNumber(this.totalGeneralVenta)}</td>\n                  <td>$${this.formatNumber(this.gananciaTotal)}</td>\n                </tr>\n              </tfoot>\n            </table>\n\n            <h2>Resumen de saldo</h2>\n            <table>\n              <tr>\n                <td>Saldo Anterior</td>\n                <td>$${this.formatNumber(this.saldoAcumuladoAnterior)}</td>\n              </tr>\n              <tr>\n                <td>Saldo Hoy</td>\n                <td>$${this.formatNumber(this.totalGeneralVenta)}</td>\n              </tr>\n              ${this.cobros.map(t=>`\n                <tr>\n                  <td>${t.descripcion}</td>\n                  <td>$${this.formatNumber(t.monto)}</td>\n                </tr>\n              `).join("")}\n              ${this.abonos.map(t=>`\n                <tr>\n                  <td>${t.descripcion} (Abono)</td>\n                  <td>-$${this.formatNumber(t.monto)}</td>\n                </tr>\n              `).join("")}\n              <tr class="total">\n                <td>Total</td>\n                <td>$${this.formatNumber(this.totalSaldo)}</td>\n              </tr>\n            </table>\n          </body>\n        </html>\n      `,e=window.open("","_blank");e.document.write(t),e.document.close(),e.print()},actualizarItemsVenta(){this.itemsVenta=this.itemsVenta.map((t,e)=>{const a=this.items[e],o=(t.precioVenta||0)*(t.kilosVenta||0),n=a?a.total:0,i=o-n;return{...t,totalVenta:o,ganancia:i}})},calcularTotalVenta(t){const e=this.itemsVenta[t];if(e)try{const a=parseFloat(e.kilosVenta)||0,o=parseFloat(e.precioVenta)||0;e.totalVenta=a*o;const n=this.items[t],i=n&&n.total||0;e.ganancia=(e.totalVenta||0)-i,this.actualizarItemsVenta(),this.queueSave()}catch(a){console.error("Error al calcular total de venta:",a)}},removeItemVenta(t){this.itemsVenta.splice(t,1)},editKilos(t){this.editingKilosIndex=t,this.$nextTick(()=>{this.$refs.kilosInput&&this.$refs.kilosInput[0]&&this.$refs.kilosInput[0].focus()})},finishEditingKilos(){const t=this.editingKilosIndex;if(null!==t)try{const e=this.itemsVenta[t],a=this.items[t];if(a){const t=this.calcularKilosCrudos(e.medida,parseFloat(e.kilosVenta)||a.kilos,!1);e.kilosVenta=t}else e.kilosVenta=parseFloat(e.kilosVenta)||0;this.calcularTotalVenta(t),this.queueSave()}catch(e){console.error("Error al finalizar edición de kilos:",e)}this.editingKilosIndex=null},startLongPress(t,e){this.longPressTimer=setTimeout(()=>{this.editField(t,e)},500)},endLongPress(){clearTimeout(this.longPressTimer)},editField(t,e){this.editingField={index:t,field:e},this.$nextTick(()=>{this.$refs.editInput&&this.$refs.editInput[0]&&this.$refs.editInput[0].focus()})},finishEditing(){const{index:t,field:e}=this.editingField;if(null!==t&&null!==e)try{const a=this.items[t];"kilos"!==e&&"costo"!==e||(a[e]=parseFloat(a[e])||0),a.total=a.kilos*a.costo,this.actualizarItemsVenta(),this.queueSave()}catch(a){console.error("Error al finalizar edición:",a)}this.editingField={index:null,field:null}},toggleGananciasMobile(t){window.innerWidth<=600&&(this.selectedRowIndex=this.selectedRowIndex===t?null:t)},addNewProduct(){if(this.newProduct.kilosVenta&&this.newProduct.medida&&this.newProduct.precioVenta){const t=this.calcularKilosCrudos(this.newProduct.medida,this.newProduct.kilosVenta,!1),e=t*this.newProduct.precioVenta;this.itemsVenta.push({kilosVenta:t,medida:this.newProduct.medida,precioVenta:this.newProduct.precioVenta,totalVenta:e,ganancia:e}),this.showAddProductModal=!1,this.newProduct={kilosVenta:null,medida:"",precioVenta:null},this.queueSave()}else alert("Por favor, complete todos los campos")},handleDataChange(){this.$route.params.id&&"true"===this.$route.query.edit&&(this.autoSaveTimer&&clearTimeout(this.autoSaveTimer),this.autoSaveTimer=setTimeout(async()=>{await this.queueSave()},2e3))},async queueSave(){this.saveQueue.push({timestamp:Date.now(),operation:async()=>{this.$route.params.id?await this.autoSaveNota():await this.crearNuevaCuenta()}}),this.isSaving||await this.processSaveQueue()},async processSaveQueue(){if(!this.isSaving&&0!==this.saveQueue.length){this.isSaving=!0;try{while(this.saveQueue.length>0){const t=Date.now();this.lastSaveTime&&t-this.lastSaveTime<this.saveMinInterval&&await new Promise(e=>setTimeout(e,this.saveMinInterval-(t-this.lastSaveTime)));const e=this.saveQueue[0];await this.retryOperation(e.operation),this.lastSaveTime=Date.now(),this.saveQueue.shift()}}catch(t){console.error("Error procesando cola de guardado:",t),"resource-exhausted"===t.code&&(await new Promise(t=>setTimeout(t,1e4)),await this.processSaveQueue())}finally{this.isSaving=!1}}},async autoSaveNota(){if(this.$route.params.id)try{const t={items:this.items.map(t=>({kilos:t.kilos,medida:t.medida,costo:t.costo,total:t.total})),itemsVenta:this.itemsVenta.map(t=>({kilosVenta:t.kilosVenta,medida:t.medida,precioVenta:t.precioVenta,totalVenta:t.totalVenta,ganancia:t.ganancia})),totalGeneral:this.totalGeneral,totalGeneralVenta:this.totalGeneralVenta,nuevoSaldoAcumulado:this.nuevoSaldoAcumulado,cobros:this.cobros,abonos:this.abonos,estadoPagado:"Pagado"===this.estadoCuenta,tieneObservacion:this.tieneObservacion,observacion:this.observacion,ultimaActualizacion:(new Date).toISOString()};await Object(s["r"])(Object(s["e"])(i["a"],"cuentasCatarro",this.$route.params.id),t),this.lastSaveMessage="Guardado automático: "+(new Date).toLocaleTimeString(),this.showSaveMessage=!0,this.saveMessageTimer&&clearTimeout(this.saveMessageTimer),this.saveMessageTimer=setTimeout(()=>{this.showSaveMessage=!1},3e3),console.log("Cuenta auto-guardada exitosamente:",(new Date).toLocaleTimeString())}catch(t){if("resource-exhausted"===t.code)throw t;throw console.error("Error en auto-guardado:",t),t}},guardarCuenta(){this.guardarNota()},agregarObservacion(){this.showObservacionModal=!0},guardarObservacion(){this.observacion.trim()&&(this.tieneObservacion=!0),this.showObservacionModal=!1},cancelarObservacion(){this.tieneObservacion||(this.observacion=""),this.showObservacionModal=!1},editarObservacion(){this.showObservacionModal=!0},eliminarObservacion(){confirm("¿Estás seguro de que deseas eliminar esta observación?")&&(this.observacion="",this.tieneObservacion=!1)},async retryOperation(t,e=3){let a=0;while(a<e)try{return await t()}catch(o){if(a++,console.error(`Error en operación (intento ${a}/${e}):`,o),"resource-exhausted"===o.code?await new Promise(t=>setTimeout(t,5e3*Math.pow(2,a))):await new Promise(t=>setTimeout(t,1e3*Math.pow(2,a))),a>=e)throw console.error("Se alcanzó el número máximo de intentos. Operación fallida."),o}},calcularKilosCrudos(t,e,a=!1){const o=t.toLowerCase().trim(),n=/^(\d+)-(\d+)$/.exec(o);if(n){const t=parseInt(n[1])||0,i=parseInt(n[2])||0,s=19!==i||a?i:20,r=t*s;return 19!==i||a||r===e?19===i&&a&&console.log(`Cálculo de crudos para tabla de costos: ${t} cajas * 19kg = ${r}kg (formato ${o})`):(this.lastSaveMessage=`Cálculo de crudos: ${t} cajas * 20kg = ${r}kg (formato ${o})`,this.showSaveMessage=!0,this.saveMessageTimer&&clearTimeout(this.saveMessageTimer),this.saveMessageTimer=setTimeout(()=>{this.showSaveMessage=!1},3e3)),r}const i=o.includes("crudo");if(i&&/^\d+\*\d+(\+\d+)?$/.test(o)){const t=o.split(/[\*\+]/);if(t.length>=2){const e=parseInt(t[0])||0,o=parseInt(t[1])||0,n=19!==o||a?o:20;let i=e*n;return t.length>2&&(i+=parseInt(t[2])||0),i}}return e}},beforeUnmount(){this.autoSaveTimer&&clearTimeout(this.autoSaveTimer),this.saveQueue.length>0&&this.processSaveQueue()}}),m=u,h=(a("7255"),a("2877")),v=Object(h["a"])(m,o,n,!1,null,"c8442d9a",null);e["a"]=v.exports},"6a76":function(t,e,a){"use strict";a("0987")},7255:function(t,e,a){"use strict";a("beb3")},beb3:function(t,e,a){}}]);