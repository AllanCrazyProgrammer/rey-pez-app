(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["app.76e92ee3"],{"0513":function(e,t,a){},"24d5":function(e,t,a){"use strict";var s=function(){var e=this,t=e._self._c;return t("div",{staticClass:"catarro-cuentas-menu-container"},[t("h1",[e._v("Menú de Cuentas Catarro")]),t("div",{staticClass:"actions-container"},[t("router-link",{staticClass:"action-button back-btn",attrs:{to:"/cuentas-mexico"}},[e._v(" Cuentas México ")]),t("router-link",{staticClass:"action-button new-cuenta-btn",attrs:{to:"/cuentas-catarro/nueva"}},[e._v(" Nueva Cuenta ")]),t("router-link",{staticClass:"action-button ventas-ganancias-btn",attrs:{to:"/ventas-ganancias-catarro"}},[e._v(" Ventas y Ganancias ")]),t("PreciosHistorialModal"),t("StashModal",{attrs:{cliente:"catarro"}})],1),t("div",{staticClass:"filter-container"},[t("label",{attrs:{for:"filter-select"}},[e._v("Filtrar por estado:")]),t("select",{directives:[{name:"model",rawName:"v-model",value:e.filtroEstado,expression:"filtroEstado"}],attrs:{id:"filter-select"},on:{change:function(t){var a=Array.prototype.filter.call(t.target.options,(function(e){return e.selected})).map((function(e){var t="_value"in e?e._value:e.value;return t}));e.filtroEstado=t.target.multiple?a:a[0]}}},[t("option",{attrs:{value:"todas"}},[e._v("Todas")]),t("option",{attrs:{value:"pagadas"}},[e._v("Pagadas")]),t("option",{attrs:{value:"no-pagadas"}},[e._v("No Pagadas")])])]),t("div",{staticClass:"cuentas-list"},[t("h2",[e._v("Registros de Cuentas")]),e.isLoading?t("div",{staticClass:"loading"},[e._v("Cargando registros...")]):0===e.cuentasFiltradas.length?t("div",{staticClass:"no-records"},[e._v(" No hay registros de cuentas que coincidan con el filtro. ")]):t("ul",e._l(e.cuentasFiltradas,(function(a){return t("li",{key:a.id,staticClass:"cuenta-item",class:{"tiene-observacion":a.tieneObservacion}},[t("div",{staticClass:"cuenta-content"},[t("span",{staticClass:"cuenta-date"},[e._v(e._s(e.formatDate(a.fecha)))]),t("p",{staticClass:"cuenta-summary"},[t("span",[e._v("Saldo Hoy: $"+e._s(e.formatNumber(a.saldoHoy)))]),t("span",[e._v("Total Acumulado: $"+e._s(e.formatNumber(a.totalNota)))])]),a.tieneObservacion?t("div",{staticClass:"observacion-container"},[t("p",{staticClass:"observacion-texto"},[e._v(e._s(a.observacion))]),t("button",{staticClass:"delete-observacion-btn",attrs:{title:"Borrar observación"},on:{click:function(t){return e.borrarObservacion(a.id)}}},[e._v("×")])]):e._e(),a.abonos&&a.abonos.length>0?t("div",{staticClass:"abonos-info"},e._l(a.abonos,(function(a,s){return t("p",{key:s,staticClass:"abono-detail"},[t("span",{staticClass:"abono-label"},[e._v("Abono:")]),t("span",{staticClass:"abono-monto"},[e._v("$"+e._s(e.formatNumber(a.monto)))]),t("span",{staticClass:"abono-descripcion"},[e._v(e._s(a.descripcion||"Sin descripción"))])])})),0):e._e(),t("span",{class:["estado-cuenta",a.estadoPagado?"pagado":"no-pagado"]},[e._v(" "+e._s(a.estadoPagado?"Pagado":"No Pagado")+" ")])]),t("div",{staticClass:"cuenta-actions"},[t("button",{staticClass:"edit-btn",on:{click:function(t){return e.editarCuenta(a.id)}}},[e._v("Editar")]),t("button",{staticClass:"delete-btn",on:{click:function(t){return e.borrarCuenta(a.id)}}},[e._v("Borrar")])])])})),0)]),e.showSaveMessage&&e.lastSaveMessage?[t("div",{staticClass:"save-message"},[e._v(" "+e._s(e.lastSaveMessage)+" ")])]:e._e()],2)},o=[],i=(a("14d9"),a("13d5"),a("dc59")),n=a("1494"),r=a("74c9"),c=a("666c"),l=a("19aa1"),d={name:"CatarroCuentasMenu",components:{BackButton:r["a"],PreciosHistorialModal:c["a"],StashModal:l["a"]},data(){return{cuentas:[],isLoading:!0,filtroEstado:"todas",unsubscribe:null,lastSaveMessage:"",showSaveMessage:!1,saveMessageTimer:null}},computed:{cuentasFiltradas(){switch(this.filtroEstado){case"pagadas":return this.cuentas.filter(e=>e.estadoPagado);case"no-pagadas":return this.cuentas.filter(e=>!e.estadoPagado);default:return this.cuentas}}},methods:{async loadCuentas(){try{this.isLoading=!0;const e=Object(n["c"])(i["a"],"cuentasCatarro"),t=Object(n["o"])(e,Object(n["l"])("fecha","asc"));this.unsubscribe=Object(n["k"])(t,async e=>{const t=e.docs.map(e=>{const t=e.data(),a=(t.cobros||[]).reduce((e,t)=>e+(parseFloat(t.monto)||0),0),s=(t.abonos||[]).reduce((e,t)=>e+(parseFloat(t.monto)||0),0),o=(t.totalGeneralVenta||0)-a-s;return{id:e.id,fecha:t.fecha,saldoHoy:t.totalGeneralVenta||0,totalCobros:a,totalAbonos:s,totalNota:t.nuevoSaldoAcumulado||0,estadoPagado:0===o,nuevoSaldoAcumulado:t.nuevoSaldoAcumulado||0,saldoAcumuladoAnterior:t.saldoAcumuladoAnterior||0,abonos:t.abonos||[],tieneObservacion:t.tieneObservacion||!1,observacion:t.observacion||""}}),a=t.sort((e,t)=>new Date(e.fecha)-new Date(t.fecha));let s=0;const o=[];for(let i=0;i<a.length;i++){const e=a[i],t=e.saldoHoy-e.totalCobros-e.totalAbonos;s+=t;const n=0===i?0:a[i-1].nuevoSaldoAcumulado;e.saldoAcumuladoAnterior===n&&e.nuevoSaldoAcumulado===s||o.push({id:e.id,updates:{saldoAcumuladoAnterior:n,nuevoSaldoAcumulado:s,estadoPagado:0===t}}),e.totalNota=s,e.saldoAcumuladoAnterior=n,e.estadoPagado=0===t,s<=0&&(s=0)}o.length>0&&await Promise.all(o.map(({id:e,updates:t})=>Object(n["r"])(Object(n["e"])(i["a"],"cuentasCatarro",e),t))),this.cuentas=a.reverse(),this.isLoading=!1})}catch(e){console.error("Error al cargar cuentas: ",e),this.error=e.message,this.cuentas=[],this.isLoading=!1}},formatDate(e){const t=new Date(e);return t.setMinutes(t.getMinutes()+t.getTimezoneOffset()),t.toLocaleDateString("es-ES",{year:"numeric",month:"long",day:"numeric"})},formatNumber(e){return e.toLocaleString("es-ES",{minimumFractionDigits:2,maximumFractionDigits:2})},editarCuenta(e){this.$router.push(`/cuentas-catarro/${e}?edit=true`)},async borrarCuenta(e){if(confirm("¿Estás seguro de que quieres borrar este registro de cuenta?"))try{await Object(n["d"])(Object(n["e"])(i["a"],"cuentasCatarro",e)),"Registro de cuenta borrado con éxito"===this.lastSaveMessage&&this.showSaveMessage||(this.lastSaveMessage="Registro de cuenta borrado con éxito",this.showSaveMessage=!0,this.saveMessageTimer&&clearTimeout(this.saveMessageTimer),this.saveMessageTimer=setTimeout(()=>{this.showSaveMessage=!1},3e3))}catch(t){console.error("Error al borrar el registro de cuenta: ",t),"Error al borrar el registro de cuenta"===this.lastSaveMessage&&this.showSaveMessage||(this.lastSaveMessage="Error al borrar el registro de cuenta",this.showSaveMessage=!0,this.saveMessageTimer&&clearTimeout(this.saveMessageTimer),this.saveMessageTimer=setTimeout(()=>{this.showSaveMessage=!1},3e3))}},async borrarObservacion(e){if(confirm("¿Estás seguro de que quieres borrar esta observación?"))try{await Object(n["r"])(Object(n["e"])(i["a"],"cuentasCatarro",e),{tieneObservacion:!1,observacion:""}),"Observación borrada con éxito"===this.lastSaveMessage&&this.showSaveMessage||(this.lastSaveMessage="Observación borrada con éxito",this.showSaveMessage=!0,this.saveMessageTimer&&clearTimeout(this.saveMessageTimer),this.saveMessageTimer=setTimeout(()=>{this.showSaveMessage=!1},3e3))}catch(t){console.error("Error al borrar la observación: ",t),"Error al borrar la observación"===this.lastSaveMessage&&this.showSaveMessage||(this.lastSaveMessage="Error al borrar la observación",this.showSaveMessage=!0,this.saveMessageTimer&&clearTimeout(this.saveMessageTimer),this.saveMessageTimer=setTimeout(()=>{this.showSaveMessage=!1},3e3))}}},mounted(){this.loadCuentas()},beforeUnmount(){this.unsubscribe&&this.unsubscribe()}},u=d,m=(a("24e2"),a("2877")),h=Object(m["a"])(u,s,o,!1,null,"54541d32",null);t["a"]=h.exports},"24e2":function(e,t,a){"use strict";a("f232")},"4786f":function(e,t,a){"use strict";var s=function(){var e=this,t=e._self._c;return t("div",{staticClass:"cuentas-catarro-container"},[e.isSaving&&!e.showSaveMessage?t("div",{staticClass:"auto-save-indicator"},[t("span",{staticClass:"save-dot"}),e._v(" Guardando... ")]):e._e(),t("div",{staticClass:"back-button-container"},[t("BackButton",{attrs:{to:"/cuentas-catarro"}}),t("PreciosHistorialModal",{attrs:{clienteActual:"catarro"}}),t("StashModal",{attrs:{cliente:"catarro"}})],1),t("h1",[e._v("Cuentas Catarro")]),t("div",{staticClass:"precios-button-container"},[t("PreciosClienteButton",{attrs:{clienteId:"catarro"}})],1),t("div",{staticClass:"fecha-actual"},[t("div",{staticClass:"fecha-input"},[t("input",{directives:[{name:"model",rawName:"v-model",value:e.fechaSeleccionada,expression:"fechaSeleccionada"}],attrs:{type:"date"},domProps:{value:e.fechaSeleccionada},on:{input:function(t){t.target.composing||(e.fechaSeleccionada=t.target.value)}}})]),t("div",{staticClass:"fecha-display"},[e._v(" "+e._s(e.fechaFormateada)+" ")])]),t("div",{staticClass:"input-section"},[t("h2",[e._v("Ingresar Datos")]),t("div",{staticClass:"input-row"},[t("input",{directives:[{name:"model",rawName:"v-model.number",value:e.newItem.kilos,expression:"newItem.kilos",modifiers:{number:!0}}],staticClass:"responsive-input",attrs:{type:"number",placeholder:"Kilos",inputmode:"decimal",pattern:"[0-9]*"},domProps:{value:e.newItem.kilos},on:{input:function(t){t.target.composing||e.$set(e.newItem,"kilos",e._n(t.target.value))},blur:function(t){return e.$forceUpdate()}}}),t("input",{directives:[{name:"model",rawName:"v-model",value:e.newItem.medida,expression:"newItem.medida"}],staticClass:"responsive-input",attrs:{type:"text",placeholder:"Medida"},domProps:{value:e.newItem.medida},on:{input:function(t){t.target.composing||e.$set(e.newItem,"medida",t.target.value)}}}),t("input",{directives:[{name:"model",rawName:"v-model.number",value:e.newItem.costo,expression:"newItem.costo",modifiers:{number:!0}}],staticClass:"responsive-input",attrs:{type:"number",placeholder:"Costo",inputmode:"decimal",pattern:"[0-9]*"},domProps:{value:e.newItem.costo},on:{input:function(t){t.target.composing||e.$set(e.newItem,"costo",e._n(t.target.value))},blur:function(t){return e.$forceUpdate()}}}),t("input",{directives:[{name:"model",rawName:"v-model.number",value:e.newItem.precioVenta,expression:"newItem.precioVenta",modifiers:{number:!0}}],staticClass:"responsive-input",attrs:{type:"number",placeholder:"Precio Venta",inputmode:"decimal",pattern:"[0-9]*"},domProps:{value:e.newItem.precioVenta},on:{input:function(t){t.target.composing||e.$set(e.newItem,"precioVenta",e._n(t.target.value))},blur:function(t){return e.$forceUpdate()}}}),t("button",{on:{click:e.addItem}},[e._v("Agregar")])])]),t("table",{staticClass:"tabla-principal"},[e._m(0),t("tbody",e._l(e.items,(function(a,s){return t("tr",{key:s},[t("td",{on:{click:function(t){return e.editField(s,"kilos")},touchstart:function(t){return e.startLongPress(s,"kilos")},touchend:e.endLongPress}},[e._v(" "+e._s(e.editingField.index===s&&"kilos"===e.editingField.field?"":e.formatNumber(a.kilos))+" "),e.editingField.index===s&&"kilos"===e.editingField.field?t("input",{directives:[{name:"model",rawName:"v-model.number",value:a.kilos,expression:"item.kilos",modifiers:{number:!0}}],ref:"editInput",refInFor:!0,attrs:{type:"number"},domProps:{value:a.kilos},on:{blur:[e.finishEditing,function(t){return e.$forceUpdate()}],keyup:function(t){return!t.type.indexOf("key")&&e._k(t.keyCode,"enter",13,t.key,"Enter")?null:e.finishEditing.apply(null,arguments)},input:function(t){t.target.composing||e.$set(a,"kilos",e._n(t.target.value))}}}):e._e()]),t("td",{on:{click:function(t){return e.editField(s,"medida")},touchstart:function(t){return e.startLongPress(s,"medida")},touchend:e.endLongPress}},[e._v(" "+e._s(e.editingField.index===s&&"medida"===e.editingField.field?"":a.medida)+" "),e.editingField.index===s&&"medida"===e.editingField.field?t("input",{directives:[{name:"model",rawName:"v-model",value:a.medida,expression:"item.medida"}],ref:"editInput",refInFor:!0,attrs:{type:"text"},domProps:{value:a.medida},on:{blur:e.finishEditing,keyup:function(t){return!t.type.indexOf("key")&&e._k(t.keyCode,"enter",13,t.key,"Enter")?null:e.finishEditing.apply(null,arguments)},input:function(t){t.target.composing||e.$set(a,"medida",t.target.value)}}}):e._e()]),t("td",{on:{click:function(t){return e.editField(s,"costo")},touchstart:function(t){return e.startLongPress(s,"costo")},touchend:e.endLongPress}},[e._v(" "+e._s(e.editingField.index===s&&"costo"===e.editingField.field?"":"$"+e.formatNumber(a.costo))+" "),e.editingField.index===s&&"costo"===e.editingField.field?t("input",{directives:[{name:"model",rawName:"v-model.number",value:a.costo,expression:"item.costo",modifiers:{number:!0}}],ref:"editInput",refInFor:!0,attrs:{type:"number"},domProps:{value:a.costo},on:{blur:[e.finishEditing,function(t){return e.$forceUpdate()}],keyup:function(t){return!t.type.indexOf("key")&&e._k(t.keyCode,"enter",13,t.key,"Enter")?null:e.finishEditing.apply(null,arguments)},input:function(t){t.target.composing||e.$set(a,"costo",e._n(t.target.value))}}}):e._e()]),t("td",[e._v("$"+e._s(e.formatNumber(a.total)))]),t("td",{staticClass:"action-column desktop-only"},[t("button",{staticClass:"delete-btn",on:{click:function(t){return e.removeItem(s)}}},[e._v("Eliminar")])])])})),0),t("tfoot",[t("tr",{staticClass:"total"},[e._m(1),t("td",[t("strong",[e._v("$"+e._s(e.formatNumber(e.totalGeneral)))])]),t("td")])])]),t("h2",[e._v("Precios de Venta")]),t("div",{staticClass:"add-product-button"},[t("button",{on:{click:function(t){e.showAddProductModal=!0}}},[e._v("Agregar Producto")])]),t("table",{staticClass:"tabla-venta"},[e._m(2),t("tbody",[e._l(e.itemsVenta,(function(a,s){return t("tr",{key:s,on:{click:function(t){return e.toggleGananciasMobile(s)}}},[t("td",{on:{click:function(t){return e.editKilos(s)},touchstart:function(t){return e.startLongPress(s)},touchend:e.endLongPress}},[e._v(" "+e._s(e.editingKilosIndex===s?"":e.formatNumber(a.kilosVenta))+" "),e.editingKilosIndex===s?t("input",{directives:[{name:"model",rawName:"v-model.number",value:a.kilosVenta,expression:"item.kilosVenta",modifiers:{number:!0}}],ref:"kilosInput",refInFor:!0,attrs:{type:"number"},domProps:{value:a.kilosVenta},on:{blur:[e.finishEditingKilos,function(t){return e.$forceUpdate()}],keyup:function(t){return!t.type.indexOf("key")&&e._k(t.keyCode,"enter",13,t.key,"Enter")?null:e.finishEditingKilos.apply(null,arguments)},input:function(t){t.target.composing||e.$set(a,"kilosVenta",e._n(t.target.value))}}}):e._e()]),t("td",[e._v(e._s(a.medida))]),t("td",[t("input",{directives:[{name:"model",rawName:"v-model.number",value:a.precioVenta,expression:"item.precioVenta",modifiers:{number:!0}}],staticClass:"precio-venta-input",attrs:{type:"number",inputmode:"decimal",pattern:"[0-9]*"},domProps:{value:a.precioVenta},on:{input:[function(t){t.target.composing||e.$set(a,"precioVenta",e._n(t.target.value))},function(t){return e.calcularTotalVenta(s)}],blur:function(t){return e.$forceUpdate()}}})]),t("td",[e._v("$"+e._s(e.formatNumber(a.totalVenta)))]),t("td",{class:{"desktop-only":!0,"ganancia-positiva":a.ganancia>0,"ganancia-negativa":a.ganancia<0}},[e._v(" $"+e._s(e.formatNumber(a.ganancia))+" ")])])})),null!==e.selectedRowIndex?t("tr",{staticClass:"mobile-only ganancia-row"},[t("td",{attrs:{colspan:"4"}},[t("strong",[e._v("Ganancias:")]),t("span",{class:{"ganancia-positiva":e.itemsVenta[e.selectedRowIndex].ganancia>0,"ganancia-negativa":e.itemsVenta[e.selectedRowIndex].ganancia<0}},[e._v(" $"+e._s(e.formatNumber(e.itemsVenta[e.selectedRowIndex].ganancia))+" ")])])]):e._e()],2),t("tfoot",[t("tr",{staticClass:"total"},[e._m(3),t("td",[t("strong",[e._v("$"+e._s(e.formatNumber(e.totalGeneralVenta)))])]),t("td",{staticClass:"desktop-only"},[t("strong",[e._v("$"+e._s(e.formatNumber(e.gananciaTotal)))])])])])]),t("div",{staticClass:"ganancia-del-dia"},[t("h3",[e._v("Ganancia del Día")]),t("p",{class:{"ganancia-positiva":e.gananciaDelDia>0,"ganancia-negativa":e.gananciaDelDia<0}},[e._v(" $"+e._s(e.formatNumber(e.gananciaDelDia))+" ")])]),t("h2",[e._v("Saldo pendiente")]),t("div",{staticClass:"saldo-pendiente"},[t("div",{staticClass:"input-row"},[t("span",[e._v("Saldo Acumulado Anterior: $"+e._s(e.formatNumber(e.saldoAcumuladoAnterior)))])]),e._l(e.cobros,(function(a,s){return t("div",{key:s,staticClass:"input-row"},[t("input",{directives:[{name:"model",rawName:"v-model",value:a.descripcion,expression:"cobro.descripcion"}],staticClass:"responsive-input",attrs:{type:"text",placeholder:"Flete"},domProps:{value:a.descripcion},on:{input:function(t){t.target.composing||e.$set(a,"descripcion",t.target.value)}}}),t("input",{directives:[{name:"model",rawName:"v-model",value:a.monto,expression:"cobro.monto"}],staticClass:"responsive-input",attrs:{type:"number",placeholder:"Monto"},domProps:{value:a.monto},on:{input:function(t){t.target.composing||e.$set(a,"monto",t.target.value)}}}),t("button",{staticClass:"delete-btn",on:{click:function(t){return e.removeCobro(s)}}},[e._v("Eliminar")])])})),t("button",{staticClass:"add-btn",on:{click:e.addCobro}},[e._v("Agregar Flete")])],2),t("h2",[e._v("Abonos")]),t("div",{staticClass:"abonos"},[e._l(e.abonos,(function(a,s){return t("div",{key:s,staticClass:"input-row"},[t("input",{directives:[{name:"model",rawName:"v-model",value:a.descripcion,expression:"abono.descripcion"}],staticClass:"responsive-input",attrs:{type:"text",placeholder:"Descripción"},domProps:{value:a.descripcion},on:{input:function(t){t.target.composing||e.$set(a,"descripcion",t.target.value)}}}),t("input",{directives:[{name:"model",rawName:"v-model.number",value:a.monto,expression:"abono.monto",modifiers:{number:!0}}],staticClass:"responsive-input",attrs:{type:"number",placeholder:"Monto"},domProps:{value:a.monto},on:{input:function(t){t.target.composing||e.$set(a,"monto",e._n(t.target.value))},blur:function(t){return e.$forceUpdate()}}}),t("button",{staticClass:"delete-btn",on:{click:function(t){return e.removeAbono(s)}}},[e._v("Eliminar")])])})),t("button",{staticClass:"add-btn",on:{click:e.addAbono}},[e._v("Agregar Abono")])],2),t("table",{staticClass:"tabla-saldo"},[t("tr",[t("td",[e._v("Saldo Acumulado Anterior")]),t("td",[e._v("$"+e._s(e.formatNumber(e.saldoAcumuladoAnterior)))])]),t("tr",[t("td",[e._v("Saldo Hoy")]),t("td",[e._v("$"+e._s(e.formatNumber(e.totalGeneralVenta)))])]),e._l(e.cobros,(function(a,s){return t("tr",{key:s},[t("td",[e._v(e._s(a.descripcion))]),t("td",[e._v("-$"+e._s(e.formatNumber(a.monto)))])])})),e._l(e.abonos,(function(a,s){return t("tr",{key:"abono-"+s},[t("td",[e._v(e._s(a.descripcion)+" (Abono)")]),t("td",[e._v("-$"+e._s(e.formatNumber(a.monto)))])])})),t("tr",{staticClass:"total"},[t("td",[e._v("Total")]),t("td",[e._v("$"+e._s(e.formatNumber(e.totalDiaActual)))])]),t("tr",{staticClass:"total"},[t("td",[e._v("Nuevo Saldo Acumulado")]),t("td",[e._v("$"+e._s(e.formatNumber(e.nuevoSaldoAcumulado)))])])],2),t("div",{staticClass:"button-container"},[t("button",{staticClass:"save-button",attrs:{disabled:e.isGuardando},on:{click:e.guardarNota}},[e._v(" "+e._s(e.isGuardando?"Guardando...":"Guardar Nota")+" ")]),t("button",{staticClass:"print-button",on:{click:e.imprimirTablas}},[e._v("Imprimir")])]),e._v(" <!- Modal para acciones móviles --\x3e "),e.showMobileActions?t("div",{staticClass:"mobile-actions-modal"},[t("button",{staticClass:"edit-btn",on:{click:function(t){return e.editItem(e.selectedItemIndex)}}},[e._v("Editar")]),t("button",{staticClass:"delete-btn",on:{click:function(t){return e.removeItem(e.selectedItemIndex)}}},[e._v("Eliminar")]),t("button",{on:{click:e.cancelMobileActions}},[e._v("Cancelar")])]):e._e(),e.showEditModal?t("div",{staticClass:"edit-modal"},[t("h3",[e._v("Editar Item")]),t("div",{staticClass:"input-row"},[t("input",{directives:[{name:"model",rawName:"v-model.number",value:e.editingItem.kilos,expression:"editingItem.kilos",modifiers:{number:!0}}],staticClass:"responsive-input",attrs:{type:"number",placeholder:"Kilos",inputmode:"decimal",pattern:"[0-9]*"},domProps:{value:e.editingItem.kilos},on:{input:function(t){t.target.composing||e.$set(e.editingItem,"kilos",e._n(t.target.value))},blur:function(t){return e.$forceUpdate()}}}),t("input",{directives:[{name:"model",rawName:"v-model",value:e.editingItem.medida,expression:"editingItem.medida"}],staticClass:"responsive-input",attrs:{type:"text",placeholder:"Medida"},domProps:{value:e.editingItem.medida},on:{input:function(t){t.target.composing||e.$set(e.editingItem,"medida",t.target.value)}}}),t("input",{directives:[{name:"model",rawName:"v-model.number",value:e.editingItem.costo,expression:"editingItem.costo",modifiers:{number:!0}}],staticClass:"responsive-input",attrs:{type:"number",placeholder:"Costo",inputmode:"decimal",pattern:"[0-9]*"},domProps:{value:e.editingItem.costo},on:{input:function(t){t.target.composing||e.$set(e.editingItem,"costo",e._n(t.target.value))},blur:function(t){return e.$forceUpdate()}}})]),t("div",{staticClass:"button-row"},[t("button",{on:{click:e.saveEditedItem}},[e._v("Guardar")]),t("button",{on:{click:e.cancelEdit}},[e._v("Cancelar")])])]):e._e(),e.showAddProductModal?t("div",{staticClass:"modal"},[t("div",{staticClass:"modal-content"},[t("h3",[e._v("Agregar Nuevo Producto")]),t("div",{staticClass:"input-row"},[t("input",{directives:[{name:"model",rawName:"v-model.number",value:e.newProduct.kilosVenta,expression:"newProduct.kilosVenta",modifiers:{number:!0}}],staticClass:"responsive-input",attrs:{type:"number",placeholder:"Kilos",inputmode:"decimal",pattern:"[0-9]*"},domProps:{value:e.newProduct.kilosVenta},on:{input:function(t){t.target.composing||e.$set(e.newProduct,"kilosVenta",e._n(t.target.value))},blur:function(t){return e.$forceUpdate()}}}),t("input",{directives:[{name:"model",rawName:"v-model",value:e.newProduct.medida,expression:"newProduct.medida"}],staticClass:"responsive-input",attrs:{type:"text",placeholder:"Medida"},domProps:{value:e.newProduct.medida},on:{input:function(t){t.target.composing||e.$set(e.newProduct,"medida",t.target.value)}}}),t("input",{directives:[{name:"model",rawName:"v-model.number",value:e.newProduct.precioVenta,expression:"newProduct.precioVenta",modifiers:{number:!0}}],staticClass:"responsive-input",attrs:{type:"number",placeholder:"Precio de Venta",inputmode:"decimal",pattern:"[0-9]*"},domProps:{value:e.newProduct.precioVenta},on:{input:function(t){t.target.composing||e.$set(e.newProduct,"precioVenta",e._n(t.target.value))},blur:function(t){return e.$forceUpdate()}}})]),t("div",{staticClass:"button-row"},[t("button",{on:{click:e.addNewProduct}},[e._v("Agregar")]),t("button",{on:{click:function(t){e.showAddProductModal=!1}}},[e._v("Cancelar")])])])]):e._e(),t("div",{class:["estado-cuenta",e.estadoCuenta.toLowerCase(),{"no-pagado":"No Pagado"===e.estadoCuenta}]},[e._v(" "+e._s(e.estadoCuenta)+" ")]),t("div",{staticClass:"guardar-container"},[t("div",{staticClass:"observacion-container"},[t("button",{staticClass:"btn-agregar-observacion",on:{click:e.agregarObservacion}},[t("i",{staticClass:"fas fa-plus"}),e._v(" Agregar observación ")])]),e.observacion?t("div",{staticClass:"observacion-existente"},[t("div",{staticClass:"observacion-header"},[t("p",{staticClass:"observacion-titulo"},[e._v("Observación actual:")]),t("div",{staticClass:"observacion-buttons"},[t("button",{staticClass:"btn-editar",on:{click:e.editarObservacion}},[e._v("Editar")]),t("button",{staticClass:"btn-eliminar",attrs:{title:"Eliminar observación"},on:{click:e.eliminarObservacion}},[e._v("×")])])]),t("p",{staticClass:"observacion-texto"},[e._v(e._s(e.observacion))])]):e._e()]),e.showObservacionModal?t("div",{staticClass:"modal-overlay"},[t("div",{staticClass:"modal-content"},[t("h3",[e._v(e._s(e.observacion?"Editar":"Agregar")+" Observación")]),t("textarea",{directives:[{name:"model",rawName:"v-model",value:e.observacion,expression:"observacion"}],attrs:{placeholder:"Escribe tu observación aquí...",rows:"4"},domProps:{value:e.observacion},on:{input:function(t){t.target.composing||(e.observacion=t.target.value)}}}),t("div",{staticClass:"modal-buttons"},[t("button",{staticClass:"btn-guardar",on:{click:e.guardarObservacion}},[e._v("Guardar")]),t("button",{staticClass:"btn-cancelar",on:{click:e.cancelarObservacion}},[e._v("Cancelar")])])])]):e._e(),e.showSaveMessage&&e.lastSaveMessage&&"Guardado automáticamente"!==e.lastSaveMessage?t("div",{staticClass:"auto-save-message"},[e._v(" "+e._s(e.lastSaveMessage)+" ")]):e._e()])},o=[function(){var e=this,t=e._self._c;return t("thead",[t("tr",[t("th",[e._v("Kilos")]),t("th",[e._v("Medida")]),t("th",[e._v("Costo")]),t("th",[e._v("Total")]),t("th",{staticClass:"desktop-only"},[e._v("Acciones")])])])},function(){var e=this,t=e._self._c;return t("td",{staticClass:"text-right",attrs:{colspan:"3"}},[t("strong",[e._v("Total General Costo:")])])},function(){var e=this,t=e._self._c;return t("thead",[t("tr",[t("th",[e._v("Kilos")]),t("th",[e._v("Medida")]),t("th",[e._v("Precio")]),t("th",[e._v("Total")]),t("th",{staticClass:"desktop-only"},[e._v("Ganancias")])])])},function(){var e=this,t=e._self._c;return t("td",{staticClass:"text-right",attrs:{colspan:"3"}},[t("strong",[e._v("Total General Venta:")])])}],i=(a("d9e2"),a("14d9"),a("13d5"),a("dc59")),n=a("1494"),r=a("74c9"),c=a("666c"),l=a("19aa1"),d=a("03c4"),u=(a("fa40"),{name:"CuentasCatarro",components:{BackButton:r["a"],PreciosHistorialModal:c["a"],StashModal:l["a"],PreciosClienteButton:d["a"]},data(){return{items:[],newItem:{kilos:null,medida:"",costo:null,precioVenta:null},saldoAcumuladoAnterior:0,cobros:[],abonos:[],fechaSeleccionada:this.obtenerFechaActual(),showMobileActions:!1,selectedItemIndex:null,presionTimer:null,itemsVenta:[],showEditModal:!1,editingItem:null,editingIndex:null,estadoPagado:!1,editingKilosIndex:null,longPressTimer:null,editingField:{index:null,field:null},selectedRowIndex:null,showAddProductModal:!1,newProduct:{kilosVenta:null,medida:"",precioVenta:null},autoSaveTimer:null,lastSavedData:null,saveQueue:[],isSaving:!1,lastSaveTime:null,saveMinInterval:5e3,tieneObservacion:!1,showObservacionModal:!1,observacion:"",isGuardando:!1,lastSaveMessage:"",showSaveMessage:!1,saveMessageTimer:null}},computed:{fechaFormateada(){const e=new Date(this.fechaSeleccionada+"T00:00:00"),t={year:"numeric",month:"long",day:"numeric"};return e.toLocaleDateString("es-ES",t)},totalGeneral(){return this.items.reduce((e,t)=>e+(t.total||0),0)},totalGeneralVenta(){return this.itemsVenta.reduce((e,t)=>e+(t.totalVenta||0),0)},totalSaldo(){const e=this.cobros.reduce((e,t)=>e+(t.monto||0),0),t=this.abonos.reduce((e,t)=>e+(t.monto||0),0);return this.saldoAcumuladoAnterior+this.totalGeneralVenta+e-t},nuevoSaldoAcumulado(){return(this.saldoAcumuladoAnterior||0)+(this.totalDiaActual||0)},gananciaDelDia(){const e=this.items.reduce((e,t)=>e+(t.total||0),0);return(this.totalGeneralVenta||0)-(e||0)},saldoPendiente(){return this.totalGeneralVenta-this.abonos.reduce((e,t)=>e+(t.monto||0),0)},estadoCuenta(){return this.totalSaldo<=0||0===this.totalDiaActual?"Pagado":"No Pagado"},gananciaTotal(){return this.itemsVenta.reduce((e,t)=>e+(t.ganancia||0),0)},totalDiaActual(){const e=this.cobros.reduce((e,t)=>e+(parseFloat(t.monto)||0),0),t=this.abonos.reduce((e,t)=>e+(parseFloat(t.monto)||0),0);return(this.totalGeneralVenta||0)-e-t}},watch:{fechaSeleccionada:{handler:"loadSaldoAcumuladoAnterior",immediate:!0},items:{handler:"handleDataChange",deep:!0},itemsVenta:{handler:"handleDataChange",deep:!0},cobros:{handler:"handleDataChange",deep:!0},abonos:{handler:"handleDataChange",deep:!0},fechaSeleccionada:{handler:"handleDataChange"},saldoAcumuladoAnterior:{handler:"handleDataChange"},"newItem.kilos":"handleDataChange","newItem.medida":"handleDataChange","newItem.costo":"handleDataChange",observacion:"handleDataChange"},async mounted(){console.log("Mounted ejecutado",this.$route.params,this.$route.query);const e=this.$route.params.id,t="true"===this.$route.query.edit;e&&t?(console.log("Iniciando carga de cuenta existente"),await this.loadExistingCuenta(e)):(console.log("Cargando saldo acumulado anterior para nueva cuenta"),await this.loadSaldoAcumuladoAnterior())},methods:{async loadExistingCuenta(e){try{console.log("Cargando cuenta con ID:",e);const t=Object(n["e"])(i["a"],"cuentasCatarro",e),a=await Object(n["f"])(t);if(a.exists()){const e=a.data();console.log("Datos de la cuenta cargados:",e),this.$nextTick(()=>{this.items=e.items||[],this.saldoAcumuladoAnterior=e.saldoAcumuladoAnterior||0,this.cobros=e.cobros||[],this.abonos=e.abonos||[],this.fechaSeleccionada=e.fecha||this.obtenerFechaActual(),this.showObservacionModal=!1,this.tieneObservacion=e.tieneObservacion||!1,this.observacion=e.observacion||"",this.itemsVenta=e.itemsVenta||this.items.map(e=>({...e,precioVenta:e.precioVenta||0,totalVenta:(e.precioVenta||0)*e.kilos,kilosVenta:e.kilos})),this.actualizarItemsVenta(),console.log("Estado actualizado con $nextTick:",{items:this.items,saldoAcumuladoAnterior:this.saldoAcumuladoAnterior,cobros:this.cobros,abonos:this.abonos,fechaSeleccionada:this.fechaSeleccionada,itemsVenta:this.itemsVenta,tieneObservacion:this.tieneObservacion,observacion:this.observacion})})}else console.error("No se encontró la cuenta con el ID proporcionado")}catch(t){console.error("Error al cargar la cuenta existente: ",t)}},async loadSaldoAcumuladoAnterior(){try{this.saldoAcumuladoAnterior=await this.obtenerSaldoAcumuladoAnterior(),console.log("Saldo acumulado anterior cargado:",this.saldoAcumuladoAnterior)}catch(e){console.error("Error al cargar el saldo acumulado anterior:",e),this.saldoAcumuladoAnterior=0}},async obtenerSaldoAcumuladoAnterior(){try{const e=Object(n["c"])(i["a"],"cuentasCatarro"),t=Object(n["o"])(e,Object(n["s"])("fecha","<",this.fechaSeleccionada),Object(n["l"])("fecha","desc"),Object(n["j"])(1)),a=await Object(n["g"])(t);if(!a.empty){const e=a.docs[0].data();return e.nuevoSaldoAcumulado||0}return 0}catch(e){return console.error("Error al obtener saldo acumulado anterior:",e),0}},async actualizarCuentasPosteriores(e){try{const t=Object(n["c"])(i["a"],"cuentasCatarro"),a=Object(n["o"])(t,Object(n["s"])("fecha",">=",e),Object(n["l"])("fecha","asc"),Object(n["j"])(50)),s=await Object(n["g"])(a),o=s.docs.map(e=>({id:e.id,...e.data()}));let r=this.nuevoSaldoAcumulado;await Promise.all(o.map(async e=>{const t=e.totalGeneralVenta+(e.cobros||[]).reduce((e,t)=>e+(parseFloat(t.monto)||0),0)-(e.abonos||[]).reduce((e,t)=>e+(parseFloat(t.monto)||0),0);return r+=t,Object(n["r"])(Object(n["e"])(i["a"],"cuentasCatarro",e.id),{saldoAcumuladoAnterior:e.id===this.$route.params.id?this.saldoAcumuladoAnterior:r-t,nuevoSaldoAcumulado:r,estadoPagado:r<=0})}))}catch(t){throw console.error("Error al actualizar cuentas posteriores:",t),t}},formatNumber(e){return null===e||void 0===e?"0.00":e.toLocaleString("en-US",{minimumFractionDigits:2,maximumFractionDigits:2})},async addItem(){if(this.newItem.kilos&&this.newItem.medida&&this.newItem.costo&&this.newItem.precioVenta)try{const e=this.newItem.kilos*this.newItem.costo;this.items.push({kilos:this.newItem.kilos,medida:this.newItem.medida,costo:this.newItem.costo,total:e});let t=this.newItem.kilos;const a=this.calcularKilosCrudos(this.newItem.medida,this.newItem.kilos,!1);a!==this.newItem.kilos&&(t=a);const s=t*this.newItem.precioVenta,o=s-e;this.itemsVenta.push({kilosVenta:t,medida:this.newItem.medida,precioVenta:this.newItem.precioVenta,totalVenta:s,ganancia:o}),this.newItem={kilos:null,medida:"",costo:null,precioVenta:null},await this.queueSave()}catch(e){console.error("Error al guardar el item:",e),"Hubo un problema al guardar. Por favor, intente nuevamente."===this.lastSaveMessage&&this.showSaveMessage||(this.lastSaveMessage="Hubo un problema al guardar. Por favor, intente nuevamente.",this.showSaveMessage=!0,this.saveMessageTimer&&clearTimeout(this.saveMessageTimer),this.saveMessageTimer=setTimeout(()=>{this.showSaveMessage=!1},3e3)),this.items.pop(),this.itemsVenta.pop()}else"Por favor complete todos los campos"===this.lastSaveMessage&&this.showSaveMessage||(this.lastSaveMessage="Por favor complete todos los campos",this.showSaveMessage=!0,this.saveMessageTimer&&clearTimeout(this.saveMessageTimer),this.saveMessageTimer=setTimeout(()=>{this.showSaveMessage=!1},3e3))},async crearNuevaCuenta(){try{const e=Object(n["c"])(i["a"],"cuentasCatarro"),t=Object(n["o"])(e,Object(n["s"])("fecha","==",this.fechaSeleccionada)),a=await Object(n["g"])(t);if(!a.empty)throw new Error("Ya existe una nota registrada para esta fecha.");const s={fecha:this.fechaSeleccionada,items:this.items,itemsVenta:this.itemsVenta,saldoAcumuladoAnterior:await this.obtenerSaldoAcumuladoAnterior(),cobros:[],abonos:[],totalGeneral:this.totalGeneral,totalGeneralVenta:0,nuevoSaldoAcumulado:this.saldoAcumuladoAnterior,estadoPagado:!1,tieneObservacion:this.tieneObservacion,observacion:this.observacion},o=await Object(n["b"])(Object(n["c"])(i["a"],"cuentasCatarro"),s);return this.$router.replace({name:this.$route.name,params:{id:o.id},query:{edit:"true"}}),o.id}catch(e){throw"Ya existe una nota registrada para esta fecha."===e.message?alert(e.message):(console.error("Error al crear nueva cuenta:",e),alert("Error al crear la cuenta. Por favor, intente nuevamente.")),e}},async removeItem(e){try{this.items.splice(e,1),this.itemsVenta.splice(e,1),this.showMobileActions=!1,await this.queueSave()}catch(t){console.error("Error al eliminar item:",t)}},addCobro(){this.cobros.push({descripcion:"Flete",monto:0})},removeCobro(e){this.cobros.splice(e,1)},addAbono(){this.abonos.push({descripcion:"",monto:0})},removeAbono(e){this.abonos.splice(e,1)},obtenerFechaActual(){const e=new Date;return e.getFullYear()+"-"+String(e.getMonth()+1).padStart(2,"0")+"-"+String(e.getDate()).padStart(2,"0")},async guardarNota(){try{this.isGuardando=!0;const e=this.totalGeneralVenta-this.cobros.reduce((e,t)=>e+(parseFloat(t.monto)||0),0)-this.abonos.reduce((e,t)=>e+(parseFloat(t.monto)||0),0),t=await this.obtenerSaldoAcumuladoAnterior(),a=t+e,s=a<=0,o={fecha:this.fechaSeleccionada,items:this.items,saldoAcumuladoAnterior:t,cobros:this.cobros,abonos:this.abonos,totalGeneral:this.totalGeneral,totalGeneralVenta:this.totalGeneralVenta,nuevoSaldoAcumulado:s?0:a,gananciaDelDia:this.gananciaDelDia,estadoPagado:s,itemsVenta:this.itemsVenta,tieneObservacion:this.tieneObservacion,observacion:this.observacion,ultimaActualizacion:(new Date).toISOString()},r=this.$route.params.id,c="true"===this.$route.query.edit;if(r&&c)await Object(n["r"])(Object(n["e"])(i["a"],"cuentasCatarro",r),o),this.actualizarCuentasPosteriores(this.fechaSeleccionada).catch(console.error),"Cuenta guardada exitosamente"===this.lastSaveMessage&&this.showSaveMessage||(this.lastSaveMessage="Cuenta guardada exitosamente",this.showSaveMessage=!0,this.saveMessageTimer&&clearTimeout(this.saveMessageTimer),this.saveMessageTimer=setTimeout(()=>{this.showSaveMessage=!1},3e3)),this.$router.push("/cuentas-catarro");else{const e=Object(n["c"])(i["a"],"cuentasCatarro"),t=Object(n["o"])(e,Object(n["s"])("fecha","==",this.fechaSeleccionada)),a=await Object(n["g"])(t);if(!a.empty)return void alert("Ya existe una nota registrada para esta fecha. No se puede crear una nueva.");await Object(n["b"])(Object(n["c"])(i["a"],"cuentasCatarro"),o),this.actualizarCuentasPosteriores(this.fechaSeleccionada).catch(console.error),"Cuenta guardada exitosamente"===this.lastSaveMessage&&this.showSaveMessage||(this.lastSaveMessage="Cuenta guardada exitosamente",this.showSaveMessage=!0,this.saveMessageTimer&&clearTimeout(this.saveMessageTimer),this.saveMessageTimer=setTimeout(()=>{this.showSaveMessage=!1},3e3)),this.$router.push("/cuentas-catarro")}}catch(e){console.error("Error al guardar la cuenta:",e),"Error al guardar la cuenta"===this.lastSaveMessage&&this.showSaveMessage||(this.lastSaveMessage="Error al guardar la cuenta",this.showSaveMessage=!0,this.saveMessageTimer&&clearTimeout(this.saveMessageTimer),this.saveMessageTimer=setTimeout(()=>{this.showSaveMessage=!1},3e3))}finally{this.isGuardando=!1}},iniciarPresion(e){this.presionTimer=setTimeout(()=>{this.showMobileActionsModal(e)},500)},finalizarPresion(){clearTimeout(this.presionTimer)},showMobileActionsModal(e){this.selectedItemIndex=e,this.showMobileActions=!0},cancelMobileActions(){this.showMobileActions=!1,this.selectedItemIndex=null},editItem(e){this.editingIndex=e,this.editingItem={...this.items[e]},this.showEditModal=!0},saveEditedItem(){this.editingItem.kilos&&this.editingItem.medida&&this.editingItem.costo&&(this.editingItem.total=this.editingItem.kilos*this.editingItem.costo,this.items[this.editingIndex]={...this.editingItem},this.actualizarItemsVenta(),this.showEditModal=!1,this.editingItem=null,this.editingIndex=null)},cancelEdit(){this.showEditModal=!1,this.editingItem=null,this.editingIndex=null},imprimirTablas(){const e=`\n        <html>\n          <head>\n            <title>Cuentas Catarro - ${this.fechaFormateada}</title>\n            <style>\n              body {\n                font-family: Arial, sans-serif;\n                font-size: 14pt;\n                line-height: 1.4;\n                max-width: 800px;\n                margin: 0 auto;\n                padding: 15px;\n                text-align: center;\n              }\n              h1 { \n                font-size: 22pt; \n                margin-bottom: 15px; \n              }\n              h2 { \n                font-size: 18pt; \n                margin-top: 20px; \n                margin-bottom: 10px; \n              }\n              table {\n                width: 100%;\n                border-collapse: collapse;\n                margin-bottom: 20px;\n                font-size: 13pt;\n              }\n              th, td {\n                border: 1px solid #ddd;\n                padding: 8px 10px;\n                text-align: left;\n              }\n              th { \n                background-color: #f2f2f2; \n                font-weight: bold;\n                font-size: 13pt;\n              }\n              .total { \n                font-weight: bold; \n                font-size: 13pt;\n              }\n              .total td:first-child { \n                text-align: right; \n              }\n              .highlight {\n                background-color: #e8f5e9;\n                font-weight: bold;\n              }\n              @media print {\n                body { \n                  font-size: 14pt; \n                }\n                h1 { \n                  font-size: 22pt; \n                }\n                h2 { \n                  font-size: 18pt; \n                }\n                table { \n                  font-size: 13pt; \n                }\n                th, td {\n                  padding: 8px 10px;\n                }\n              }\n            </style>\n          </head>\n          <body>\n            <h1>Cuentas Catarro - ${this.fechaFormateada}</h1>\n            \n            <h2>Precios de Venta</h2>\n            <table>\n              <thead>\n                <tr>\n                  <th>Kilos</th>\n                  <th>Medida</th>\n                  <th>Precio de Venta</th>\n                  <th>Total</th>\n                </tr>\n              </thead>\n              <tbody>\n                ${this.itemsVenta.map(e=>`\n                  <tr>\n                    <td>${this.formatNumber(e.kilosVenta)}</td>\n                    <td>${e.medida}</td>\n                    <td>$${this.formatNumber(e.precioVenta)}</td>\n                    <td>$${this.formatNumber(e.totalVenta)}</td>\n                  </tr>\n                `).join("")}\n              </tbody>\n              <tfoot>\n                <tr class="total">\n                  <td colspan="3">Total Venta</td>\n                  <td>$${this.formatNumber(this.totalGeneralVenta)}</td>\n                </tr>\n              </tfoot>\n            </table>\n\n            <h2>Resumen de saldo</h2>\n            <table>\n              <tr>\n                <td>Saldo Acumulado Anterior</td>\n                <td>$${this.formatNumber(this.saldoAcumuladoAnterior)}</td>\n              </tr>\n              <tr>\n                <td>Saldo Hoy</td>\n                <td>$${this.formatNumber(this.totalGeneralVenta)}</td>\n              </tr>\n              ${this.cobros.map(e=>`\n                <tr>\n                  <td>${e.descripcion}</td>\n                  <td>-$${this.formatNumber(e.monto)}</td>\n                </tr>\n              `).join("")}\n              ${this.abonos.map(e=>`\n                <tr>\n                  <td>${e.descripcion} (Abono)</td>\n                  <td>-$${this.formatNumber(e.monto)}</td>\n                </tr>\n              `).join("")}\n              <tr class="total">\n                <td>Total</td>\n                <td>$${this.formatNumber(this.totalDiaActual)}</td>\n              </tr>\n              <tr class="highlight">\n                <td>Nuevo Saldo Acumulado</td>\n                <td>$${this.formatNumber(this.nuevoSaldoAcumulado)}</td>\n              </tr>\n            </table>\n          </body>\n        </html>\n      `,t=window.open("","_blank");t.document.write(e),t.document.close(),t.print()},actualizarItemsVenta(){this.itemsVenta=this.itemsVenta.map((e,t)=>{const a=this.items[t],s=(e.precioVenta||0)*(e.kilosVenta||0),o=a?a.total:0,i=s-o;return{...e,totalVenta:s,ganancia:i}})},calcularTotalVenta(e){const t=this.itemsVenta[e];if(t)try{const a=parseFloat(t.kilosVenta)||0,s=parseFloat(t.precioVenta)||0;t.totalVenta=a*s;const o=this.items[e],i=o&&o.total||0;t.ganancia=(t.totalVenta||0)-i,this.actualizarItemsVenta(),this.queueSave()}catch(a){console.error("Error al calcular total de venta:",a)}},removeItemVenta(e){this.itemsVenta.splice(e,1)},editKilos(e){this.editingKilosIndex=e,this.$nextTick(()=>{this.$refs.kilosInput&&this.$refs.kilosInput[0]&&this.$refs.kilosInput[0].focus()})},finishEditingKilos(){const e=this.editingKilosIndex;if(null!==e)try{const t=this.itemsVenta[e],a=this.items[e];if(a){const e=this.calcularKilosCrudos(t.medida,parseFloat(t.kilosVenta)||a.kilos,!1);t.kilosVenta=e}else t.kilosVenta=parseFloat(t.kilosVenta)||0;this.calcularTotalVenta(e),this.queueSave()}catch(t){console.error("Error al finalizar edición de kilos:",t)}this.editingKilosIndex=null},startLongPress(e,t){this.longPressTimer=setTimeout(()=>{this.editField(e,t)},500)},endLongPress(){clearTimeout(this.longPressTimer)},editField(e,t){this.editingField={index:e,field:t},this.$nextTick(()=>{this.$refs.editInput&&this.$refs.editInput[0]&&this.$refs.editInput[0].focus()})},finishEditing(){const{index:e,field:t}=this.editingField;if(null!==e&&null!==t)try{const a=this.items[e];"kilos"!==t&&"costo"!==t||(a[t]=parseFloat(a[t])||0),a.total=a.kilos*a.costo,this.actualizarItemsVenta(),this.queueSave()}catch(a){console.error("Error al finalizar edición:",a)}this.editingField={index:null,field:null}},toggleGananciasMobile(e){window.innerWidth<=600&&(this.selectedRowIndex=this.selectedRowIndex===e?null:e)},addNewProduct(){if(this.newProduct.kilosVenta&&this.newProduct.medida&&this.newProduct.precioVenta)if(this.newProduct.kilosVenta&&this.newProduct.medida&&this.newProduct.precioVenta){const e=this.calcularKilosCrudos(this.newProduct.medida,this.newProduct.kilosVenta,!1),t=e*this.newProduct.precioVenta;this.itemsVenta.push({kilosVenta:e,medida:this.newProduct.medida,precioVenta:this.newProduct.precioVenta,totalVenta:t,ganancia:t}),this.showAddProductModal=!1,this.newProduct={kilosVenta:null,medida:"",precioVenta:null},this.queueSave()}else alert("Por favor, complete todos los campos");else"Por favor complete todos los campos"===this.lastSaveMessage&&this.showSaveMessage||(this.lastSaveMessage="Por favor complete todos los campos",this.showSaveMessage=!0,this.saveMessageTimer&&clearTimeout(this.saveMessageTimer),this.saveMessageTimer=setTimeout(()=>{this.showSaveMessage=!1},3e3))},handleDataChange(){this.$route.params.id&&"true"===this.$route.query.edit&&(this.autoSaveTimer&&clearTimeout(this.autoSaveTimer),this.autoSaveTimer=setTimeout(async()=>{await this.queueSave()},2e3))},async queueSave(){this.saveQueue.push({timestamp:Date.now(),operation:async()=>{this.$route.params.id?await this.autoSaveNota():await this.crearNuevaCuenta()}}),this.isSaving||await this.processSaveQueue()},async processSaveQueue(){if(!this.isSaving&&0!==this.saveQueue.length){this.isSaving=!0;try{while(this.saveQueue.length>0){const e=Date.now();this.lastSaveTime&&e-this.lastSaveTime<this.saveMinInterval&&await new Promise(t=>setTimeout(t,this.saveMinInterval-(e-this.lastSaveTime)));const t=this.saveQueue[0];await this.retryOperation(t.operation),this.lastSaveTime=Date.now(),this.saveQueue.shift()}}catch(e){console.error("Error procesando cola de guardado:",e),"resource-exhausted"===e.code&&(await new Promise(e=>setTimeout(e,1e4)),await this.processSaveQueue())}finally{this.isSaving=!1}}},async autoSaveNota(){if(this.$route.params.id)try{const e={items:this.items.map(e=>({kilos:e.kilos,medida:e.medida,costo:e.costo,total:e.total})),itemsVenta:this.itemsVenta.map(e=>({kilosVenta:e.kilosVenta,medida:e.medida,precioVenta:e.precioVenta,totalVenta:e.totalVenta,ganancia:e.ganancia})),totalGeneral:this.totalGeneral,totalGeneralVenta:this.totalGeneralVenta,nuevoSaldoAcumulado:this.nuevoSaldoAcumulado,cobros:this.cobros,abonos:this.abonos,estadoPagado:"Pagado"===this.estadoCuenta,tieneObservacion:this.tieneObservacion,observacion:this.observacion,ultimaActualizacion:(new Date).toISOString()},t=Object(n["e"])(i["a"],"cuentasCatarro",this.$route.params.id);await Object(n["r"])(t,e),this.lastSaveMessage="",this.showSaveMessage=!1}catch(e){if("resource-exhausted"===e.code)throw e;throw this.lastSaveMessage="Error en auto-guardado",this.showSaveMessage=!0,this.saveMessageTimer&&clearTimeout(this.saveMessageTimer),this.saveMessageTimer=setTimeout(()=>{this.showSaveMessage=!1},3e3),e}},guardarCuenta(){this.guardarNota()},agregarObservacion(){this.showObservacionModal=!0},guardarObservacion(){this.observacion.trim()&&(this.tieneObservacion=!0),this.showObservacionModal=!1},cancelarObservacion(){this.tieneObservacion||(this.observacion=""),this.showObservacionModal=!1},editarObservacion(){this.showObservacionModal=!0},eliminarObservacion(){confirm("¿Estás seguro de que deseas eliminar esta observación?")&&(this.observacion="",this.tieneObservacion=!1)},async retryOperation(e,t=3){let a=0;while(a<t)try{return await e()}catch(s){if(a++,console.error(`Error en operación (intento ${a}/${t}):`,s),"resource-exhausted"===s.code?await new Promise(e=>setTimeout(e,5e3*Math.pow(2,a))):await new Promise(e=>setTimeout(e,1e3*Math.pow(2,a))),a>=t)throw console.error("Se alcanzó el número máximo de intentos. Operación fallida."),s}},calcularKilosCrudos(e,t,a=!1){const s=e.toLowerCase().trim(),o=/^(\d+)-(\d+)$/.exec(s);if(o){const e=parseInt(o[1])||0,i=parseInt(o[2])||0,n=19!==i||a?i:20,r=e*n;return 19!==i||a||r===t?19===i&&a&&console.log(`Cálculo de crudos para tabla de costos: ${e} cajas * 19kg = ${r}kg (formato ${s})`):(this.lastSaveMessage=`Cálculo de crudos: ${e} cajas * 20kg = ${r}kg (formato ${s})`,this.showSaveMessage=!0,this.saveMessageTimer&&clearTimeout(this.saveMessageTimer),this.saveMessageTimer=setTimeout(()=>{this.showSaveMessage=!1},3e3)),r}const i=s.includes("crudo");if(i&&/^\d+\*\d+(\+\d+)?$/.test(s)){const e=s.split(/[\*\+]/);if(e.length>=2){const t=parseInt(e[0])||0,s=parseInt(e[1])||0,o=19!==s||a?s:20;let i=t*o;return e.length>2&&(i+=parseInt(e[2])||0),i}}return t}},beforeUnmount(){this.autoSaveTimer&&clearTimeout(this.autoSaveTimer),this.saveQueue.length>0&&this.processSaveQueue()}}),m=u,h=(a("a300"),a("2877")),v=Object(h["a"])(m,s,o,!1,null,"eb143f2e",null);t["a"]=v.exports},"74a9":function(e,t,a){"use strict";var s=function(){var e=this,t=e._self._c;return t("div",{staticClass:"cuentas-joselito-container"},[e.isSaving?t("div",{staticClass:"auto-save-indicator"},[t("span",{staticClass:"save-dot"}),e._v(" Guardando... ")]):e._e(),t("div",{staticClass:"back-button-container"},[t("BackButton",{attrs:{to:"/cuentas-joselito"}}),t("PreciosHistorialModal",{attrs:{clienteActual:"joselito"}}),t("StashModal",{attrs:{cliente:"joselito"}})],1),t("h1",[e._v("Cuentas Joselito")]),t("div",{staticClass:"fecha-actual"},[t("div",{staticClass:"fecha-input"},[t("input",{directives:[{name:"model",rawName:"v-model",value:e.fechaSeleccionada,expression:"fechaSeleccionada"}],attrs:{type:"date"},domProps:{value:e.fechaSeleccionada},on:{input:function(t){t.target.composing||(e.fechaSeleccionada=t.target.value)}}})]),t("div",{staticClass:"fecha-display"},[e._v(" "+e._s(e.fechaFormateada)+" ")])]),t("div",{staticClass:"input-section"},[t("h2",[e._v("Ingresar Datos")]),t("div",{staticClass:"input-row"},[t("input",{directives:[{name:"model",rawName:"v-model.number",value:e.newItem.kilos,expression:"newItem.kilos",modifiers:{number:!0}}],staticClass:"responsive-input",attrs:{type:"number",placeholder:"Kilos",inputmode:"decimal",pattern:"[0-9]*"},domProps:{value:e.newItem.kilos},on:{input:function(t){t.target.composing||e.$set(e.newItem,"kilos",e._n(t.target.value))},blur:function(t){return e.$forceUpdate()}}}),t("input",{directives:[{name:"model",rawName:"v-model",value:e.newItem.medida,expression:"newItem.medida"}],staticClass:"responsive-input",attrs:{type:"text",placeholder:"Medida"},domProps:{value:e.newItem.medida},on:{input:function(t){t.target.composing||e.$set(e.newItem,"medida",t.target.value)}}}),t("input",{directives:[{name:"model",rawName:"v-model.number",value:e.newItem.costo,expression:"newItem.costo",modifiers:{number:!0}}],staticClass:"responsive-input",attrs:{type:"number",placeholder:"Costo",inputmode:"decimal",pattern:"[0-9]*"},domProps:{value:e.newItem.costo},on:{input:function(t){t.target.composing||e.$set(e.newItem,"costo",e._n(t.target.value))},blur:function(t){return e.$forceUpdate()}}}),t("input",{directives:[{name:"model",rawName:"v-model.number",value:e.newItem.precioVenta,expression:"newItem.precioVenta",modifiers:{number:!0}}],staticClass:"responsive-input",attrs:{type:"number",placeholder:"Precio Venta",inputmode:"decimal",pattern:"[0-9]*"},domProps:{value:e.newItem.precioVenta},on:{input:function(t){t.target.composing||e.$set(e.newItem,"precioVenta",e._n(t.target.value))},blur:function(t){return e.$forceUpdate()}}}),t("button",{on:{click:e.addItem}},[e._v("Agregar")])])]),t("table",{staticClass:"tabla-principal"},[e._m(0),t("tbody",e._l(e.items,(function(a,s){return t("tr",{key:s},[t("td",{on:{click:function(t){return e.editField(s,"kilos")},touchstart:function(t){return e.startLongPress(s,"kilos")},touchend:e.endLongPress}},[e._v(" "+e._s(e.editingField.index===s&&"kilos"===e.editingField.field?"":e.formatNumber(a.kilos))+" "),e.editingField.index===s&&"kilos"===e.editingField.field?t("input",{directives:[{name:"model",rawName:"v-model.number",value:a.kilos,expression:"item.kilos",modifiers:{number:!0}}],ref:"editInput",refInFor:!0,attrs:{type:"number"},domProps:{value:a.kilos},on:{blur:[e.finishEditing,function(t){return e.$forceUpdate()}],keyup:function(t){return!t.type.indexOf("key")&&e._k(t.keyCode,"enter",13,t.key,"Enter")?null:e.finishEditing.apply(null,arguments)},input:function(t){t.target.composing||e.$set(a,"kilos",e._n(t.target.value))}}}):e._e()]),t("td",{on:{click:function(t){return e.editField(s,"medida")},touchstart:function(t){return e.startLongPress(s,"medida")},touchend:e.endLongPress}},[e._v(" "+e._s(e.editingField.index===s&&"medida"===e.editingField.field?"":a.medida)+" "),e.editingField.index===s&&"medida"===e.editingField.field?t("input",{directives:[{name:"model",rawName:"v-model",value:a.medida,expression:"item.medida"}],ref:"editInput",refInFor:!0,attrs:{type:"text"},domProps:{value:a.medida},on:{blur:e.finishEditing,keyup:function(t){return!t.type.indexOf("key")&&e._k(t.keyCode,"enter",13,t.key,"Enter")?null:e.finishEditing.apply(null,arguments)},input:function(t){t.target.composing||e.$set(a,"medida",t.target.value)}}}):e._e()]),t("td",{on:{click:function(t){return e.editField(s,"costo")},touchstart:function(t){return e.startLongPress(s,"costo")},touchend:e.endLongPress}},[e._v(" "+e._s(e.editingField.index===s&&"costo"===e.editingField.field?"":"$"+e.formatNumber(a.costo))+" "),e.editingField.index===s&&"costo"===e.editingField.field?t("input",{directives:[{name:"model",rawName:"v-model.number",value:a.costo,expression:"item.costo",modifiers:{number:!0}}],ref:"editInput",refInFor:!0,attrs:{type:"number"},domProps:{value:a.costo},on:{blur:[e.finishEditing,function(t){return e.$forceUpdate()}],keyup:function(t){return!t.type.indexOf("key")&&e._k(t.keyCode,"enter",13,t.key,"Enter")?null:e.finishEditing.apply(null,arguments)},input:function(t){t.target.composing||e.$set(a,"costo",e._n(t.target.value))}}}):e._e()]),t("td",[e._v("$"+e._s(e.formatNumber(a.total)))]),t("td",{staticClass:"action-column desktop-only"},[t("button",{staticClass:"delete-btn",on:{click:function(t){return e.removeItem(s)}}},[e._v("Eliminar")])])])})),0),t("tfoot",[t("tr",{staticClass:"total"},[e._m(1),t("td",[t("strong",[e._v("$"+e._s(e.formatNumber(e.totalGeneral)))])]),t("td")])])]),t("h2",[e._v("Precios de Venta")]),t("div",{staticClass:"add-product-button"},[t("button",{on:{click:function(t){e.showAddProductModal=!0}}},[e._v("Agregar Producto")])]),t("table",{staticClass:"tabla-venta"},[e._m(2),t("tbody",[e._l(e.itemsVenta,(function(a,s){return t("tr",{key:s,on:{click:function(t){return e.toggleGananciasMobile(s)}}},[t("td",{on:{click:function(t){return e.editKilos(s)},touchstart:function(t){return e.startLongPress(s)},touchend:e.endLongPress}},[e._v(" "+e._s(e.editingKilosIndex===s?"":e.formatNumber(a.kilosVenta))+" "),e.editingKilosIndex===s?t("input",{directives:[{name:"model",rawName:"v-model.number",value:a.kilosVenta,expression:"item.kilosVenta",modifiers:{number:!0}}],ref:"kilosInput",refInFor:!0,attrs:{type:"number"},domProps:{value:a.kilosVenta},on:{input:[function(t){t.target.composing||e.$set(a,"kilosVenta",e._n(t.target.value))},function(t){return e.actualizarTotalKilos(s)}],blur:[e.finishEditingKilos,function(t){return e.$forceUpdate()}],keyup:function(t){return!t.type.indexOf("key")&&e._k(t.keyCode,"enter",13,t.key,"Enter")?null:e.finishEditingKilos.apply(null,arguments)}}}):e._e()]),t("td",[e._v(e._s(a.medida))]),t("td",[t("input",{staticClass:"precio-venta-input",attrs:{type:"number",inputmode:"decimal",pattern:"[0-9]*",step:"0.01"},domProps:{value:a.precioVenta},on:{input:t=>{a.precioVenta=Number(t.target.value),e.actualizarTotalKilos(s)}}})]),t("td",[e._v("$"+e._s(e.formatNumber(a.totalVenta)))]),t("td",{class:{"desktop-only":!0,"ganancia-positiva":a.ganancia>0,"ganancia-negativa":a.ganancia<0}},[e._v(" $"+e._s(e.formatNumber(a.ganancia))+" ")])])})),null!==e.selectedRowIndex?t("tr",{staticClass:"mobile-only ganancia-row"},[t("td",{attrs:{colspan:"4"}},[t("strong",[e._v("Ganancias:")]),t("span",{class:{"ganancia-positiva":e.itemsVenta[e.selectedRowIndex].ganancia>0,"ganancia-negativa":e.itemsVenta[e.selectedRowIndex].ganancia<0}},[e._v(" $"+e._s(e.formatNumber(e.itemsVenta[e.selectedRowIndex].ganancia))+" ")])])]):e._e()],2),t("tfoot",[t("tr",{staticClass:"total"},[e._m(3),t("td",[t("strong",[e._v("$"+e._s(e.formatNumber(e.totalGeneralVenta)))])]),t("td",{staticClass:"desktop-only"},[t("strong",[e._v("$"+e._s(e.formatNumber(e.gananciaTotal)))])])])])]),t("div",{staticClass:"ganancia-del-dia"},[t("h3",[e._v("Ganancia del Día")]),t("p",{class:{"ganancia-positiva":e.gananciaDelDia>0,"ganancia-negativa":e.gananciaDelDia<0}},[e._v(" $"+e._s(e.formatNumber(e.gananciaDelDia))+" ")])]),t("h2",[e._v("Saldo pendiente")]),t("div",{staticClass:"saldo-pendiente"},[t("div",{staticClass:"input-row"},[t("span",[e._v("Saldo Acumulado Anterior: $"+e._s(e.formatNumber(e.saldoAcumuladoAnterior)))])]),e._l(e.cobros,(function(a,s){return t("div",{key:s,staticClass:"input-row"},[t("input",{directives:[{name:"model",rawName:"v-model",value:a.descripcion,expression:"cobro.descripcion"}],staticClass:"responsive-input",attrs:{type:"text",placeholder:"Flete"},domProps:{value:a.descripcion},on:{input:function(t){t.target.composing||e.$set(a,"descripcion",t.target.value)}}}),t("input",{directives:[{name:"model",rawName:"v-model",value:a.monto,expression:"cobro.monto"}],staticClass:"responsive-input",attrs:{type:"number",placeholder:"Monto"},domProps:{value:a.monto},on:{input:function(t){t.target.composing||e.$set(a,"monto",t.target.value)}}}),t("button",{staticClass:"delete-btn",on:{click:function(t){return e.removeCobro(s)}}},[e._v("Eliminar")])])})),t("button",{staticClass:"add-btn",on:{click:e.addCobro}},[e._v("Agregar Flete")])],2),t("h2",[e._v("Abonos")]),t("div",{staticClass:"abonos"},[e._l(e.abonos,(function(a,s){return t("div",{key:s,staticClass:"input-row"},[t("input",{directives:[{name:"model",rawName:"v-model",value:a.descripcion,expression:"abono.descripcion"}],staticClass:"responsive-input",attrs:{type:"text",placeholder:"Descripción"},domProps:{value:a.descripcion},on:{input:function(t){t.target.composing||e.$set(a,"descripcion",t.target.value)}}}),t("input",{directives:[{name:"model",rawName:"v-model.number",value:a.monto,expression:"abono.monto",modifiers:{number:!0}}],staticClass:"responsive-input",attrs:{type:"number",placeholder:"Monto"},domProps:{value:a.monto},on:{input:function(t){t.target.composing||e.$set(a,"monto",e._n(t.target.value))},blur:function(t){return e.$forceUpdate()}}}),t("button",{staticClass:"delete-btn",on:{click:function(t){return e.removeAbono(s)}}},[e._v("Eliminar")])])})),t("button",{staticClass:"add-btn",on:{click:e.addAbono}},[e._v("Agregar Abono")])],2),t("table",{staticClass:"tabla-saldo"},[t("tr",[t("td",[e._v("Saldo Acumulado Anterior")]),t("td",[e._v("$"+e._s(e.formatNumber(e.saldoAcumuladoAnterior)))])]),t("tr",[t("td",[e._v("Saldo Hoy")]),t("td",[e._v("$"+e._s(e.formatNumber(e.totalGeneralVenta)))])]),e._l(e.cobros,(function(a,s){return t("tr",{key:s},[t("td",[e._v(e._s(a.descripcion))]),t("td",[e._v("-$"+e._s(e.formatNumber(a.monto)))])])})),e._l(e.abonos,(function(a,s){return t("tr",{key:"abono-"+s},[t("td",[e._v(e._s(a.descripcion)+" (Abono)")]),t("td",[e._v("-$"+e._s(e.formatNumber(a.monto)))])])})),t("tr",{staticClass:"total"},[t("td",[e._v("Total")]),t("td",[e._v("$"+e._s(e.formatNumber(e.totalDiaActual)))])]),t("tr",{staticClass:"total"},[t("td",[e._v("Nuevo Saldo Acumulado")]),t("td",[e._v("$"+e._s(e.formatNumber(e.nuevoSaldoAcumulado)))])])],2),t("div",{staticClass:"guardar-container"},[t("div",{staticClass:"observacion-container"},[t("button",{staticClass:"btn-agregar-observacion",on:{click:e.agregarObservacion}},[t("i",{staticClass:"fas fa-plus"}),e._v(" Agregar observación ")])]),e.observacion?t("div",{staticClass:"observacion-existente"},[t("div",{staticClass:"observacion-header"},[t("p",{staticClass:"observacion-titulo"},[e._v("Observación actual:")]),t("div",{staticClass:"observacion-buttons"},[t("button",{staticClass:"btn-editar",on:{click:e.editarObservacion}},[e._v("Editar")]),t("button",{staticClass:"btn-eliminar",attrs:{title:"Eliminar observación"},on:{click:e.eliminarObservacion}},[e._v("×")])])]),t("p",{staticClass:"observacion-texto"},[e._v(e._s(e.observacion))])]):e._e(),t("button",{staticClass:"btn-guardar",on:{click:e.guardarCuenta}},[e._v("Guardar")])]),e.showObservacionModal?t("div",{staticClass:"modal-overlay"},[t("div",{staticClass:"modal-content"},[t("h3",[e._v(e._s(e.observacion?"Editar":"Agregar")+" Observación")]),t("textarea",{directives:[{name:"model",rawName:"v-model",value:e.observacion,expression:"observacion"}],attrs:{placeholder:"Escribe tu observación aquí...",rows:"4"},domProps:{value:e.observacion},on:{input:function(t){t.target.composing||(e.observacion=t.target.value)}}}),t("div",{staticClass:"modal-buttons"},[t("button",{staticClass:"btn-guardar",on:{click:e.guardarObservacion}},[e._v("Guardar")]),t("button",{staticClass:"btn-cancelar",on:{click:e.cancelarObservacion}},[e._v("Cancelar")])])])]):e._e(),e.showMobileActions?t("div",{staticClass:"mobile-actions-modal"},[t("button",{staticClass:"edit-btn",on:{click:function(t){return e.editItem(e.selectedItemIndex)}}},[e._v("Editar")]),t("button",{staticClass:"delete-btn",on:{click:function(t){return e.removeItem(e.selectedItemIndex)}}},[e._v("Eliminar")]),t("button",{on:{click:e.cancelMobileActions}},[e._v("Cancelar")])]):e._e(),e.showEditModal?t("div",{staticClass:"edit-modal"},[t("h3",[e._v("Editar Item")]),t("div",{staticClass:"input-row"},[t("input",{directives:[{name:"model",rawName:"v-model.number",value:e.editingItem.kilos,expression:"editingItem.kilos",modifiers:{number:!0}}],staticClass:"responsive-input",attrs:{type:"number",placeholder:"Kilos",inputmode:"decimal",pattern:"[0-9]*"},domProps:{value:e.editingItem.kilos},on:{input:function(t){t.target.composing||e.$set(e.editingItem,"kilos",e._n(t.target.value))},blur:function(t){return e.$forceUpdate()}}}),t("input",{directives:[{name:"model",rawName:"v-model",value:e.editingItem.medida,expression:"editingItem.medida"}],staticClass:"responsive-input",attrs:{type:"text",placeholder:"Medida"},domProps:{value:e.editingItem.medida},on:{input:function(t){t.target.composing||e.$set(e.editingItem,"medida",t.target.value)}}}),t("input",{directives:[{name:"model",rawName:"v-model.number",value:e.editingItem.costo,expression:"editingItem.costo",modifiers:{number:!0}}],staticClass:"responsive-input",attrs:{type:"number",placeholder:"Costo",inputmode:"decimal",pattern:"[0-9]*"},domProps:{value:e.editingItem.costo},on:{input:function(t){t.target.composing||e.$set(e.editingItem,"costo",e._n(t.target.value))},blur:function(t){return e.$forceUpdate()}}})]),t("div",{staticClass:"button-row"},[t("button",{on:{click:e.saveEditedItem}},[e._v("Guardar")]),t("button",{on:{click:e.cancelEdit}},[e._v("Cancelar")])])]):e._e(),e.showAddProductModal?t("div",{staticClass:"modal"},[t("div",{staticClass:"modal-content"},[t("h3",[e._v("Agregar Nuevo Producto")]),t("div",{staticClass:"input-row"},[t("input",{directives:[{name:"model",rawName:"v-model.number",value:e.newProduct.kilosVenta,expression:"newProduct.kilosVenta",modifiers:{number:!0}}],staticClass:"responsive-input",attrs:{type:"number",placeholder:"Kilos",inputmode:"decimal",pattern:"[0-9]*"},domProps:{value:e.newProduct.kilosVenta},on:{input:function(t){t.target.composing||e.$set(e.newProduct,"kilosVenta",e._n(t.target.value))},blur:function(t){return e.$forceUpdate()}}}),t("input",{directives:[{name:"model",rawName:"v-model",value:e.newProduct.medida,expression:"newProduct.medida"}],staticClass:"responsive-input",attrs:{type:"text",placeholder:"Medida"},domProps:{value:e.newProduct.medida},on:{input:function(t){t.target.composing||e.$set(e.newProduct,"medida",t.target.value)}}}),t("input",{directives:[{name:"model",rawName:"v-model.number",value:e.newProduct.precioVenta,expression:"newProduct.precioVenta",modifiers:{number:!0}}],staticClass:"responsive-input",attrs:{type:"number",placeholder:"Precio de Venta",inputmode:"decimal",pattern:"[0-9]*"},domProps:{value:e.newProduct.precioVenta},on:{input:function(t){t.target.composing||e.$set(e.newProduct,"precioVenta",e._n(t.target.value))},blur:function(t){return e.$forceUpdate()}}})]),t("div",{staticClass:"button-row"},[t("button",{on:{click:e.addNewProduct}},[e._v("Agregar")]),t("button",{on:{click:function(t){e.showAddProductModal=!1}}},[e._v("Cancelar")])])])]):e._e(),t("div",{class:["estado-cuenta",e.estadoCuenta.toLowerCase(),{"no-pagado":"No Pagado"===e.estadoCuenta}]},[e._v(" "+e._s(e.estadoCuenta)+" ")]),e.showSaveMessage?t("div",{staticClass:"save-message"},[e._v(" "+e._s(e.lastSaveMessage)+" ")]):e._e(),t("div",{staticClass:"precios-button-container"},[t("button",{staticClass:"consolidar-btn",attrs:{title:"Consolidar medidas repetidas"},on:{click:e.consolidarItemsRepetidos}},[e._v(" Consolidar Medidas Repetidas ")])])])},o=[function(){var e=this,t=e._self._c;return t("thead",[t("tr",[t("th",[e._v("Kilos")]),t("th",[e._v("Medida")]),t("th",[e._v("Costo")]),t("th",[e._v("Total")]),t("th",{staticClass:"desktop-only"},[e._v("Acciones")])])])},function(){var e=this,t=e._self._c;return t("td",{staticClass:"text-right",attrs:{colspan:"3"}},[t("strong",[e._v("Total General Costo:")])])},function(){var e=this,t=e._self._c;return t("thead",[t("tr",[t("th",[e._v("Kilos")]),t("th",[e._v("Medida")]),t("th",[e._v("Precio")]),t("th",[e._v("Total")]),t("th",{staticClass:"desktop-only"},[e._v("Ganancias")])])])},function(){var e=this,t=e._self._c;return t("td",{staticClass:"text-right",attrs:{colspan:"3"}},[t("strong",[e._v("Total General Venta:")])])}],i=(a("d9e2"),a("14d9"),a("13d5"),a("dc59")),n=a("1494"),r=a("74c9"),c=a("666c"),l=a("19aa1"),d=a("03c4"),u=(a("fa40"),{name:"CuentasJoselito",components:{BackButton:r["a"],PreciosHistorialModal:c["a"],StashModal:l["a"],PreciosClienteButton:d["a"]},data(){return{items:[],newItem:{kilos:null,medida:"",costo:null,precioVenta:null},saldoAcumuladoAnterior:0,cobros:[],abonos:[],fechaSeleccionada:this.obtenerFechaActual(),showMobileActions:!1,selectedItemIndex:null,presionTimer:null,itemsVenta:[],showEditModal:!1,editingItem:null,editingIndex:null,estadoPagado:!1,editingKilosIndex:null,longPressTimer:null,editingField:{index:null,field:null},selectedRowIndex:null,showAddProductModal:!1,newProduct:{kilosVenta:null,medida:"",precioVenta:null},autoSaveTimer:null,lastSavedData:null,saveQueue:[],isSaving:!1,lastSaveTime:null,saveMinInterval:5e3,selectedField:null,tieneObservacion:!1,showObservacionModal:!1,observacion:"",debounceTimers:{},lastSaveMessage:"",showSaveMessage:!1,saveMessageTimer:null}},computed:{fechaFormateada(){const e=new Date(this.fechaSeleccionada+"T00:00:00"),t={year:"numeric",month:"long",day:"numeric"};return e.toLocaleDateString("es-ES",t)},totalGeneral(){return this.items.reduce((e,t)=>e+(t.total||0),0)},totalGeneralVenta(){return this.itemsVenta.reduce((e,t)=>e+(t.totalVenta||0),0)},totalSaldo(){const e=this.cobros.reduce((e,t)=>e+(t.monto||0),0),t=this.abonos.reduce((e,t)=>e+(t.monto||0),0);return this.saldoAcumuladoAnterior+this.totalGeneralVenta+e-t},nuevoSaldoAcumulado(){return(this.saldoAcumuladoAnterior||0)+(this.totalDiaActual||0)},gananciaDelDia(){const e=this.items.reduce((e,t)=>e+(t.total||0),0);return(this.totalGeneralVenta||0)-(e||0)},saldoPendiente(){return this.totalGeneralVenta-this.abonos.reduce((e,t)=>e+(t.monto||0),0)},estadoCuenta(){return this.totalDiaActual<=0?"Pagado":"No Pagado"},gananciaTotal(){return this.itemsVenta.reduce((e,t)=>e+(t.ganancia||0),0)},totalDiaActual(){const e=this.cobros.reduce((e,t)=>e+(parseFloat(t.monto)||0),0),t=this.abonos.reduce((e,t)=>e+(parseFloat(t.monto)||0),0);return(this.totalGeneralVenta||0)-e-t}},methods:{obtenerFechaActual(){const e=new Date;return e.getFullYear()+"-"+String(e.getMonth()+1).padStart(2,"0")+"-"+String(e.getDate()).padStart(2,"0")},formatNumber(e){return null===e||void 0===e?"0.00":e.toLocaleString("en-US",{minimumFractionDigits:2,maximumFractionDigits:2})},normalizarMedida(e){if(!e)return"";let t=e.toLowerCase().trim();return t=t.replace(/\s+/g,""),t=t.replace(/-/g,"/"),t=t.replace(/c\/c|cc|conc/g,"c/c"),t=t.replace(/s\/c|sc|sinc/g,"s/c"),t=t.replace(/^medium$|^med$/g,"med"),t=t.replace(/^grande$|^gde$/g,"gde"),t=t.replace(/^especial$|^esp$/g,"esp"),console.log(`Medida original: "${e}" -> Normalizada: "${t}"`),t},async loadExistingCuenta(e){try{const t=Object(n["e"])(i["a"],"cuentasJoselito",e),a=await Object(n["f"])(t);if(!a.exists())throw new Error("No se encontró la cuenta especificada");{const e=a.data();this.items=(e.items||[]).map(e=>({kilos:Number(e.kilos)||0,medida:e.medida||"",costo:Number(e.costo)||0,total:Number(e.total)||0})),this.itemsVenta=(e.itemsVenta||[]).map(e=>({kilosVenta:Number(e.kilosVenta)||0,medida:e.medida||"",precioVenta:Number(e.precioVenta)||0,totalVenta:Number(e.totalVenta)||0,ganancia:Number(e.ganancia)||0})),this.items.forEach((e,t)=>{if(t<this.itemsVenta.length){const a=e.medida.toLowerCase().trim(),s=/^(\d+)-(\d+)$/.exec(a);if(s){const a=parseInt(s[1])||0,o=parseInt(s[2])||0;if(19===o){const s=20*a;this.itemsVenta[t].kilosVenta=s,this.itemsVenta[t].totalVenta=s*this.itemsVenta[t].precioVenta,this.itemsVenta[t].ganancia=this.itemsVenta[t].totalVenta-e.total}}}}),this.consolidarItemsRepetidos(),this.saldoAcumuladoAnterior=Number(e.saldoAcumuladoAnterior)||0,this.cobros=(e.cobros||[]).map(e=>({descripcion:e.descripcion||"",monto:Number(e.monto)||0})),this.abonos=(e.abonos||[]).map(e=>({descripcion:e.descripcion||"",monto:Number(e.monto)||0})),this.fechaSeleccionada=e.fecha||this.obtenerFechaActual(),this.showObservacionModal=!1,this.tieneObservacion=e.tieneObservacion||!1,this.observacion=e.observacion||""}}catch(t){throw console.error("Error al cargar la cuenta existente:",t),t}},consolidarItemsRepetidos(){const e=this.items.length,t=this.itemsVenta.length,a=new Map,s=new Map;this.items.forEach(e=>{const t=this.normalizarMedida(e.medida);if(a.has(t)){const s=a.get(t);s.kilos+=e.kilos,s.costo=e.costo,s.total=s.kilos*s.costo}else a.set(t,{...e})}),this.itemsVenta.forEach(e=>{const t=this.normalizarMedida(e.medida);if(s.has(t)){const a=s.get(t);a.kilosVenta+=e.kilosVenta,a.precioVenta=e.precioVenta,a.totalVenta=a.kilosVenta*a.precioVenta}else s.set(t,{...e})}),this.items=Array.from(a.values()),this.itemsVenta=Array.from(s.values()),this.items.forEach((e,t)=>{if(t<this.itemsVenta.length){const t=this.normalizarMedida(e.medida),a=this.itemsVenta.find(e=>this.normalizarMedida(e.medida)===t);if(a){const t=e.medida.toLowerCase().trim(),s=/^(\d+)-(\d+)$/.exec(t);if(s){const e=parseInt(s[1])||0,t=parseInt(s[2])||0;if(19===t){const t=20*e;a.kilosVenta=t,a.totalVenta=t*a.precioVenta}}a.ganancia=a.totalVenta-e.total}}});const o=e-this.items.length,i=t-this.itemsVenta.length;console.log("Ítems consolidados:",o,"ítems de costo,",i,"ítems de venta"),o>0||i>0?(this.lastSaveMessage=`Se consolidaron ${o} medidas repetidas en la tabla de costos y ${i} en la tabla de ventas.`,this.showSaveMessage=!0,this.saveMessageTimer&&clearTimeout(this.saveMessageTimer),this.saveMessageTimer=setTimeout(()=>{this.showSaveMessage=!1},3e3),this.handleDataChange()):(this.lastSaveMessage="No se encontraron medidas repetidas para consolidar.",this.showSaveMessage=!0,this.saveMessageTimer&&clearTimeout(this.saveMessageTimer),this.saveMessageTimer=setTimeout(()=>{this.showSaveMessage=!1},3e3))},async obtenerSaldoAcumuladoAnterior(){try{const e=Object(n["c"])(i["a"],"cuentasJoselito"),t=Object(n["o"])(e,Object(n["s"])("fecha","<",this.fechaSeleccionada),Object(n["l"])("fecha","desc"),Object(n["j"])(1)),a=await Object(n["g"])(t);if(!a.empty){const e=a.docs[0].data(),t=(e.cobros||[]).reduce((e,t)=>e+(parseFloat(t.monto)||0),0),s=(e.abonos||[]).reduce((e,t)=>e+(parseFloat(t.monto)||0),0),o=(e.totalGeneralVenta||0)-t-s;if(o<=0)return 0;const i=(e.saldoAcumuladoAnterior||0)+o;return i}return 0}catch(e){return console.error("Error al obtener saldo acumulado anterior:",e),0}},async actualizarCuentasPosteriores(e){try{const e=Object(n["c"])(i["a"],"cuentasJoselito"),t=Object(n["o"])(e,Object(n["l"])("fecha","asc")),a=await Object(n["g"])(t),s=a.docs.map(e=>({id:e.id,...e.data()})),o=s.sort((e,t)=>new Date(e.fecha)-new Date(t.fecha));let r=0;const c=Object(n["t"])(i["a"]);for(let l=0;l<o.length;l++){const e=o[l],t=Object(n["e"])(i["a"],"cuentasJoselito",e.id),a=e.totalGeneralVenta+(e.cobros||[]).reduce((e,t)=>e+(parseFloat(t.monto)||0),0)-(e.abonos||[]).reduce((e,t)=>e+(parseFloat(t.monto)||0),0);r+=a,c.update(t,{saldoAcumuladoAnterior:0===l?0:o[l-1].nuevoSaldoAcumulado,nuevoSaldoAcumulado:r,estadoPagado:r<=0}),r<=0&&(r=0)}await c.commit()}catch(t){throw console.error("Error al actualizar cuentas posteriores:",t),t}},async crearNuevaCuenta(){try{console.log("Iniciando creación de nueva cuenta...");const t=Object(n["c"])(i["a"],"cuentasJoselito");console.log("Referencia a la colección creada:",t);const a=Object(n["o"])(t,Object(n["s"])("fecha","==",this.fechaSeleccionada));console.log("Query construida para fecha:",this.fechaSeleccionada);const s=await Object(n["g"])(a);if(console.log("Query snapshot obtenido:",s.size,"documentos encontrados"),!s.empty)throw new Error("Ya existe una nota registrada para esta fecha.");console.log("Obteniendo saldo acumulado anterior...");const o=await this.obtenerSaldoAcumuladoAnterior();console.log("Saldo anterior obtenido:",o);const r={fecha:this.fechaSeleccionada,items:this.items,itemsVenta:this.itemsVenta,saldoAcumuladoAnterior:o,cobros:[],abonos:[],totalGeneral:this.totalGeneral,totalGeneralVenta:this.totalGeneralVenta,nuevoSaldoAcumulado:o+this.totalDiaActual,estadoPagado:!1,tieneObservacion:this.tieneObservacion,observacion:this.observacion,ultimaActualizacion:(new Date).toISOString()};console.log("Datos preparados para crear nueva cuenta:",r);try{console.log("Intentando crear documento en Firestore...");const e=await Object(n["b"])(t,r);console.log("Documento creado exitosamente con ID:",e.id);const a=await Object(n["f"])(e);if(!a.exists())throw new Error("El documento no se creó correctamente");return console.log("Documento verificado y existe en Firestore"),console.log("Actualizando URL..."),await this.$router.push({name:"CuentasJoselito",params:{id:e.id},query:{edit:"true"}}),console.log("Cargando datos de la nueva cuenta..."),await this.loadExistingCuenta(e.id),alert("Cuenta creada exitosamente"),e.id}catch(e){throw console.error("Error específico de Firestore:",e),new Error("Error al crear el documento en Firestore: "+e.message)}}catch(t){throw console.error("Error detallado al crear nueva cuenta:",t),"Ya existe una nota registrada para esta fecha."===t.message?alert(t.message):alert(`Error al crear la cuenta: ${t.message}\nPor favor, revise la consola para más detalles.`),t}},async guardarNota(){try{if(!this.fechaSeleccionada)throw new Error("La fecha es requerida");const e={fecha:this.fechaSeleccionada,items:this.items.map(e=>({kilos:Number(e.kilos)||0,medida:String(e.medida||""),costo:Number(e.costo)||0,total:Number(e.kilos*e.costo)||0})),itemsVenta:this.itemsVenta.map(e=>({kilosVenta:Number(e.kilosVenta)||0,medida:String(e.medida||""),precioVenta:Number(e.precioVenta)||0,totalVenta:Number(e.kilosVenta*e.precioVenta)||0,ganancia:Number(e.ganancia)||0})),saldoAcumuladoAnterior:Number(this.saldoAcumuladoAnterior)||0,cobros:this.cobros.map(e=>({descripcion:String(e.descripcion||""),monto:Number(e.monto)||0})),abonos:this.abonos.map(e=>({descripcion:String(e.descripcion||""),monto:Number(e.monto)||0})),totalGeneral:Number(this.totalGeneral)||0,totalGeneralVenta:Number(this.totalGeneralVenta)||0,totalCobros:Number(this.cobros.reduce((e,t)=>e+(Number(t.monto)||0),0)),totalAbonos:Number(this.abonos.reduce((e,t)=>e+(Number(t.monto)||0),0)),totalDia:Number(this.totalDiaActual)||0,nuevoSaldoAcumulado:Number(this.nuevoSaldoAcumulado)||0,gananciaDelDia:Number(this.gananciaDelDia)||0,estadoPagado:Boolean(this.totalDiaActual<=0),tieneObservacion:this.tieneObservacion,observacion:this.observacion,ultimaActualizacion:(new Date).toISOString()},t=this.$route.params.id,a="true"===this.$route.query.edit;let s;t&&a?(s=Object(n["e"])(i["a"],"cuentasJoselito",t),await Object(n["r"])(s,e),console.log("Documento actualizado exitosamente:",t)):(s=await Object(n["b"])(Object(n["c"])(i["a"],"cuentasJoselito"),e),console.log("Nuevo documento creado:",s.id),await this.$router.push({name:"CuentasJoselito",params:{id:s.id},query:{edit:"true"}}));const o=await Object(n["f"])(s);if(!o.exists())throw new Error("Error al verificar el documento guardado");const r=o.data(),c=this.validateSavedData(e,r);if(!c)throw new Error("Los datos guardados no coinciden con los datos originales");return setTimeout(()=>{this.actualizarCuentasPosteriores(this.fechaSeleccionada).catch(e=>console.error("Error al actualizar cuentas posteriores:",e))},1e3),alert("Datos guardados exitosamente"),s.id}catch(e){throw console.error("Error al guardar nota:",e),alert("Error al guardar: "+e.message),e}},validateSavedData(e,t){const a=["fecha","saldoAcumuladoAnterior","totalGeneral","totalGeneralVenta","totalCobros","totalAbonos","totalDia","nuevoSaldoAcumulado","gananciaDelDia","estadoPagado"];for(const o of a)if(e[o]!==t[o])return console.error(`Discrepancia en campo ${o}:`,{original:e[o],saved:t[o]}),!1;const s=["items","itemsVenta","cobros","abonos"];for(const o of s)if(e[o].length!==t[o].length)return console.error("Discrepancia en longitud de array "+o),!1;return!0},async addItem(){if(!this.newItem.kilos||!this.newItem.medida||!this.newItem.costo||!this.newItem.precioVenta)return this.lastSaveMessage="Por favor complete todos los campos",this.showSaveMessage=!0,this.saveMessageTimer&&clearTimeout(this.saveMessageTimer),void(this.saveMessageTimer=setTimeout(()=>{this.showSaveMessage=!1},3e3));try{if(!this.$route.params.id){const e={...this.newItem},t=await this.crearNuevaCuenta();if(!t)throw new Error("No se pudo crear la cuenta");this.newItem=e}const e=this.normalizarMedida(this.newItem.medida),t=this.items.findIndex(t=>this.normalizarMedida(t.medida)===e);if(-1!==t){const e=this.items[t],a=e.kilos,s=this.calcularKilosCrudos(this.newItem.medida,this.newItem.kilos,!0),o=a+s,i=this.newItem.costo||e.costo;if(e.kilos=o,e.costo=i,e.total=o*i,this.itemsVenta[t]){const s=this.newItem.precioVenta||this.itemsVenta[t].precioVenta,o=this.calcularKilosCrudos(this.newItem.medida,this.newItem.kilos,!1);this.itemsVenta[t].kilosVenta=a+o,this.itemsVenta[t].precioVenta=s,this.itemsVenta[t].totalVenta=this.itemsVenta[t].kilosVenta*s,this.itemsVenta[t].ganancia=this.itemsVenta[t].totalVenta-e.total}this.lastSaveMessage=`Se sumaron ${this.formatNumber(this.newItem.kilos)} kilos a la medida "${this.newItem.medida}". \nTotal: ${this.formatNumber(o)} kilos.\nCosto: $${this.formatNumber(i)} | Precio: $${this.formatNumber(precioVenta)}`,this.showSaveMessage=!0,this.saveMessageTimer&&clearTimeout(this.saveMessageTimer),this.saveMessageTimer=setTimeout(()=>{this.showSaveMessage=!1},3e3)}else{this.newItem.kilos,this.newItem.costo;const e=this.calcularKilosCrudos(this.newItem.medida,this.newItem.kilos,!0);this.items.push({kilos:e,medida:this.newItem.medida,costo:this.newItem.costo,total:e*this.newItem.costo});const t=this.calcularKilosCrudos(this.newItem.medida,this.newItem.kilos,!1),a=t*this.newItem.precioVenta,s=a-e*this.newItem.costo;this.itemsVenta.push({kilosVenta:t,medida:this.newItem.medida,precioVenta:this.newItem.precioVenta,totalVenta:a,ganancia:s})}this.newItem={kilos:null,medida:"",costo:null,precioVenta:null}}catch(e){console.error("Error al guardar el item:",e),this.lastSaveMessage="Hubo un problema al guardar. Por favor, intente nuevamente.",this.showSaveMessage=!0,this.saveMessageTimer&&clearTimeout(this.saveMessageTimer),this.saveMessageTimer=setTimeout(()=>{this.showSaveMessage=!1},3e3)}},actualizarItemsVenta(){const e=[...this.itemsVenta];this.itemsVenta=this.items.map((t,a)=>{const s=e[a]||{},o=Number(s.precioVenta)||0;let i=Number(t.kilos)||0;const n=t.medida.toLowerCase().trim(),r=/^(\d+)-(\d+)$/.exec(n);if(r){const e=parseInt(r[1])||0,t=parseInt(r[2])||0;19===t&&(i=20*e)}return{kilosVenta:i,medida:t.medida,precioVenta:o,totalVenta:i*o,ganancia:i*o-(Number(t.kilos)||0)*(Number(t.costo)||0)}})},async removeItem(e){try{this.items.splice(e,1),this.itemsVenta.splice(e,1),this.showMobileActions=!1}catch(t){console.error("Error al eliminar item:",t)}},editField(e,t){this.editingField={index:e,field:t},this.$nextTick(()=>{var e;this.$refs.editInput&&(null===(e=this.$refs.editInput[0])||void 0===e||e.focus())})},finishEditing(){const{index:e,field:t}=this.editingField;if(null!==e&&null!==t)try{const a=this.items[e];if("kilos"!==t&&"costo"!==t||(a[t]=parseFloat(a[t])||0),"medida"===t){const e=a.medida.toLowerCase().trim(),t=/^(\d+)-(\d+)$/.exec(e);if(t){const e=parseInt(t[1])||0,s=parseInt(t[2])||0;19===s&&(a.kilos=19*e)}}a.total=a.kilos*a.costo,this.actualizarItemsVenta()}catch(a){console.error("Error al finalizar edición:",a)}this.editingField={index:null,field:null}},addNewProduct(){if(!this.newProduct.kilosVenta||!this.newProduct.medida||!this.newProduct.precioVenta)return this.lastSaveMessage="Por favor complete todos los campos",this.showSaveMessage=!0,this.saveMessageTimer&&clearTimeout(this.saveMessageTimer),void(this.saveMessageTimer=setTimeout(()=>{this.showSaveMessage=!1},3e3));const e=this.normalizarMedida(this.newProduct.medida),t=this.itemsVenta.findIndex(t=>this.normalizarMedida(t.medida)===e);if(-1!==t){var a;const e=this.itemsVenta[t],s=e.kilosVenta,o=this.calcularKilosCrudos(this.newProduct.medida,this.newProduct.kilosVenta,!1),i=s+o,n=this.newProduct.precioVenta||e.precioVenta;e.kilosVenta=i,e.precioVenta=n,e.totalVenta=i*n;const r=(null===(a=this.items[t])||void 0===a?void 0:a.costo)||0,c=i*r;e.ganancia=e.totalVenta-c,this.lastSaveMessage=`Se sumaron ${this.formatNumber(this.newProduct.kilosVenta)} kilos a la medida "${this.newProduct.medida}". \nTotal: ${this.formatNumber(i)} kilos.\nPrecio: $${this.formatNumber(n)}`,this.showSaveMessage=!0,this.saveMessageTimer&&clearTimeout(this.saveMessageTimer),this.saveMessageTimer=setTimeout(()=>{this.showSaveMessage=!1},3e3)}else{var s;const e=this.calcularKilosCrudos(this.newProduct.medida,this.newProduct.kilosVenta,!1),t=e*this.newProduct.precioVenta;this.itemsVenta.push({...this.newProduct,kilosVenta:e,totalVenta:t,ganancia:t-e*((null===(s=this.items[this.itemsVenta.length])||void 0===s?void 0:s.costo)||0)})}this.showAddProductModal=!1,this.newProduct={kilosVenta:null,medida:"",precioVenta:null}},calcularTotalVenta(e){if(this.itemsVenta[e])try{this.actualizarTotalKilos(e)}catch(t){console.error("Error al calcular total de venta:",t)}},imprimirTablas(){window.print()},addCobro(){this.cobros.push({descripcion:"Flete",monto:0})},removeCobro(e){this.cobros.splice(e,1)},addAbono(){this.abonos.push({descripcion:"",monto:0})},removeAbono(e){this.abonos.splice(e,1)},startLongPress(e,t){this.longPressTimer=setTimeout(()=>{this.showMobileActions=!0,this.selectedItemIndex=e,this.selectedField=t},500)},endLongPress(){clearTimeout(this.longPressTimer)},cancelMobileActions(){this.showMobileActions=!1,this.selectedItemIndex=null,this.selectedField=null},editItem(e){this.editingItem={...this.items[e]},this.editingIndex=e,this.showEditModal=!0,this.showMobileActions=!1},saveEditedItem(){null!==this.editingIndex&&this.editingItem&&(this.editingItem.total=this.editingItem.kilos*this.editingItem.costo,this.items[this.editingIndex]={...this.editingItem},this.actualizarItemsVenta()),this.showEditModal=!1,this.editingItem=null,this.editingIndex=null},cancelEdit(){this.showEditModal=!1,this.editingItem=null,this.editingIndex=null},editKilos(e){this.editingKilosIndex=e,this.$nextTick(()=>{var e;this.$refs.kilosInput&&(null===(e=this.$refs.kilosInput[0])||void 0===e||e.focus())})},finishEditingKilos(){null!==this.editingKilosIndex&&this.calcularTotalVenta(this.editingKilosIndex),this.editingKilosIndex=null},actualizarTotalKilos(e){if(null!==e&&this.itemsVenta[e]){const t=this.itemsVenta[e];let a=parseFloat(t.kilosVenta)||0;const s=parseFloat(t.precioVenta)||0;t.medida&&(a=this.calcularKilosCrudos(t.medida,a,!1),t.kilosVenta=a),t.totalVenta=a*s;const o=this.items[e],i=o&&o.total||0;t.ganancia=(t.totalVenta||0)-i}},toggleGananciasMobile(e){window.innerWidth<=600&&(this.selectedRowIndex=this.selectedRowIndex===e?null:e)},debounceGuardarSilencioso(e){this.debounceTimers[e]&&clearTimeout(this.debounceTimers[e]),this.debounceTimers[e]=setTimeout(()=>{this.guardarSilencioso(),delete this.debounceTimers[e]},1e3)},async guardarSilencioso(){try{const e=this.$route.params.id,t="true"===this.$route.query.edit;if(e&&t){if(this.isSaving)return void this.saveQueue.push(!0);const t=Date.now();if(this.lastSaveTime&&t-this.lastSaveTime<this.saveMinInterval)return void(this.autoSaveTimer||(this.autoSaveTimer=setTimeout(()=>{this.guardarSilencioso()},this.saveMinInterval-(t-this.lastSaveTime))));this.isSaving=!0,this.lastSaveTime=t;const a={items:this.items.map(e=>({kilos:Number(e.kilos)||0,medida:String(e.medida||""),costo:Number(e.costo)||0,total:Number(e.kilos*e.costo)||0})),itemsVenta:this.itemsVenta.map(e=>({kilosVenta:Number(e.kilosVenta)||0,medida:String(e.medida||""),precioVenta:Number(e.precioVenta)||0,totalVenta:Number(e.kilosVenta*e.precioVenta)||0,ganancia:Number(e.ganancia)||0})),totalGeneral:Number(this.totalGeneral)||0,totalGeneralVenta:Number(this.totalGeneralVenta)||0,gananciaDelDia:Number(this.gananciaDelDia)||0,ultimaActualizacion:(new Date).toISOString()},s=Object(n["e"])(i["a"],"cuentasJoselito",e);await Object(n["r"])(s,a),this.isSaving=!1,this.saveQueue.length>0&&(this.saveQueue.shift(),setTimeout(()=>{this.guardarSilencioso()},100))}}catch(e){console.error("Error al guardar silenciosamente:",e),this.isSaving=!1}},async guardarCuenta(){try{const e=this.$route.params.id,t="true"===this.$route.query.edit,a={fecha:this.fechaSeleccionada,items:this.items.map(e=>({kilos:Number(e.kilos)||0,medida:String(e.medida||""),costo:Number(e.costo)||0,total:Number(e.kilos*e.costo)||0})),itemsVenta:this.itemsVenta.map(e=>({kilosVenta:Number(e.kilosVenta)||0,medida:String(e.medida||""),precioVenta:Number(e.precioVenta)||0,totalVenta:Number(e.kilosVenta*e.precioVenta)||0,ganancia:Number(e.ganancia)||0})),saldoAcumuladoAnterior:Number(this.saldoAcumuladoAnterior)||0,cobros:this.cobros,abonos:this.abonos,totalGeneral:Number(this.totalGeneral)||0,totalGeneralVenta:Number(this.totalGeneralVenta)||0,totalDia:Number(this.totalDiaActual)||0,nuevoSaldoAcumulado:Number(this.nuevoSaldoAcumulado)||0,gananciaDelDia:Number(this.gananciaDelDia)||0,estadoPagado:Boolean(this.totalDiaActual<=0),tieneObservacion:this.tieneObservacion,observacion:this.observacion,ultimaActualizacion:(new Date).toISOString()};let s;return e&&t?(s=Object(n["e"])(i["a"],"cuentasJoselito",e),await Object(n["r"])(s,a),console.log("Documento actualizado exitosamente:",e)):(s=await Object(n["b"])(Object(n["c"])(i["a"],"cuentasJoselito"),a),console.log("Nuevo documento creado:",s.id),await this.$router.push({name:"CuentasJoselito",params:{id:s.id},query:{edit:"true"}})),setTimeout(()=>{this.actualizarCuentasPosteriores(this.fechaSeleccionada).catch(e=>console.error("Error al actualizar cuentas posteriores:",e))},100),alert("Cuenta guardada exitosamente"),s.id}catch(e){throw console.error("Error al guardar la cuenta:",e),alert("Error al guardar la cuenta: "+e.message),e}},agregarObservacion(){this.showObservacionModal=!0},guardarObservacion(){this.observacion.trim()&&(this.tieneObservacion=!0),this.showObservacionModal=!1},cancelarObservacion(){this.tieneObservacion||(this.observacion=""),this.showObservacionModal=!1},editarObservacion(){this.showObservacionModal=!0},eliminarObservacion(){confirm("¿Estás seguro de que deseas eliminar esta observación?")&&(this.observacion="",this.tieneObservacion=!1)},handleDataChange(){this.$route.params.id&&"true"===this.$route.query.edit&&(this.autoSaveTimer&&clearTimeout(this.autoSaveTimer),this.autoSaveTimer=setTimeout(async()=>{await this.queueSave()},2e3))},async queueSave(){this.saveQueue.push({timestamp:Date.now(),operation:async()=>{await this.autoSaveNota()}}),this.isSaving||await this.processSaveQueue()},async processSaveQueue(){if(!this.isSaving&&0!==this.saveQueue.length){this.isSaving=!0;try{while(this.saveQueue.length>0){const e=Date.now();this.lastSaveTime&&e-this.lastSaveTime<this.saveMinInterval&&await new Promise(t=>setTimeout(t,this.saveMinInterval-(e-this.lastSaveTime)));const t=this.saveQueue[0];await this.retryOperation(t.operation),this.lastSaveTime=Date.now(),this.saveQueue.shift()}}catch(e){console.error("Error procesando cola de guardado:",e),"resource-exhausted"===e.code&&(await new Promise(e=>setTimeout(e,1e4)),await this.processSaveQueue())}finally{this.isSaving=!1}}},async retryOperation(e,t=3){let a=0;while(a<t)try{return await e()}catch(s){if(a++,console.error(`Error en operación (intento ${a}/${t}):`,s),"resource-exhausted"===s.code?await new Promise(e=>setTimeout(e,5e3*Math.pow(2,a))):await new Promise(e=>setTimeout(e,1e3*Math.pow(2,a))),a>=t)throw console.error("Se alcanzó el número máximo de intentos. Operación fallida."),s}},async autoSaveNota(){if(this.$route.params.id)try{const e={items:this.items.map(e=>({kilos:Number(e.kilos)||0,medida:String(e.medida||""),costo:Number(e.costo)||0,total:Number(e.kilos*e.costo)||0})),itemsVenta:this.itemsVenta.map(e=>({kilosVenta:Number(e.kilosVenta)||0,medida:String(e.medida||""),precioVenta:Number(e.precioVenta)||0,totalVenta:Number(e.totalVenta)||0,ganancia:Number(e.ganancia)||0})),totalGeneral:Number(this.totalGeneral)||0,totalGeneralVenta:Number(this.totalGeneralVenta)||0,nuevoSaldoAcumulado:Number(this.nuevoSaldoAcumulado)||0,cobros:this.cobros,abonos:this.abonos,estadoPagado:"Pagado"===this.estadoCuenta,tieneObservacion:Boolean(this.observacion&&this.observacion.trim()),observacion:String(this.observacion||""),ultimaActualizacion:(new Date).toISOString()};await Object(n["r"])(Object(n["e"])(i["a"],"cuentasJoselito",this.$route.params.id),e),this.lastSaveMessage="Guardado automático: "+(new Date).toLocaleTimeString(),this.showSaveMessage=!0,this.saveMessageTimer&&clearTimeout(this.saveMessageTimer),this.saveMessageTimer=setTimeout(()=>{this.showSaveMessage=!1},3e3),console.log("Cuenta auto-guardada exitosamente:",(new Date).toLocaleTimeString())}catch(e){if("resource-exhausted"===e.code)throw e;throw console.error("Error en auto-guardado:",e),e}},calcularKilosCrudos(e,t,a=!1){const s=e.toLowerCase().trim(),o=/^(\d+)-(\d+)$/.exec(s);if(o){const e=parseInt(o[1])||0,i=parseInt(o[2])||0,n=19!==i||a?i:20,r=e*n;return 19!==i||a||r===t?19===i&&a&&console.log(`Cálculo de crudos para tabla de costos: ${e} cajas * 19kg = ${r}kg (formato ${s})`):(this.lastSaveMessage=`Cálculo de crudos: ${e} cajas * 20kg = ${r}kg (formato ${s})`,this.showSaveMessage=!0,this.saveMessageTimer&&clearTimeout(this.saveMessageTimer),this.saveMessageTimer=setTimeout(()=>{this.showSaveMessage=!1},3e3)),r}const i=s.includes("crudo");if(i&&/^\d+\*\d+(\+\d+)?$/.test(s)){const e=s.split(/[\*\+]/);if(e.length>=2){const a=parseInt(e[0])||0,s=parseInt(e[1])||0,o=19===s?20:s;let i=0;e.length>2&&(i=parseInt(e[2])||0);const n=a*o+i;return 19===s&&n!==t&&(this.lastSaveMessage=`Cálculo de crudos: ${a} cajas * 20kg + ${i}kg = ${n}kg`,this.showSaveMessage=!0,this.saveMessageTimer&&clearTimeout(this.saveMessageTimer),this.saveMessageTimer=setTimeout(()=>{this.showSaveMessage=!1},3e3)),n}}return t}},created(){const e=this.$route.params.id,t="true"===this.$route.query.edit;e&&t&&this.loadExistingCuenta(e)},watch:{$route(e,t){const a=e.params.id,s="true"===e.query.edit;a&&s?this.loadExistingCuenta(a):(this.items=[],this.itemsVenta=[],this.saldoAcumuladoAnterior=0,this.cobros=[],this.abonos=[],this.fechaSeleccionada=this.obtenerFechaActual(),this.estadoPagado=!1)},items:{handler:"handleDataChange",deep:!0},itemsVenta:{handler:"handleDataChange",deep:!0},cobros:{handler:"handleDataChange",deep:!0},abonos:{handler:"handleDataChange",deep:!0},fechaSeleccionada:{handler:"handleDataChange"},saldoAcumuladoAnterior:{handler:"handleDataChange"},observacion:"handleDataChange"},beforeUnmount(){this.autoSaveTimer&&clearTimeout(this.autoSaveTimer),Object.values(this.debounceTimers).forEach(e=>{clearTimeout(e)}),this.saveQueue.length>0&&this.processSaveQueue()}}),m=u,h=(a("dd55"),a("2877")),v=Object(h["a"])(m,s,o,!1,null,"01d9f637",null);t["a"]=v.exports},a300:function(e,t,a){"use strict";a("fda1")},dd55:function(e,t,a){"use strict";a("0513")},f232:function(e,t,a){},fda1:function(e,t,a){}}]);