(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["app.71e09a47"],{"1eae":function(e,t,a){"use strict";a("a826")},"45e6":function(e,t,a){"use strict";a("9923")},6516:function(e,t,a){},8091:function(e,t,a){"use strict";a("6516")},"85fe":function(e,t,a){"use strict";var o=function(){var e=this,t=e._self._c;return t("div",{staticClass:"cuentas-otilio-container"},[e.isSaving?t("div",{staticClass:"auto-save-indicator"},[t("span",{staticClass:"save-dot"}),e._v(" Guardando... ")]):e._e(),t("div",{staticClass:"back-button-container"},[t("BackButton",{attrs:{to:"/cuentas-otilio"}}),t("PreciosHistorialModal",{attrs:{clienteActual:"otilio"}}),t("StashModal",{attrs:{cliente:"otilio"}})],1),t("h1",[e._v("Cuentas Otilio")]),t("div",{staticClass:"precios-button-container"},[t("PreciosClienteButton",{attrs:{clienteId:"otilio"}})],1),t("div",{staticClass:"fecha-actual"},[t("div",{staticClass:"fecha-input"},[t("input",{directives:[{name:"model",rawName:"v-model",value:e.fechaSeleccionada,expression:"fechaSeleccionada"}],attrs:{type:"date"},domProps:{value:e.fechaSeleccionada},on:{input:function(t){t.target.composing||(e.fechaSeleccionada=t.target.value)}}})]),t("div",{staticClass:"fecha-display"},[e._v(" "+e._s(e.fechaFormateada)+" ")])]),t("div",{staticClass:"input-section"},[t("h2",[e._v("Ingresar Datos")]),t("div",{staticClass:"input-row"},[t("input",{directives:[{name:"model",rawName:"v-model.number",value:e.newItem.kilos,expression:"newItem.kilos",modifiers:{number:!0}}],staticClass:"responsive-input",attrs:{type:"number",placeholder:"Kilos",inputmode:"decimal",pattern:"[0-9]*"},domProps:{value:e.newItem.kilos},on:{input:function(t){t.target.composing||e.$set(e.newItem,"kilos",e._n(t.target.value))},blur:function(t){return e.$forceUpdate()}}}),t("input",{directives:[{name:"model",rawName:"v-model",value:e.newItem.medida,expression:"newItem.medida"}],staticClass:"responsive-input",attrs:{type:"text",placeholder:"Medida"},domProps:{value:e.newItem.medida},on:{input:function(t){t.target.composing||e.$set(e.newItem,"medida",t.target.value)}}}),t("input",{directives:[{name:"model",rawName:"v-model.number",value:e.newItem.costo,expression:"newItem.costo",modifiers:{number:!0}}],staticClass:"responsive-input",attrs:{type:"number",placeholder:"Costo",inputmode:"decimal",pattern:"[0-9]*"},domProps:{value:e.newItem.costo},on:{input:function(t){t.target.composing||e.$set(e.newItem,"costo",e._n(t.target.value))},blur:function(t){return e.$forceUpdate()}}}),t("input",{directives:[{name:"model",rawName:"v-model.number",value:e.newItem.precioVenta,expression:"newItem.precioVenta",modifiers:{number:!0}}],staticClass:"responsive-input",attrs:{type:"number",placeholder:"Precio Venta",inputmode:"decimal",pattern:"[0-9]*"},domProps:{value:e.newItem.precioVenta},on:{input:function(t){t.target.composing||e.$set(e.newItem,"precioVenta",e._n(t.target.value))},blur:function(t){return e.$forceUpdate()}}}),t("button",{on:{click:e.addItem}},[e._v("Agregar")])])]),t("table",{staticClass:"tabla-principal"},[e._m(0),t("tbody",e._l(e.items,(function(a,o){return t("tr",{key:o},[t("td",{on:{click:function(t){return e.editField(o,"kilos")},touchstart:function(t){return e.startLongPress(o,"kilos")},touchend:e.endLongPress}},[e._v(" "+e._s(e.editingField.index===o&&"kilos"===e.editingField.field?"":e.formatNumber(a.kilos))+" "),e.editingField.index===o&&"kilos"===e.editingField.field?t("input",{directives:[{name:"model",rawName:"v-model.number",value:a.kilos,expression:"item.kilos",modifiers:{number:!0}}],ref:"editInput",refInFor:!0,attrs:{type:"number"},domProps:{value:a.kilos},on:{input:[function(t){t.target.composing||e.$set(a,"kilos",e._n(t.target.value))},function(t){return e.actualizarTotalEnTiempoReal(o)}],blur:[e.finishEditing,function(t){return e.$forceUpdate()}],keyup:function(t){return!t.type.indexOf("key")&&e._k(t.keyCode,"enter",13,t.key,"Enter")?null:e.finishEditing.apply(null,arguments)}}}):e._e()]),t("td",{on:{click:function(t){return e.editField(o,"medida")},touchstart:function(t){return e.startLongPress(o,"medida")},touchend:e.endLongPress}},[e._v(" "+e._s(e.editingField.index===o&&"medida"===e.editingField.field?"":a.medida)+" "),e.editingField.index===o&&"medida"===e.editingField.field?t("input",{directives:[{name:"model",rawName:"v-model",value:a.medida,expression:"item.medida"}],ref:"editInput",refInFor:!0,attrs:{type:"text"},domProps:{value:a.medida},on:{blur:e.finishEditing,keyup:function(t){return!t.type.indexOf("key")&&e._k(t.keyCode,"enter",13,t.key,"Enter")?null:e.finishEditing.apply(null,arguments)},input:function(t){t.target.composing||e.$set(a,"medida",t.target.value)}}}):e._e()]),t("td",{on:{click:function(t){return e.editField(o,"costo")},touchstart:function(t){return e.startLongPress(o,"costo")},touchend:e.endLongPress}},[e._v(" "+e._s(e.editingField.index===o&&"costo"===e.editingField.field?"":"$"+e.formatNumber(a.costo))+" "),e.editingField.index===o&&"costo"===e.editingField.field?t("input",{directives:[{name:"model",rawName:"v-model.number",value:a.costo,expression:"item.costo",modifiers:{number:!0}}],ref:"editInput",refInFor:!0,attrs:{type:"number"},domProps:{value:a.costo},on:{blur:[e.finishEditing,function(t){return e.$forceUpdate()}],keyup:function(t){return!t.type.indexOf("key")&&e._k(t.keyCode,"enter",13,t.key,"Enter")?null:e.finishEditing.apply(null,arguments)},input:function(t){t.target.composing||e.$set(a,"costo",e._n(t.target.value))}}}):e._e()]),t("td",[e._v("$"+e._s(e.formatNumber(a.total)))]),t("td",{staticClass:"action-column desktop-only"},[t("button",{staticClass:"delete-btn",on:{click:function(t){return e.removeItem(o)}}},[e._v("Eliminar")])])])})),0),t("tfoot",[t("tr",{staticClass:"total"},[e._m(1),t("td",[t("strong",[e._v("$"+e._s(e.formatNumber(e.totalGeneral)))])]),t("td")])])]),t("h2",[e._v("Precios de Venta")]),t("div",{staticClass:"add-product-button"},[t("button",{on:{click:function(t){e.showAddProductModal=!0}}},[e._v("Agregar Producto")])]),t("table",{staticClass:"tabla-venta"},[e._m(2),t("tbody",[e._l(e.itemsVenta,(function(a,o){return t("tr",{key:o,on:{click:function(t){return e.toggleGananciasMobile(o)}}},[t("td",{on:{click:function(t){return e.editKilos(o)},touchstart:function(t){return e.startLongPress(o)},touchend:e.endLongPress}},[e._v(" "+e._s(e.editingKilosIndex===o?"":e.formatNumber(a.kilosVenta))+" "),e.editingKilosIndex===o?t("input",{directives:[{name:"model",rawName:"v-model.number",value:a.kilosVenta,expression:"item.kilosVenta",modifiers:{number:!0}}],ref:"kilosInput",refInFor:!0,attrs:{type:"number"},domProps:{value:a.kilosVenta},on:{input:[function(t){t.target.composing||e.$set(a,"kilosVenta",e._n(t.target.value))},function(t){return e.calcularTotalVenta(o)}],blur:[e.finishEditingKilos,function(t){return e.$forceUpdate()}],keyup:function(t){return!t.type.indexOf("key")&&e._k(t.keyCode,"enter",13,t.key,"Enter")?null:e.finishEditingKilos.apply(null,arguments)}}}):e._e()]),t("td",[t("div",{staticClass:"medida-container"},[t("span",[e._v(e._s(a.medida))]),t("input",{staticClass:"verificacion-checkbox",attrs:{type:"checkbox",title:a.verificado?"Medida verificada":"Marcar como verificada"},domProps:{checked:a.verificado},on:{change:function(t){return e.toggleVerificacion(o,t)}}})])]),t("td",[t("input",{staticClass:"precio-venta-input",attrs:{type:"number",inputmode:"decimal",pattern:"[0-9]*",step:"0.01"},domProps:{value:a.precioVenta},on:{input:t=>{a.precioVenta=Number(t.target.value),e.calcularTotalVenta(o)}}})]),t("td",[e._v("$"+e._s(e.formatNumber(a.totalVenta)))]),t("td",{class:{"desktop-only":!0,"ganancia-positiva":a.ganancia>0,"ganancia-negativa":a.ganancia<0}},[e._v(" $"+e._s(e.formatNumber(a.ganancia))+" ")])])})),null!==e.selectedRowIndex?t("tr",{staticClass:"mobile-only ganancia-row"},[t("td",{attrs:{colspan:"4"}},[t("strong",[e._v("Ganancias:")]),t("span",{class:{"ganancia-positiva":e.itemsVenta[e.selectedRowIndex].ganancia>0,"ganancia-negativa":e.itemsVenta[e.selectedRowIndex].ganancia<0}},[e._v(" $"+e._s(e.formatNumber(e.itemsVenta[e.selectedRowIndex].ganancia))+" ")])])]):e._e()],2),t("tfoot",[t("tr",{staticClass:"total"},[e._m(3),t("td",[t("strong",[e._v("$"+e._s(e.formatNumber(e.totalGeneralVenta)))])]),t("td",{staticClass:"desktop-only"},[t("strong",[e._v("$"+e._s(e.formatNumber(e.gananciaTotal)))])])])])]),t("div",{staticClass:"ganancia-del-dia"},[t("h3",[e._v("Ganancia del Día")]),t("p",{class:{"ganancia-positiva":e.gananciaDelDia>0,"ganancia-negativa":e.gananciaDelDia<0}},[e._v(" $"+e._s(e.formatNumber(e.gananciaDelDia))+" ")])]),t("h2",[e._v("Saldo pendiente")]),t("div",{staticClass:"saldo-pendiente"},[t("div",{staticClass:"input-row"},[t("span",[e._v("Saldo Acumulado Anterior: $"+e._s(e.formatNumber(e.saldoAcumuladoAnterior)))])]),e._l(e.cobros,(function(a,o){return t("div",{key:o,staticClass:"input-row"},[t("input",{directives:[{name:"model",rawName:"v-model",value:a.descripcion,expression:"cobro.descripcion"}],staticClass:"responsive-input",attrs:{type:"text",placeholder:"Flete"},domProps:{value:a.descripcion},on:{input:function(t){t.target.composing||e.$set(a,"descripcion",t.target.value)}}}),t("input",{directives:[{name:"model",rawName:"v-model",value:a.monto,expression:"cobro.monto"}],staticClass:"responsive-input",attrs:{type:"number",placeholder:"Monto"},domProps:{value:a.monto},on:{input:function(t){t.target.composing||e.$set(a,"monto",t.target.value)}}}),t("button",{staticClass:"delete-btn",on:{click:function(t){return e.removeCobro(o)}}},[e._v("Eliminar")])])})),t("button",{staticClass:"add-btn",on:{click:e.addCobro}},[e._v("Agregar Flete")])],2),t("h2",[e._v("Abonos")]),t("div",{staticClass:"abonos"},[e._l(e.abonos,(function(a,o){return t("div",{key:o,staticClass:"input-row"},[t("input",{directives:[{name:"model",rawName:"v-model",value:a.descripcion,expression:"abono.descripcion"}],staticClass:"responsive-input",attrs:{type:"text",placeholder:"Descripción"},domProps:{value:a.descripcion},on:{input:function(t){t.target.composing||e.$set(a,"descripcion",t.target.value)}}}),t("input",{directives:[{name:"model",rawName:"v-model.number",value:a.monto,expression:"abono.monto",modifiers:{number:!0}}],staticClass:"responsive-input",attrs:{type:"number",placeholder:"Monto"},domProps:{value:a.monto},on:{input:function(t){t.target.composing||e.$set(a,"monto",e._n(t.target.value))},blur:function(t){return e.$forceUpdate()}}}),t("button",{staticClass:"delete-btn",on:{click:function(t){return e.removeAbono(o)}}},[e._v("Eliminar")])])})),t("button",{staticClass:"add-btn",on:{click:e.addAbono}},[e._v("Agregar Abono")])],2),t("table",{staticClass:"tabla-saldo"},[t("tr",[t("td",[e._v("Saldo Acumulado Anterior")]),t("td",[e._v("$"+e._s(e.formatNumber(e.saldoAcumuladoAnterior)))])]),t("tr",[t("td",[e._v("Saldo Hoy")]),t("td",[e._v("$"+e._s(e.formatNumber(e.totalGeneralVenta)))])]),e._l(e.cobros,(function(a,o){return t("tr",{key:o},[t("td",[e._v(e._s(a.descripcion))]),t("td",[e._v("-$"+e._s(e.formatNumber(a.monto)))])])})),e._l(e.abonos,(function(a,o){return t("tr",{key:"abono-"+o},[t("td",[e._v(e._s(a.descripcion)+" (Abono)")]),t("td",[e._v("-$"+e._s(e.formatNumber(a.monto)))])])})),t("tr",{staticClass:"total"},[t("td",[e._v("Total")]),t("td",[e._v("$"+e._s(e.formatNumber(e.totalDiaActual)))])]),t("tr",{staticClass:"total"},[t("td",[e._v("Nuevo Saldo Acumulado")]),t("td",[e._v("$"+e._s(e.formatNumber(e.nuevoSaldoAcumulado)))])])],2),t("div",{staticClass:"button-container"},[t("button",{staticClass:"save-button",attrs:{disabled:e.isGuardando},on:{click:e.guardarNota}},[e._v(" "+e._s(e.isGuardando?"Guardando...":"Guardar Nota")+" ")]),t("button",{staticClass:"print-button",on:{click:e.imprimirTablas}},[e._v("Imprimir")])]),e.showMobileActions?t("div",{staticClass:"mobile-actions-modal"},[t("button",{staticClass:"edit-btn",on:{click:function(t){return e.editItem(e.selectedItemIndex)}}},[e._v("Editar")]),t("button",{staticClass:"delete-btn",on:{click:function(t){return e.removeItem(e.selectedItemIndex)}}},[e._v("Eliminar")]),t("button",{on:{click:e.cancelMobileActions}},[e._v("Cancelar")])]):e._e(),e.showEditModal?t("div",{staticClass:"edit-modal"},[t("h3",[e._v("Editar Item")]),t("div",{staticClass:"input-row"},[t("input",{directives:[{name:"model",rawName:"v-model.number",value:e.editingItem.kilos,expression:"editingItem.kilos",modifiers:{number:!0}}],staticClass:"responsive-input",attrs:{type:"number",placeholder:"Kilos",inputmode:"decimal",pattern:"[0-9]*"},domProps:{value:e.editingItem.kilos},on:{input:function(t){t.target.composing||e.$set(e.editingItem,"kilos",e._n(t.target.value))},blur:function(t){return e.$forceUpdate()}}}),t("input",{directives:[{name:"model",rawName:"v-model",value:e.editingItem.medida,expression:"editingItem.medida"}],staticClass:"responsive-input",attrs:{type:"text",placeholder:"Medida"},domProps:{value:e.editingItem.medida},on:{input:function(t){t.target.composing||e.$set(e.editingItem,"medida",t.target.value)}}}),t("input",{directives:[{name:"model",rawName:"v-model.number",value:e.editingItem.costo,expression:"editingItem.costo",modifiers:{number:!0}}],staticClass:"responsive-input",attrs:{type:"number",placeholder:"Costo",inputmode:"decimal",pattern:"[0-9]*"},domProps:{value:e.editingItem.costo},on:{input:function(t){t.target.composing||e.$set(e.editingItem,"costo",e._n(t.target.value))},blur:function(t){return e.$forceUpdate()}}})]),t("div",{staticClass:"button-row"},[t("button",{on:{click:e.saveEditedItem}},[e._v("Guardar")]),t("button",{on:{click:e.cancelEdit}},[e._v("Cancelar")])])]):e._e(),e.showAddProductModal?t("div",{staticClass:"modal"},[t("div",{staticClass:"modal-content"},[t("h3",[e._v("Agregar Nuevo Producto")]),t("div",{staticClass:"input-row"},[t("input",{directives:[{name:"model",rawName:"v-model.number",value:e.newProduct.kilosVenta,expression:"newProduct.kilosVenta",modifiers:{number:!0}}],staticClass:"responsive-input",attrs:{type:"number",placeholder:"Kilos",inputmode:"decimal",pattern:"[0-9]*"},domProps:{value:e.newProduct.kilosVenta},on:{input:function(t){t.target.composing||e.$set(e.newProduct,"kilosVenta",e._n(t.target.value))},blur:function(t){return e.$forceUpdate()}}}),t("input",{directives:[{name:"model",rawName:"v-model",value:e.newProduct.medida,expression:"newProduct.medida"}],staticClass:"responsive-input",attrs:{type:"text",placeholder:"Medida"},domProps:{value:e.newProduct.medida},on:{input:function(t){t.target.composing||e.$set(e.newProduct,"medida",t.target.value)}}}),t("input",{directives:[{name:"model",rawName:"v-model.number",value:e.newProduct.precioVenta,expression:"newProduct.precioVenta",modifiers:{number:!0}}],staticClass:"responsive-input",attrs:{type:"number",placeholder:"Precio de Venta",inputmode:"decimal",pattern:"[0-9]*"},domProps:{value:e.newProduct.precioVenta},on:{input:function(t){t.target.composing||e.$set(e.newProduct,"precioVenta",e._n(t.target.value))},blur:function(t){return e.$forceUpdate()}}})]),t("div",{staticClass:"button-row"},[t("button",{on:{click:e.addNewProduct}},[e._v("Agregar")]),t("button",{on:{click:function(t){e.showAddProductModal=!1}}},[e._v("Cancelar")])])])]):e._e(),t("div",{class:["estado-cuenta",e.estadoCuenta.toLowerCase(),{"no-pagado":"No Pagado"===e.estadoCuenta}]},[e._v(" "+e._s(e.estadoCuenta)+" ")]),t("div",{staticClass:"guardar-container"},[t("div",{staticClass:"observacion-container"},[t("button",{staticClass:"btn-agregar-observacion",on:{click:e.agregarObservacion}},[t("i",{staticClass:"fas fa-plus"}),e._v(" Agregar observación ")])]),e.observacion?t("div",{staticClass:"observacion-existente"},[t("div",{staticClass:"observacion-header"},[t("p",{staticClass:"observacion-titulo"},[e._v("Observación actual:")]),t("div",{staticClass:"observacion-buttons"},[t("button",{staticClass:"btn-editar",on:{click:e.editarObservacion}},[e._v("Editar")]),t("button",{staticClass:"btn-eliminar",attrs:{title:"Eliminar observación"},on:{click:e.eliminarObservacion}},[e._v("×")])])]),t("p",{staticClass:"observacion-texto"},[e._v(e._s(e.observacion))])]):e._e()]),e.showObservacionModal?t("div",{staticClass:"modal-overlay"},[t("div",{staticClass:"modal-content"},[t("h3",[e._v(e._s(e.observacion?"Editar":"Agregar")+" Observación")]),t("textarea",{directives:[{name:"model",rawName:"v-model",value:e.observacion,expression:"observacion"}],attrs:{placeholder:"Escribe tu observación aquí...",rows:"4"},domProps:{value:e.observacion},on:{input:function(t){t.target.composing||(e.observacion=t.target.value)}}}),t("div",{staticClass:"modal-buttons"},[t("button",{staticClass:"btn-guardar",on:{click:e.guardarObservacion}},[e._v("Guardar")]),t("button",{staticClass:"btn-cancelar",on:{click:e.cancelarObservacion}},[e._v("Cancelar")])])])]):e._e(),e.showSaveMessage?t("div",{staticClass:"auto-save-message"},[e._v(" "+e._s(e.lastSaveMessage)+" ")]):e._e()])},i=[function(){var e=this,t=e._self._c;return t("thead",[t("tr",[t("th",[e._v("Kilos")]),t("th",[e._v("Medida")]),t("th",[e._v("Costo")]),t("th",[e._v("Total")]),t("th",{staticClass:"desktop-only"},[e._v("Acciones")])])])},function(){var e=this,t=e._self._c;return t("td",{staticClass:"text-right",attrs:{colspan:"3"}},[t("strong",[e._v("Total General Costo:")])])},function(){var e=this,t=e._self._c;return t("thead",[t("tr",[t("th",[e._v("Kilos")]),t("th",[e._v("Medida")]),t("th",[e._v("Precio")]),t("th",[e._v("Total")]),t("th",{staticClass:"desktop-only"},[e._v("Ganancias")])])])},function(){var e=this,t=e._self._c;return t("td",{staticClass:"text-right",attrs:{colspan:"3"}},[t("strong",[e._v("Total General Venta:")])])}],n=(a("d9e2"),a("14d9"),a("13d5"),a("dc59")),s=a("1494"),r=a("74c9"),c=a("666c"),l=a("19aa1"),d=a("03c4"),u={name:"CuentasOtilio",components:{BackButton:r["a"],PreciosHistorialModal:c["a"],StashModal:l["a"],PreciosClienteButton:d["a"]},data(){return{items:[],newItem:{kilos:null,medida:"",costo:null,precioVenta:null},saldoAcumuladoAnterior:0,cobros:[],abonos:[],fechaSeleccionada:this.obtenerFechaActual(),showMobileActions:!1,selectedItemIndex:null,presionTimer:null,itemsVenta:[],showEditModal:!1,editingItem:null,editingIndex:null,estadoPagado:!1,editingKilosIndex:null,longPressTimer:null,editingField:{index:null,field:null},selectedRowIndex:null,showAddProductModal:!1,newProduct:{kilosVenta:null,medida:"",precioVenta:null},autoSaveTimer:null,lastSavedData:null,saveQueue:[],isSaving:!1,lastSaveTime:null,saveMinInterval:5e3,selectedField:null,tieneObservacion:!1,showObservacionModal:!1,observacion:"",isGuardando:!1,lastSaveMessage:"",showSaveMessage:!1,saveMessageTimer:null,saveMessage:"",isSavingVerificacion:!1}},computed:{fechaFormateada(){const e=new Date(this.fechaSeleccionada+"T00:00:00"),t={year:"numeric",month:"long",day:"numeric"};return e.toLocaleDateString("es-ES",t)},totalGeneral(){return this.items.reduce((e,t)=>e+(t.total||0),0)},totalGeneralVenta(){return this.itemsVenta.reduce((e,t)=>e+(t.totalVenta||0),0)},totalSaldo(){const e=this.cobros.reduce((e,t)=>e+(t.monto||0),0),t=this.abonos.reduce((e,t)=>e+(t.monto||0),0);return this.saldoAcumuladoAnterior+this.totalGeneralVenta+e-t},nuevoSaldoAcumulado(){return(this.saldoAcumuladoAnterior||0)+(this.totalDiaActual||0)},gananciaDelDia(){const e=this.items.reduce((e,t)=>e+(t.total||0),0);return(this.totalGeneralVenta||0)-(e||0)},saldoPendiente(){return this.totalGeneralVenta-this.abonos.reduce((e,t)=>e+(t.monto||0),0)},estadoCuenta(){return this.totalDiaActual<=0?"Pagado":"No Pagado"},gananciaTotal(){return this.itemsVenta.reduce((e,t)=>e+(t.ganancia||0),0)},totalDiaActual(){const e=this.cobros.reduce((e,t)=>e+(parseFloat(t.monto)||0),0),t=this.abonos.reduce((e,t)=>e+(parseFloat(t.monto)||0),0);return(this.totalGeneralVenta||0)-e-t}},methods:{obtenerFechaActual(){const e=new Date;return e.getFullYear()+"-"+String(e.getMonth()+1).padStart(2,"0")+"-"+String(e.getDate()).padStart(2,"0")},actualizarTotalEnTiempoReal(e){const t=this.items[e];if(t){const a=Number(t.kilos)||0,o=Number(t.costo)||0;if(this.$set(t,"total",a*o),this.itemsVenta[e]){const t=this.itemsVenta[e],i=Number(t.precioVenta)||0;this.$set(t,"kilosVenta",a),this.$set(t,"totalVenta",a*i),this.$set(t,"ganancia",a*i-a*o)}this.handleDataChange()}},formatNumber(e){return null===e||void 0===e?"0.00":e.toLocaleString("en-US",{minimumFractionDigits:2,maximumFractionDigits:2})},async loadExistingCuenta(e){try{const t=Object(s["e"])(n["a"],"cuentasOtilio",e),a=await Object(s["f"])(t);if(!a.exists())throw new Error("No se encontró la cuenta especificada");{const e=a.data();this.items=(e.items||[]).map(e=>({kilos:Number(e.kilos)||0,medida:e.medida||"",costo:Number(e.costo)||0,total:Number(e.total)||0})),this.itemsVenta=(e.itemsVenta||[]).map(e=>({kilosVenta:Number(e.kilosVenta)||0,medida:e.medida||"",precioVenta:Number(e.precioVenta)||0,totalVenta:Number(e.totalVenta)||0,ganancia:Number(e.ganancia)||0,verificado:Boolean(e.verificado||!1)})),this.saldoAcumuladoAnterior=Number(e.saldoAcumuladoAnterior)||0,this.cobros=(e.cobros||[]).map(e=>({descripcion:e.descripcion||"",monto:Number(e.monto)||0})),this.abonos=(e.abonos||[]).map(e=>({descripcion:e.descripcion||"",monto:Number(e.monto)||0})),this.fechaSeleccionada=e.fecha||this.obtenerFechaActual(),this.showObservacionModal=!1,this.tieneObservacion=e.tieneObservacion||!1,this.observacion=e.observacion||""}}catch(t){throw console.error("Error al cargar la cuenta existente:",t),t}},async obtenerSaldoAcumuladoAnterior(){try{const e=Object(s["c"])(n["a"],"cuentasOtilio"),t=Object(s["o"])(e,Object(s["s"])("fecha","<",this.fechaSeleccionada),Object(s["l"])("fecha","desc"),Object(s["j"])(1)),a=await Object(s["g"])(t);if(!a.empty){const e=a.docs[0].data(),t=(e.cobros||[]).reduce((e,t)=>e+(parseFloat(t.monto)||0),0),o=(e.abonos||[]).reduce((e,t)=>e+(parseFloat(t.monto)||0),0),i=(e.totalGeneralVenta||0)-t-o;if(i<=0)return 0;const n=(e.saldoAcumuladoAnterior||0)+i;return n}return 0}catch(e){return console.error("Error al obtener saldo acumulado anterior:",e),0}},async actualizarCuentasPosteriores(e){try{const e=Object(s["c"])(n["a"],"cuentasOtilio"),t=Object(s["o"])(e,Object(s["l"])("fecha","asc")),a=await Object(s["g"])(t),o=a.docs.map(e=>({id:e.id,...e.data()})),i=o.sort((e,t)=>new Date(e.fecha)-new Date(t.fecha));let r=0;for(let c=0;c<i.length;c++){const e=i[c],t=Object(s["e"])(n["a"],"cuentasOtilio",e.id),a=e.totalGeneralVenta+(e.cobros||[]).reduce((e,t)=>e+(parseFloat(t.monto)||0),0)-(e.abonos||[]).reduce((e,t)=>e+(parseFloat(t.monto)||0),0);r+=a,await Object(s["r"])(t,{saldoAcumuladoAnterior:0===c?0:i[c-1].nuevoSaldoAcumulado,nuevoSaldoAcumulado:r,estadoPagado:r<=0}),r<=0&&(r=0)}}catch(t){throw console.error("Error al actualizar cuentas posteriores:",t),t}},async crearNuevaCuenta(){try{console.log("Iniciando creación de nueva cuenta..."),this.isGuardando=!0,this.lastSaveMessage="Creando nueva cuenta...",this.showSaveMessage=!0;const t=Object(s["c"])(n["a"],"cuentasOtilio");console.log("Referencia a la colección creada:",t);const a=Object(s["o"])(t,Object(s["s"])("fecha","==",this.fechaSeleccionada));console.log("Query construida para fecha:",this.fechaSeleccionada);const o=await Object(s["g"])(a);if(console.log("Query snapshot obtenido:",o.size,"documentos encontrados"),!o.empty)return this.isGuardando=!1,this.lastSaveMessage="Ya existe una nota para esta fecha",this.showSaveMessage=!0,setTimeout(()=>{this.showSaveMessage=!1},3e3),null;console.log("Obteniendo saldo acumulado anterior..."),0!==this.saldoAcumuladoAnterior&&null!==this.saldoAcumuladoAnterior||(this.lastSaveMessage="Cargando saldo acumulado anterior...",this.saldoAcumuladoAnterior=await this.obtenerSaldoAcumuladoAnterior()),console.log("Saldo anterior obtenido:",this.saldoAcumuladoAnterior);const i={fecha:this.fechaSeleccionada,items:this.items||[],itemsVenta:this.itemsVenta||[],saldoAcumuladoAnterior:this.saldoAcumuladoAnterior||0,cobros:this.cobros||[],abonos:this.abonos||[],totalGeneral:this.totalGeneral||0,totalGeneralVenta:this.totalGeneralVenta||0,nuevoSaldoAcumulado:0,estadoPagado:!1,tieneObservacion:Boolean(this.tieneObservacion),observacion:String(this.observacion||""),ultimaActualizacion:(new Date).toISOString()};console.log("Datos preparados para crear nueva cuenta:",i),this.lastSaveMessage="Guardando nueva cuenta...";try{console.log("Intentando crear documento en Firestore...");const e=await Object(s["b"])(t,i);console.log("Documento creado exitosamente con ID:",e.id);const a=await Object(s["f"])(e);if(!a.exists())throw new Error("El documento no se creó correctamente");return console.log("Documento verificado y existe en Firestore"),console.log("Actualizando URL..."),this.lastSaveMessage="Cuenta creada exitosamente",setTimeout(()=>{this.showSaveMessage=!1,this.isGuardando=!1},2e3),await this.$router.push({name:"CuentasOtilio",params:{id:e.id},query:{edit:"true"}}),console.log("Cargando datos de la nueva cuenta..."),await this.loadExistingCuenta(e.id),e.id}catch(e){throw console.error("Error específico de Firestore:",e),this.isGuardando=!1,this.lastSaveMessage="Error: "+e.message,this.showSaveMessage=!0,setTimeout(()=>{this.showSaveMessage=!1},3e3),new Error("Error al crear el documento en Firestore: "+e.message)}}catch(t){throw console.error("Error detallado al crear nueva cuenta:",t),this.isGuardando=!1,this.lastSaveMessage="Error: "+t.message,this.showSaveMessage=!0,setTimeout(()=>{this.showSaveMessage=!1},3e3),t}},async guardarNota(){try{if(this.isGuardando=!0,!this.fechaSeleccionada)throw new Error("La fecha es requerida");const t=this.$route.params.id,a="true"===this.$route.query.edit;if(!t||!a)try{const e=Object(s["c"])(n["a"],"cuentasOtilio"),t=Object(s["o"])(e,Object(s["s"])("fecha","==",this.fechaSeleccionada)),a=await Object(s["g"])(t);if(!a.empty)return alert("Ya existe una nota registrada para esta fecha. No se puede crear una nueva."),void(this.isGuardando=!1)}catch(e){return console.error("Error de red al verificar notas existentes:",e),alert("Error de conexión al verificar notas existentes. Por favor, verifica tu conexión a internet e intenta nuevamente."),void(this.isGuardando=!1)}const o={fecha:this.fechaSeleccionada,items:this.items.map(e=>({kilos:Number(e.kilos)||0,medida:String(e.medida||""),costo:Number(e.costo)||0,total:Number(e.kilos*e.costo)||0})),itemsVenta:this.itemsVenta.map(e=>({kilosVenta:Number(e.kilosVenta)||0,medida:String(e.medida||""),precioVenta:Number(e.precioVenta)||0,totalVenta:Number(e.totalVenta)||0,ganancia:Number(e.ganancia)||0,verificado:Boolean(e.verificado)})),saldoAcumuladoAnterior:Number(this.saldoAcumuladoAnterior)||0,cobros:this.cobros.map(e=>({descripcion:String(e.descripcion||""),monto:Number(e.monto)||0})),abonos:this.abonos.map(e=>({descripcion:String(e.descripcion||""),monto:Number(e.monto)||0})),totalGeneral:Number(this.totalGeneral)||0,totalGeneralVenta:Number(this.totalGeneralVenta)||0,totalCobros:Number(this.cobros.reduce((e,t)=>e+(Number(t.monto)||0),0)),totalAbonos:Number(this.abonos.reduce((e,t)=>e+(Number(t.monto)||0),0)),totalDia:Number(this.totalDiaActual)||0,nuevoSaldoAcumulado:Number(this.nuevoSaldoAcumulado)||0,gananciaDelDia:Number(this.gananciaDelDia)||0,estadoPagado:Boolean(this.totalDiaActual<=0),tieneObservacion:this.tieneObservacion,observacion:this.observacion,ultimaActualizacion:(new Date).toISOString()};let i;if(t&&a)i=Object(s["e"])(n["a"],"cuentasOtilio",t),await Object(s["r"])(i,o),console.log("Documento actualizado exitosamente:",t);else{const e=Object(s["c"])(n["a"],"cuentasOtilio"),t=Object(s["o"])(e,Object(s["s"])("fecha","==",this.fechaSeleccionada)),a=await Object(s["g"])(t);if(!a.empty)return alert("Ya existe una nota registrada para esta fecha. No se puede crear una nueva."),this.isGuardando=!1,null;i=await Object(s["b"])(Object(s["c"])(n["a"],"cuentasOtilio"),o),console.log("Nuevo documento creado:",i.id),await this.$router.push({name:"CuentasOtilio",params:{id:i.id},query:{edit:"true"}})}const r=await Object(s["f"])(i);if(!r.exists())throw new Error("Error al verificar el documento guardado");const c=r.data(),l=this.validateSavedData(o,c);if(!l)throw new Error("Los datos guardados no coinciden con los datos originales");return setTimeout(()=>{this.actualizarCuentasPosteriores(this.fechaSeleccionada).catch(e=>console.error("Error al actualizar cuentas posteriores:",e))},1e3),alert("Datos guardados exitosamente"),i.id}catch(t){console.error("Error al guardar nota:",t);let e="Error al guardar la nota.";"unavailable"===t.code||"network-request-failed"===t.code?e="Error de conexión. Por favor, verifica tu conexión a internet e intenta nuevamente.":"permission-denied"===t.code?e="No tienes permisos para realizar esta operación.":"resource-exhausted"===t.code?e="Se ha excedido el límite de operaciones. Por favor, intenta más tarde.":t.message&&(e="Error al guardar: "+t.message),alert(e)}finally{this.isGuardando=!1}},validateSavedData(e,t){const a=["fecha","saldoAcumuladoAnterior","totalGeneral","totalGeneralVenta","totalCobros","totalAbonos","totalDia","nuevoSaldoAcumulado","gananciaDelDia","estadoPagado"];for(const i of a)if(e[i]!==t[i])return console.error(`Discrepancia en campo ${i}:`,{original:e[i],saved:t[i]}),!1;const o=["items","itemsVenta","cobros","abonos"];for(const i of o)if(e[i].length!==t[i].length)return console.error("Discrepancia en longitud de array "+i),!1;return!0},async addItem(){if(!this.newItem.kilos||!this.newItem.medida||!this.newItem.costo||!this.newItem.precioVenta)return void alert("Por favor complete todos los campos");const e=this.newItem.kilos*this.newItem.costo;this.items.push({kilos:this.newItem.kilos,medida:this.newItem.medida,costo:this.newItem.costo,total:e});const t=this.newItem.kilos*this.newItem.precioVenta,a=t-e;this.itemsVenta.push({kilosVenta:this.newItem.kilos,medida:this.newItem.medida,precioVenta:this.newItem.precioVenta,totalVenta:t,ganancia:a}),this.newItem={kilos:null,medida:"",costo:null,precioVenta:null}},actualizarItemsVenta(){const e=[...this.itemsVenta];this.itemsVenta=this.items.map((t,a)=>{const o=e[a]||{},i=Number(o.precioVenta)||0;return{kilosVenta:Number(t.kilos)||0,medida:t.medida,precioVenta:i,totalVenta:(Number(t.kilos)||0)*i,ganancia:(Number(t.kilos)||0)*i-(Number(t.kilos)||0)*(Number(t.costo)||0)}})},removeItem(e){this.items.splice(e,1),this.itemsVenta.splice(e,1)},editField(e,t){this.editingField={index:e,field:t},this.$nextTick(()=>{var e;this.$refs.editInput&&(null===(e=this.$refs.editInput[0])||void 0===e||e.focus())})},finishEditing(){this.editingField={index:null,field:null},this.items.length>0&&(this.items=this.items.map(e=>({...e,total:e.kilos*e.costo})))},addNewProduct(){var e;if(!this.newProduct.kilosVenta||!this.newProduct.medida||!this.newProduct.precioVenta)return void alert("Por favor complete todos los campos");const t=this.newProduct.kilosVenta*this.newProduct.precioVenta;this.itemsVenta.push({...this.newProduct,totalVenta:t,ganancia:t-this.newProduct.kilosVenta*((null===(e=this.items[this.itemsVenta.length])||void 0===e?void 0:e.costo)||0),verificado:!1}),this.showAddProductModal=!1,this.newProduct={kilosVenta:null,medida:"",precioVenta:null}},calcularTotalVenta(e){const t=this.itemsVenta[e];if(t)try{const a=Number(t.kilosVenta)||0,o=Number(t.precioVenta)||0,i=a*o,n=this.items[e],s=n?a*(Number(n.costo)||0):0,r=i-s;this.$set(t,"kilosVenta",a),this.$set(t,"totalVenta",i),this.$set(t,"ganancia",r),this.handleDataChange()}catch(a){console.error("Error al calcular total de venta:",a)}},imprimirTablas(){window.print()},addCobro(){this.cobros.push({descripcion:"",monto:0})},removeCobro(e){this.cobros.splice(e,1)},addAbono(){this.abonos.push({descripcion:"",monto:0})},async removeAbono(e){try{const a=this.abonos[e];if(a.abonoGeneralId)try{const e=Object(s["e"])(n["a"],"abonosGeneralesOtilio",a.abonoGeneralId),t=await Object(s["f"])(e);if(t.exists()){await Object(s["d"])(e),console.log("Abono eliminado del historial:",a.abonoGeneralId);const t=Object(s["c"])(n["a"],"cuentasOtilio"),o=await Object(s["g"])(t),i=o.docs.map(async e=>{const t=e.data();if(t.abonos){const o=t.abonos.filter(e=>e.abonoGeneralId!==a.abonoGeneralId);o.length!==t.abonos.length&&await Object(s["r"])(Object(s["e"])(n["a"],"cuentasOtilio",e.id),{abonos:o})}});await Promise.all(i)}}catch(t){throw console.error("Error al eliminar abono general:",t),new Error("Error al eliminar abono del historial")}this.abonos.splice(e,1);const o=this.$route.params.id;if(o){const e=Object(s["e"])(n["a"],"cuentasOtilio",o);await Object(s["r"])(e,{abonos:this.abonos,estadoPagado:this.totalDiaActual<=0})}const i=Object(s["c"])(n["a"],"cuentasOtilio"),r=Object(s["o"])(i,Object(s["l"])("fecha","asc")),c=await Object(s["g"])(r),l=c.docs.map(e=>({id:e.id,...e.data()})).sort((e,t)=>new Date(e.fecha)-new Date(t.fecha));let d=0;const u=[];for(let e=0;e<l.length;e++){const t=l[e],a=(t.cobros||[]).reduce((e,t)=>e+(parseFloat(t.monto)||0),0),o=(t.abonos||[]).reduce((e,t)=>e+(parseFloat(t.monto)||0),0),i=t.totalGeneralVenta-a-o;d+=i,u.push(Object(s["r"])(Object(s["e"])(n["a"],"cuentasOtilio",t.id),{saldoAcumuladoAnterior:0===e?0:l[e-1].nuevoSaldoAcumulado||0,nuevoSaldoAcumulado:d,estadoPagado:i<=0})),d<=0&&(d=0)}await Promise.all(u),console.log("Abono eliminado exitosamente")}catch(t){console.error("Error al eliminar abono:",t),alert("Error al eliminar el abono: "+t.message)}},startLongPress(e,t){this.longPressTimer=setTimeout(()=>{this.showMobileActions=!0,this.selectedItemIndex=e,this.selectedField=t},500)},endLongPress(){clearTimeout(this.longPressTimer)},cancelMobileActions(){this.showMobileActions=!1,this.selectedItemIndex=null,this.selectedField=null},editItem(e){this.editingItem={...this.items[e]},this.editingIndex=e,this.showEditModal=!0,this.showMobileActions=!1},saveEditedItem(){null!==this.editingIndex&&this.editingItem&&(this.editingItem.total=this.editingItem.kilos*this.editingItem.costo,this.items[this.editingIndex]={...this.editingItem},this.actualizarItemsVenta()),this.showEditModal=!1,this.editingItem=null,this.editingIndex=null},cancelEdit(){this.showEditModal=!1,this.editingItem=null,this.editingIndex=null},editKilos(e){this.editingKilosIndex=e,this.$nextTick(()=>{var e;this.$refs.kilosInput&&(null===(e=this.$refs.kilosInput[0])||void 0===e||e.focus())})},finishEditingKilos(){this.editingKilosIndex=null,this.calcularTotalVenta(this.editingKilosIndex)},toggleGananciasMobile(e){window.innerWidth<=600&&(this.selectedRowIndex=this.selectedRowIndex===e?null:e)},async guardarSilencioso(){try{const e=this.$route.params.id,t="true"===this.$route.query.edit;if(e&&t){const t={fecha:this.fechaSeleccionada,items:this.items.map(e=>({kilos:Number(e.kilos)||0,medida:String(e.medida||""),costo:Number(e.costo)||0,total:Number(e.kilos*e.costo)||0})),itemsVenta:this.itemsVenta.map(e=>({kilosVenta:Number(e.kilosVenta)||0,medida:String(e.medida||""),precioVenta:Number(e.precioVenta)||0,totalVenta:Number(e.kilosVenta*e.precioVenta)||0,ganancia:Number(e.ganancia)||0})),saldoAcumuladoAnterior:Number(this.saldoAcumuladoAnterior)||0,cobros:this.cobros,abonos:this.abonos,totalGeneral:Number(this.totalGeneral)||0,totalGeneralVenta:Number(this.totalGeneralVenta)||0,totalDia:Number(this.totalDiaActual)||0,nuevoSaldoAcumulado:Number(this.nuevoSaldoAcumulado)||0,gananciaDelDia:Number(this.gananciaDelDia)||0,estadoPagado:Boolean(this.totalDiaActual<=0),tieneObservacion:this.tieneObservacion,observacion:this.observacion,ultimaActualizacion:(new Date).toISOString()},a=Object(s["e"])(n["a"],"cuentasOtilio",e);await Object(s["r"])(a,t)}}catch(e){console.error("Error al guardar silenciosamente:",e)}},async guardarCuenta(){try{this.fechaSeleccionada,this.items.map(e=>({kilos:Number(e.kilos)||0,medida:String(e.medida||""),costo:Number(e.costo)||0,total:Number(e.kilos*e.costo)||0})),this.itemsVenta.map(e=>({kilosVenta:Number(e.kilosVenta)||0,medida:String(e.medida||""),precioVenta:Number(e.precioVenta)||0,totalVenta:Number(e.kilosVenta*e.precioVenta)||0,ganancia:Number(e.ganancia)||0})),Number(this.saldoAcumuladoAnterior),this.cobros.map(e=>({descripcion:String(e.descripcion||""),monto:Number(e.monto)||0})),this.abonos.map(e=>({descripcion:String(e.descripcion||""),monto:Number(e.monto)||0})),Number(this.totalGeneral),Number(this.totalGeneralVenta),Number(this.cobros.reduce((e,t)=>e+(Number(t.monto)||0),0)),Number(this.abonos.reduce((e,t)=>e+(Number(t.monto)||0),0)),Number(this.totalDiaActual),Number(this.nuevoSaldoAcumulado),Number(this.gananciaDelDia),Boolean(this.totalDiaActual<=0),Boolean(this.tieneObservacion),String(this.observacion||""),(new Date).toISOString()}catch(e){console.error("Error al guardar la cuenta:",e),alert("Error al guardar la cuenta")}},agregarObservacion(){this.showObservacionModal=!0},guardarObservacion(){this.tieneObservacion=this.observacion.trim().length>0,this.showObservacionModal=!1,this.$route.params.id&&"true"===this.$route.query.edit&&this.handleDataChange()},cancelarObservacion(){this.tieneObservacion||(this.observacion=""),this.showObservacionModal=!1},editarObservacion(){this.showObservacionModal=!0},eliminarObservacion(){confirm("¿Estás seguro de que deseas eliminar esta observación?")&&(this.observacion="",this.tieneObservacion=!1,this.$route.params.id&&"true"===this.$route.query.edit&&this.handleDataChange())},handleDataChange(){this.$route.params.id&&"true"===this.$route.query.edit&&(this.autoSaveTimer&&clearTimeout(this.autoSaveTimer),this.autoSaveTimer=setTimeout(async()=>{await this.queueSave()},2e3))},async queueSave(){this.saveQueue.push({timestamp:Date.now(),operation:async()=>{this.$route.params.id?await this.autoSaveNota():console.log("No hay ID de cuenta, no se realizará guardado automático")}}),this.isSaving||await this.processSaveQueue()},async processSaveQueue(){if(!this.isSaving&&0!==this.saveQueue.length){this.isSaving=!0;try{while(this.saveQueue.length>0){const e=Date.now();this.lastSaveTime&&e-this.lastSaveTime<this.saveMinInterval&&await new Promise(t=>setTimeout(t,this.saveMinInterval-(e-this.lastSaveTime)));const t=this.saveQueue[0];await this.retryOperation(t.operation),this.lastSaveTime=Date.now(),this.saveQueue.shift()}}catch(e){console.error("Error procesando cola de guardado:",e),"resource-exhausted"===e.code&&(await new Promise(e=>setTimeout(e,1e4)),await this.processSaveQueue())}finally{this.isSaving=!1}}},async autoSaveNota(){try{const e=this.$route.params.id;if(!e)return;const t={fecha:this.fechaSeleccionada,items:this.items.map(e=>({kilos:Number(e.kilos)||0,medida:String(e.medida||""),costo:Number(e.costo)||0,total:Number(e.kilos*e.costo)||0})),itemsVenta:this.itemsVenta.map(e=>({kilosVenta:Number(e.kilosVenta)||0,medida:String(e.medida||""),precioVenta:Number(e.precioVenta)||0,totalVenta:Number(e.kilosVenta*e.precioVenta)||0,ganancia:Number(e.ganancia)||0})),saldoAcumuladoAnterior:Number(this.saldoAcumuladoAnterior)||0,cobros:this.cobros.map(e=>({descripcion:String(e.descripcion||""),monto:Number(e.monto)||0})),abonos:this.abonos.map(e=>({descripcion:String(e.descripcion||""),monto:Number(e.monto)||0})),totalGeneral:Number(this.totalGeneral)||0,totalGeneralVenta:Number(this.totalGeneralVenta)||0,totalCobros:Number(this.cobros.reduce((e,t)=>e+(Number(t.monto)||0),0)),totalAbonos:Number(this.abonos.reduce((e,t)=>e+(Number(t.monto)||0),0)),totalDia:Number(this.totalDiaActual)||0,nuevoSaldoAcumulado:Number(this.nuevoSaldoAcumulado)||0,gananciaDelDia:Number(this.gananciaDelDia)||0,estadoPagado:Boolean(this.totalDiaActual<=0),tieneObservacion:Boolean(this.tieneObservacion),observacion:String(this.observacion||""),ultimaActualizacion:(new Date).toISOString()};await Object(s["r"])(Object(s["e"])(n["a"],"cuentasOtilio",e),t),this.lastSaveMessage="Guardado automático: "+(new Date).toLocaleTimeString(),this.showSaveMessage=!0,this.saveMessageTimer&&clearTimeout(this.saveMessageTimer),this.saveMessageTimer=setTimeout(()=>{this.showSaveMessage=!1},3e3),console.log("Cuenta auto-guardada exitosamente:",(new Date).toLocaleTimeString())}catch(e){if(console.error("Error en auto-guardado:",e),"resource-exhausted"===e.code)throw this.lastSaveMessage="Límite de operaciones excedido. Reintentando...",e;throw"unavailable"===e.code||"network-request-failed"===e.code?this.lastSaveMessage="Error de conexión al guardar automáticamente":this.lastSaveMessage="Error al guardar automáticamente",this.showSaveMessage=!0,this.saveMessageTimer&&clearTimeout(this.saveMessageTimer),this.saveMessageTimer=setTimeout(()=>{this.showSaveMessage=!1},3e3),e}},async retryOperation(e,t=3){let a=0;while(a<t)try{return await e()}catch(o){if(a++,console.error(`Error en operación (intento ${a}/${t}):`,o),"resource-exhausted"===o.code?await new Promise(e=>setTimeout(e,5e3*Math.pow(2,a))):await new Promise(e=>setTimeout(e,1e3*Math.pow(2,a))),a>=t)throw console.error("Se alcanzó el número máximo de intentos. Operación fallida."),o}},limpiarDatos(){this.items=[],this.itemsVenta=[],this.saldoAcumuladoAnterior=0,this.cobros=[],this.abonos=[],this.fechaSeleccionada=this.obtenerFechaActual(),this.estadoPagado=!1,this.tieneObservacion=!1,this.observacion="",this.newItem={kilos:null,medida:"",costo:null,precioVenta:null},this.loadSaldoAcumuladoAnterior()},async loadSaldoAcumuladoAnterior(){try{return this.isSaving=!0,this.lastSaveMessage="Cargando saldo acumulado anterior...",this.showSaveMessage=!0,this.saldoAcumuladoAnterior=await this.obtenerSaldoAcumuladoAnterior(),console.log("Saldo acumulado anterior cargado:",this.saldoAcumuladoAnterior),this.lastSaveMessage="Saldo acumulado anterior cargado correctamente",this.saveMessageTimer=setTimeout(()=>{this.showSaveMessage=!1,this.isSaving=!1},3e3),this.saldoAcumuladoAnterior}catch(e){return console.error("Error al cargar el saldo acumulado anterior:",e),this.saldoAcumuladoAnterior=0,this.lastSaveMessage="Error al cargar el saldo acumulado anterior",this.showSaveMessage=!0,this.saveMessageTimer=setTimeout(()=>{this.showSaveMessage=!1,this.isSaving=!1},3e3),0}},async toggleVerificacion(e,t){if(!this.isSavingVerificacion)try{this.isSavingVerificacion=!0;const a=t.target.checked;this.$set(this.itemsVenta[e],"verificado",a);const o=this.$route.params.id;if(!o)return;const i=Object(s["e"])(n["a"],"cuentasOtilio",o);await Object(s["r"])(i,{itemsVenta:this.itemsVenta.map(e=>({kilosVenta:Number(e.kilosVenta)||0,medida:String(e.medida||""),precioVenta:Number(e.precioVenta)||0,totalVenta:Number(e.totalVenta)||0,ganancia:Number(e.ganancia)||0,verificado:Boolean(e.verificado)}))}),this.lastSaveMessage="Verificación guardada",this.showSaveMessage=!0,setTimeout(()=>{this.showSaveMessage=!1},2e3)}catch(a){console.error("Error al guardar verificación:",a),this.$set(this.itemsVenta[e],"verificado",!t.target.checked),this.lastSaveMessage="Error al guardar verificación",this.showSaveMessage=!0,setTimeout(()=>{this.showSaveMessage=!1},3e3)}finally{this.isSavingVerificacion=!1}}},created(){const e=this.$route.params.id,t="true"===this.$route.query.edit,a="/cuentas-otilio/nueva"===this.$route.path;e&&t?this.loadExistingCuenta(e):a?this.$nextTick(async()=>{try{this.limpiarDatos(),await this.loadSaldoAcumuladoAnterior(),setTimeout(async()=>{const e=await this.crearNuevaCuenta();e&&console.log("Nueva cuenta creada automáticamente con ID:",e)},800)}catch(e){console.error("Error al crear nueva cuenta automáticamente:",e)}}):this.limpiarDatos()},watch:{$route(e,t){const a=e.params.id,o="true"===e.query.edit;a&&o?this.loadExistingCuenta(a):this.limpiarDatos()},items:{handler:"handleDataChange",deep:!0},itemsVenta:{handler:"handleDataChange",deep:!0},cobros:{handler:"handleDataChange",deep:!0},abonos:{handler:"handleDataChange",deep:!0},fechaSeleccionada:{handler:"handleDataChange"},saldoAcumuladoAnterior:{handler:"handleDataChange"},"newItem.kilos":"handleDataChange","newItem.medida":"handleDataChange","newItem.costo":"handleDataChange",observacion:"handleDataChange"},beforeUnmount(){this.autoSaveTimer&&clearTimeout(this.autoSaveTimer),this.saveMessageTimer&&clearTimeout(this.saveMessageTimer),this.saveQueue.length>0&&this.processSaveQueue()}},m=u,h=(a("8091"),a("2877")),v=Object(h["a"])(m,o,i,!1,null,"0c5d2c4b",null);t["a"]=v.exports},9923:function(e,t,a){},a593:function(e,t,a){"use strict";var o=function(){var e=this,t=e._self._c;return t("div",{staticClass:"cuentas-otilio-container"},[e.isSaving?t("div",{staticClass:"auto-save-indicator"},[t("span",{staticClass:"save-dot"}),e._v(" Guardando... ")]):e._e(),t("div",{staticClass:"back-button-container"},[t("BackButton",{attrs:{to:"/cuentas-otilio-independiente"}}),t("PreciosHistorialModal",{attrs:{clienteActual:"otilioIndependiente"}}),t("StashModal",{attrs:{cliente:"otilioIndependiente"}})],1),t("h1",[e._v("Cuentas Independientes Otilio")]),t("div",{staticClass:"precios-button-container"},[t("PreciosClienteButton",{attrs:{clienteId:"otilioIndependiente"}})],1),t("div",{staticClass:"fecha-actual"},[t("div",{staticClass:"fecha-input"},[t("input",{directives:[{name:"model",rawName:"v-model",value:e.fechaSeleccionada,expression:"fechaSeleccionada"}],attrs:{type:"date"},domProps:{value:e.fechaSeleccionada},on:{input:function(t){t.target.composing||(e.fechaSeleccionada=t.target.value)}}})]),t("div",{staticClass:"fecha-display"},[e._v(" "+e._s(e.fechaFormateada)+" ")])]),t("div",{staticClass:"input-section"},[t("h2",[e._v("Ingresar Datos")]),t("div",{staticClass:"input-row"},[t("input",{directives:[{name:"model",rawName:"v-model.number",value:e.newItem.kilos,expression:"newItem.kilos",modifiers:{number:!0}}],staticClass:"responsive-input",attrs:{type:"number",placeholder:"Kilos",inputmode:"decimal",pattern:"[0-9]*"},domProps:{value:e.newItem.kilos},on:{input:function(t){t.target.composing||e.$set(e.newItem,"kilos",e._n(t.target.value))},blur:function(t){return e.$forceUpdate()}}}),t("input",{directives:[{name:"model",rawName:"v-model",value:e.newItem.medida,expression:"newItem.medida"}],staticClass:"responsive-input",attrs:{type:"text",placeholder:"Medida"},domProps:{value:e.newItem.medida},on:{input:function(t){t.target.composing||e.$set(e.newItem,"medida",t.target.value)}}}),t("input",{directives:[{name:"model",rawName:"v-model.number",value:e.newItem.costo,expression:"newItem.costo",modifiers:{number:!0}}],staticClass:"responsive-input",attrs:{type:"number",placeholder:"Costo",inputmode:"decimal",pattern:"[0-9]*"},domProps:{value:e.newItem.costo},on:{input:function(t){t.target.composing||e.$set(e.newItem,"costo",e._n(t.target.value))},blur:function(t){return e.$forceUpdate()}}}),t("input",{directives:[{name:"model",rawName:"v-model.number",value:e.newItem.precioVenta,expression:"newItem.precioVenta",modifiers:{number:!0}}],staticClass:"responsive-input",attrs:{type:"number",placeholder:"Precio Venta",inputmode:"decimal",pattern:"[0-9]*"},domProps:{value:e.newItem.precioVenta},on:{input:function(t){t.target.composing||e.$set(e.newItem,"precioVenta",e._n(t.target.value))},blur:function(t){return e.$forceUpdate()}}}),t("button",{on:{click:e.addItem}},[e._v("Agregar")])])]),t("table",{staticClass:"tabla-principal"},[e._m(0),t("tbody",e._l(e.items,(function(a,o){return t("tr",{key:o},[t("td",{on:{click:function(t){return e.editField(o,"kilos")},touchstart:function(t){return e.startLongPress(o,"kilos")},touchend:e.endLongPress}},[e._v(" "+e._s(e.editingField.index===o&&"kilos"===e.editingField.field?"":e.formatNumber(a.kilos))+" "),e.editingField.index===o&&"kilos"===e.editingField.field?t("input",{directives:[{name:"model",rawName:"v-model.number",value:a.kilos,expression:"item.kilos",modifiers:{number:!0}}],ref:"editInput",refInFor:!0,attrs:{type:"number"},domProps:{value:a.kilos},on:{blur:[e.finishEditing,function(t){return e.$forceUpdate()}],keyup:function(t){return!t.type.indexOf("key")&&e._k(t.keyCode,"enter",13,t.key,"Enter")?null:e.finishEditing.apply(null,arguments)},input:function(t){t.target.composing||e.$set(a,"kilos",e._n(t.target.value))}}}):e._e()]),t("td",{on:{click:function(t){return e.editField(o,"medida")},touchstart:function(t){return e.startLongPress(o,"medida")},touchend:e.endLongPress}},[e._v(" "+e._s(e.editingField.index===o&&"medida"===e.editingField.field?"":a.medida)+" "),e.editingField.index===o&&"medida"===e.editingField.field?t("input",{directives:[{name:"model",rawName:"v-model",value:a.medida,expression:"item.medida"}],ref:"editInput",refInFor:!0,attrs:{type:"text"},domProps:{value:a.medida},on:{blur:e.finishEditing,keyup:function(t){return!t.type.indexOf("key")&&e._k(t.keyCode,"enter",13,t.key,"Enter")?null:e.finishEditing.apply(null,arguments)},input:function(t){t.target.composing||e.$set(a,"medida",t.target.value)}}}):e._e()]),t("td",{on:{click:function(t){return e.editField(o,"costo")},touchstart:function(t){return e.startLongPress(o,"costo")},touchend:e.endLongPress}},[e._v(" "+e._s(e.editingField.index===o&&"costo"===e.editingField.field?"":"$"+e.formatNumber(a.costo))+" "),e.editingField.index===o&&"costo"===e.editingField.field?t("input",{directives:[{name:"model",rawName:"v-model.number",value:a.costo,expression:"item.costo",modifiers:{number:!0}}],ref:"editInput",refInFor:!0,attrs:{type:"number"},domProps:{value:a.costo},on:{blur:[e.finishEditing,function(t){return e.$forceUpdate()}],keyup:function(t){return!t.type.indexOf("key")&&e._k(t.keyCode,"enter",13,t.key,"Enter")?null:e.finishEditing.apply(null,arguments)},input:function(t){t.target.composing||e.$set(a,"costo",e._n(t.target.value))}}}):e._e()]),t("td",[e._v("$"+e._s(e.formatNumber(a.total)))]),t("td",{staticClass:"action-column desktop-only"},[t("button",{staticClass:"delete-btn",on:{click:function(t){return e.removeItem(o)}}},[e._v("Eliminar")])])])})),0),t("tfoot",[t("tr",{staticClass:"total"},[e._m(1),t("td",[t("strong",[e._v("$"+e._s(e.formatNumber(e.totalGeneral)))])]),t("td")])])]),t("h2",[e._v("Precios de Venta")]),t("div",{staticClass:"add-product-button"},[t("button",{on:{click:function(t){e.showAddProductModal=!0}}},[e._v("Agregar Producto")])]),t("table",{staticClass:"tabla-venta"},[e._m(2),t("tbody",[e._l(e.itemsVenta,(function(a,o){return t("tr",{key:o,on:{click:function(t){return e.toggleGananciasMobile(o)}}},[t("td",{on:{click:function(t){return e.editKilos(o)},touchstart:function(t){return e.startLongPress(o)},touchend:e.endLongPress}},[e._v(" "+e._s(e.editingKilosIndex===o?"":e.formatNumber(a.kilosVenta))+" "),e.editingKilosIndex===o?t("input",{directives:[{name:"model",rawName:"v-model.number",value:a.kilosVenta,expression:"item.kilosVenta",modifiers:{number:!0}}],ref:"kilosInput",refInFor:!0,attrs:{type:"number"},domProps:{value:a.kilosVenta},on:{blur:[e.finishEditingKilos,function(t){return e.$forceUpdate()}],keyup:function(t){return!t.type.indexOf("key")&&e._k(t.keyCode,"enter",13,t.key,"Enter")?null:e.finishEditingKilos.apply(null,arguments)},input:function(t){t.target.composing||e.$set(a,"kilosVenta",e._n(t.target.value))}}}):e._e()]),t("td",[e._v(e._s(a.medida))]),t("td",[t("input",{staticClass:"precio-venta-input",attrs:{type:"number",inputmode:"decimal",pattern:"[0-9]*",step:"0.01"},domProps:{value:a.precioVenta},on:{input:t=>{a.precioVenta=Number(t.target.value),e.calcularTotalVenta(o)}}})]),t("td",[e._v("$"+e._s(e.formatNumber(a.totalVenta)))]),t("td",{class:{"desktop-only":!0,"ganancia-positiva":a.ganancia>0,"ganancia-negativa":a.ganancia<0}},[e._v(" $"+e._s(e.formatNumber(a.ganancia))+" ")])])})),null!==e.selectedRowIndex?t("tr",{staticClass:"mobile-only ganancia-row"},[t("td",{attrs:{colspan:"4"}},[t("strong",[e._v("Ganancias:")]),t("span",{class:{"ganancia-positiva":e.itemsVenta[e.selectedRowIndex].ganancia>0,"ganancia-negativa":e.itemsVenta[e.selectedRowIndex].ganancia<0}},[e._v(" $"+e._s(e.formatNumber(e.itemsVenta[e.selectedRowIndex].ganancia))+" ")])])]):e._e()],2),t("tfoot",[t("tr",{staticClass:"total"},[e._m(3),t("td",[t("strong",[e._v("$"+e._s(e.formatNumber(e.totalGeneralVenta)))])]),t("td",{staticClass:"desktop-only"},[t("strong",[e._v("$"+e._s(e.formatNumber(e.gananciaTotal)))])])])])]),t("div",{staticClass:"ganancia-del-dia"},[t("h3",[e._v("Ganancia del Día")]),t("p",{class:{"ganancia-positiva":e.gananciaDelDia>0,"ganancia-negativa":e.gananciaDelDia<0}},[e._v(" $"+e._s(e.formatNumber(e.gananciaDelDia))+" ")])]),t("h2",[e._v("Saldo pendiente")]),t("div",{staticClass:"saldo-pendiente"},[t("div",{staticClass:"input-row"},[t("span",[e._v("Saldo Acumulado Anterior: $"+e._s(e.formatNumber(e.saldoAcumuladoAnterior)))])]),e._l(e.cobros,(function(a,o){return t("div",{key:o,staticClass:"input-row"},[t("input",{directives:[{name:"model",rawName:"v-model",value:a.descripcion,expression:"cobro.descripcion"}],staticClass:"responsive-input",attrs:{type:"text",placeholder:"Flete"},domProps:{value:a.descripcion},on:{input:function(t){t.target.composing||e.$set(a,"descripcion",t.target.value)}}}),t("input",{directives:[{name:"model",rawName:"v-model",value:a.monto,expression:"cobro.monto"}],staticClass:"responsive-input",attrs:{type:"number",placeholder:"Monto"},domProps:{value:a.monto},on:{input:function(t){t.target.composing||e.$set(a,"monto",t.target.value)}}}),t("button",{staticClass:"delete-btn",on:{click:function(t){return e.removeCobro(o)}}},[e._v("Eliminar")])])})),t("button",{staticClass:"add-btn",on:{click:e.addCobro}},[e._v("Agregar Flete")])],2),t("h2",[e._v("Abonos")]),t("div",{staticClass:"abonos"},[e._l(e.abonos,(function(a,o){return t("div",{key:o,staticClass:"input-row"},[t("input",{directives:[{name:"model",rawName:"v-model",value:a.descripcion,expression:"abono.descripcion"}],staticClass:"responsive-input",attrs:{type:"text",placeholder:"Descripción"},domProps:{value:a.descripcion},on:{input:function(t){t.target.composing||e.$set(a,"descripcion",t.target.value)}}}),t("input",{directives:[{name:"model",rawName:"v-model.number",value:a.monto,expression:"abono.monto",modifiers:{number:!0}}],staticClass:"responsive-input",attrs:{type:"number",placeholder:"Monto"},domProps:{value:a.monto},on:{input:function(t){t.target.composing||e.$set(a,"monto",e._n(t.target.value))},blur:function(t){return e.$forceUpdate()}}}),t("button",{staticClass:"delete-btn",on:{click:function(t){return e.removeAbono(o)}}},[e._v("Eliminar")])])})),t("button",{staticClass:"add-btn",on:{click:e.addAbono}},[e._v("Agregar Abono")])],2),t("table",{staticClass:"tabla-saldo"},[t("tr",[t("td",[e._v("Saldo Acumulado Anterior")]),t("td",[e._v("$"+e._s(e.formatNumber(e.saldoAcumuladoAnterior)))])]),t("tr",[t("td",[e._v("Saldo Hoy")]),t("td",[e._v("$"+e._s(e.formatNumber(e.totalGeneralVenta)))])]),e._l(e.cobros,(function(a,o){return t("tr",{key:o},[t("td",[e._v(e._s(a.descripcion))]),t("td",[e._v("-$"+e._s(e.formatNumber(a.monto)))])])})),e._l(e.abonos,(function(a,o){return t("tr",{key:"abono-"+o},[t("td",[e._v(e._s(a.descripcion)+" (Abono)")]),t("td",[e._v("-$"+e._s(e.formatNumber(a.monto)))])])})),t("tr",{staticClass:"total"},[t("td",[e._v("Total")]),t("td",[e._v("$"+e._s(e.formatNumber(e.totalDiaActual)))])]),t("tr",{staticClass:"total"},[t("td",[e._v("Nuevo Saldo Acumulado")]),t("td",[e._v("$"+e._s(e.formatNumber(e.nuevoSaldoAcumulado)))])])],2),t("div",{staticClass:"button-container"},[t("button",{staticClass:"save-button",attrs:{disabled:e.isGuardando},on:{click:e.guardarNota}},[e._v(" "+e._s(e.isGuardando?"Guardando...":"Guardar Nota")+" ")]),t("button",{staticClass:"print-button",on:{click:e.imprimirTablas}},[e._v("Imprimir")])]),e.showMobileActions?t("div",{staticClass:"mobile-actions-modal"},[t("button",{staticClass:"edit-btn",on:{click:function(t){return e.editItem(e.selectedItemIndex)}}},[e._v("Editar")]),t("button",{staticClass:"delete-btn",on:{click:function(t){return e.removeItem(e.selectedItemIndex)}}},[e._v("Eliminar")]),t("button",{on:{click:e.cancelMobileActions}},[e._v("Cancelar")])]):e._e(),e.showEditModal?t("div",{staticClass:"edit-modal"},[t("h3",[e._v("Editar Item")]),t("div",{staticClass:"input-row"},[t("input",{directives:[{name:"model",rawName:"v-model.number",value:e.editingItem.kilos,expression:"editingItem.kilos",modifiers:{number:!0}}],staticClass:"responsive-input",attrs:{type:"number",placeholder:"Kilos",inputmode:"decimal",pattern:"[0-9]*"},domProps:{value:e.editingItem.kilos},on:{input:function(t){t.target.composing||e.$set(e.editingItem,"kilos",e._n(t.target.value))},blur:function(t){return e.$forceUpdate()}}}),t("input",{directives:[{name:"model",rawName:"v-model",value:e.editingItem.medida,expression:"editingItem.medida"}],staticClass:"responsive-input",attrs:{type:"text",placeholder:"Medida"},domProps:{value:e.editingItem.medida},on:{input:function(t){t.target.composing||e.$set(e.editingItem,"medida",t.target.value)}}}),t("input",{directives:[{name:"model",rawName:"v-model.number",value:e.editingItem.costo,expression:"editingItem.costo",modifiers:{number:!0}}],staticClass:"responsive-input",attrs:{type:"number",placeholder:"Costo",inputmode:"decimal",pattern:"[0-9]*"},domProps:{value:e.editingItem.costo},on:{input:function(t){t.target.composing||e.$set(e.editingItem,"costo",e._n(t.target.value))},blur:function(t){return e.$forceUpdate()}}})]),t("div",{staticClass:"button-row"},[t("button",{on:{click:e.saveEditedItem}},[e._v("Guardar")]),t("button",{on:{click:e.cancelEdit}},[e._v("Cancelar")])])]):e._e(),e.showAddProductModal?t("div",{staticClass:"modal"},[t("div",{staticClass:"modal-content"},[t("h3",[e._v("Agregar Nuevo Producto")]),t("div",{staticClass:"input-row"},[t("input",{directives:[{name:"model",rawName:"v-model.number",value:e.newProduct.kilosVenta,expression:"newProduct.kilosVenta",modifiers:{number:!0}}],staticClass:"responsive-input",attrs:{type:"number",placeholder:"Kilos",inputmode:"decimal",pattern:"[0-9]*"},domProps:{value:e.newProduct.kilosVenta},on:{input:function(t){t.target.composing||e.$set(e.newProduct,"kilosVenta",e._n(t.target.value))},blur:function(t){return e.$forceUpdate()}}}),t("input",{directives:[{name:"model",rawName:"v-model",value:e.newProduct.medida,expression:"newProduct.medida"}],staticClass:"responsive-input",attrs:{type:"text",placeholder:"Medida"},domProps:{value:e.newProduct.medida},on:{input:function(t){t.target.composing||e.$set(e.newProduct,"medida",t.target.value)}}}),t("input",{directives:[{name:"model",rawName:"v-model.number",value:e.newProduct.precioVenta,expression:"newProduct.precioVenta",modifiers:{number:!0}}],staticClass:"responsive-input",attrs:{type:"number",placeholder:"Precio de Venta",inputmode:"decimal",pattern:"[0-9]*"},domProps:{value:e.newProduct.precioVenta},on:{input:function(t){t.target.composing||e.$set(e.newProduct,"precioVenta",e._n(t.target.value))},blur:function(t){return e.$forceUpdate()}}})]),t("div",{staticClass:"button-row"},[t("button",{on:{click:e.addNewProduct}},[e._v("Agregar")]),t("button",{on:{click:function(t){e.showAddProductModal=!1}}},[e._v("Cancelar")])])])]):e._e(),t("div",{class:["estado-cuenta",e.estadoCuenta.toLowerCase(),{"no-pagado":"No Pagado"===e.estadoCuenta}]},[e._v(" "+e._s(e.estadoCuenta)+" ")]),t("div",{staticClass:"guardar-container"},[t("div",{staticClass:"observacion-container"},[t("button",{staticClass:"btn-agregar-observacion",on:{click:e.agregarObservacion}},[t("i",{staticClass:"fas fa-plus"}),e._v(" Agregar observación ")])]),e.observacion?t("div",{staticClass:"observacion-existente"},[t("div",{staticClass:"observacion-header"},[t("p",{staticClass:"observacion-titulo"},[e._v("Observación actual:")]),t("div",{staticClass:"observacion-buttons"},[t("button",{staticClass:"btn-editar",on:{click:e.editarObservacion}},[e._v("Editar")]),t("button",{staticClass:"btn-eliminar",attrs:{title:"Eliminar observación"},on:{click:e.eliminarObservacion}},[e._v("×")])])]),t("p",{staticClass:"observacion-texto"},[e._v(e._s(e.observacion))])]):e._e()]),e.showObservacionModal?t("div",{staticClass:"modal-overlay"},[t("div",{staticClass:"modal-content"},[t("h3",[e._v(e._s(e.observacion?"Editar":"Agregar")+" Observación")]),t("textarea",{directives:[{name:"model",rawName:"v-model",value:e.observacion,expression:"observacion"}],attrs:{placeholder:"Escribe tu observación aquí...",rows:"4"},domProps:{value:e.observacion},on:{input:function(t){t.target.composing||(e.observacion=t.target.value)}}}),t("div",{staticClass:"modal-buttons"},[t("button",{staticClass:"btn-guardar",on:{click:e.guardarObservacion}},[e._v("Guardar")]),t("button",{staticClass:"btn-cancelar",on:{click:e.cancelarObservacion}},[e._v("Cancelar")])])])]):e._e(),e.showSaveMessage?t("div",{staticClass:"auto-save-message"},[e._v(" "+e._s(e.lastSaveMessage)+" ")]):e._e()])},i=[function(){var e=this,t=e._self._c;return t("thead",[t("tr",[t("th",[e._v("Kilos")]),t("th",[e._v("Medida")]),t("th",[e._v("Costo")]),t("th",[e._v("Total")]),t("th",{staticClass:"desktop-only"},[e._v("Acciones")])])])},function(){var e=this,t=e._self._c;return t("td",{staticClass:"text-right",attrs:{colspan:"3"}},[t("strong",[e._v("Total General Costo:")])])},function(){var e=this,t=e._self._c;return t("thead",[t("tr",[t("th",[e._v("Kilos")]),t("th",[e._v("Medida")]),t("th",[e._v("Precio")]),t("th",[e._v("Total")]),t("th",{staticClass:"desktop-only"},[e._v("Ganancias")])])])},function(){var e=this,t=e._self._c;return t("td",{staticClass:"text-right",attrs:{colspan:"3"}},[t("strong",[e._v("Total General Venta:")])])}],n=(a("d9e2"),a("14d9"),a("13d5"),a("dc59")),s=a("1494"),r=a("74c9"),c=a("666c"),l=a("19aa1"),d=a("03c4"),u={name:"CuentasOtilioIndependiente",components:{BackButton:r["a"],PreciosHistorialModal:c["a"],StashModal:l["a"],PreciosClienteButton:d["a"]},data(){return{items:[],newItem:{kilos:null,medida:"",costo:null,precioVenta:null},saldoAcumuladoAnterior:0,cobros:[],abonos:[],fechaSeleccionada:this.obtenerFechaActual(),showMobileActions:!1,selectedItemIndex:null,presionTimer:null,itemsVenta:[],showEditModal:!1,editingItem:null,editingIndex:null,estadoPagado:!1,editingKilosIndex:null,longPressTimer:null,editingField:{index:null,field:null},selectedRowIndex:null,showAddProductModal:!1,newProduct:{kilosVenta:null,medida:"",precioVenta:null},autoSaveTimer:null,lastSavedData:null,saveQueue:[],isSaving:!1,lastSaveTime:null,saveMinInterval:5e3,selectedField:null,tieneObservacion:!1,showObservacionModal:!1,observacion:"",isGuardando:!1,lastSaveMessage:"",showSaveMessage:!1,saveMessageTimer:null,saveMessage:""}},computed:{fechaFormateada(){const e=new Date(this.fechaSeleccionada+"T00:00:00"),t={year:"numeric",month:"long",day:"numeric"};return e.toLocaleDateString("es-ES",t)},totalGeneral(){return this.items.reduce((e,t)=>e+(t.total||0),0)},totalGeneralVenta(){return this.itemsVenta.reduce((e,t)=>e+(t.totalVenta||0),0)},totalSaldo(){const e=this.cobros.reduce((e,t)=>e+(t.monto||0),0),t=this.abonos.reduce((e,t)=>e+(t.monto||0),0);return this.saldoAcumuladoAnterior+this.totalGeneralVenta+e-t},nuevoSaldoAcumulado(){return(this.saldoAcumuladoAnterior||0)+(this.totalDiaActual||0)},gananciaDelDia(){const e=this.items.reduce((e,t)=>e+(t.total||0),0);return(this.totalGeneralVenta||0)-(e||0)},saldoPendiente(){return this.totalGeneralVenta-this.abonos.reduce((e,t)=>e+(t.monto||0),0)},estadoCuenta(){return this.totalDiaActual<=0?"Pagado":"No Pagado"},gananciaTotal(){return this.itemsVenta.reduce((e,t)=>e+(t.ganancia||0),0)},totalDiaActual(){const e=this.cobros.reduce((e,t)=>e+(parseFloat(t.monto)||0),0),t=this.abonos.reduce((e,t)=>e+(parseFloat(t.monto)||0),0);return(this.totalGeneralVenta||0)-e-t}},methods:{obtenerFechaActual(){const e=new Date;return e.getFullYear()+"-"+String(e.getMonth()+1).padStart(2,"0")+"-"+String(e.getDate()).padStart(2,"0")},formatNumber(e){return null===e||void 0===e?"0.00":e.toLocaleString("en-US",{minimumFractionDigits:2,maximumFractionDigits:2})},addItem(){if(!this.newItem.kilos||!this.newItem.medida||!this.newItem.costo||!this.newItem.precioVenta)return void alert("Por favor complete todos los campos");const e=this.newItem.kilos*this.newItem.costo;this.items.push({kilos:this.newItem.kilos,medida:this.newItem.medida,costo:this.newItem.costo,total:e});const t=this.newItem.kilos*this.newItem.precioVenta,a=t-e;this.itemsVenta.push({kilosVenta:this.newItem.kilos,medida:this.newItem.medida,precioVenta:this.newItem.precioVenta,totalVenta:t,ganancia:a}),this.newItem={kilos:null,medida:"",costo:null,precioVenta:null}},limpiarDatos(){this.items=[],this.itemsVenta=[],this.saldoAcumuladoAnterior=0,this.cobros=[],this.abonos=[],this.fechaSeleccionada=this.obtenerFechaActual(),this.estadoPagado=!1,this.tieneObservacion=!1,this.observacion="",this.newItem={kilos:null,medida:"",costo:null,precioVenta:null},this.loadSaldoAcumuladoAnterior()},async loadSaldoAcumuladoAnterior(){try{return this.isSaving=!0,this.lastSaveMessage="Cargando saldo acumulado anterior...",this.showSaveMessage=!0,this.saldoAcumuladoAnterior=await this.obtenerSaldoAcumuladoAnterior(),console.log("Saldo acumulado anterior cargado:",this.saldoAcumuladoAnterior),this.lastSaveMessage="Saldo acumulado anterior cargado correctamente",this.saveMessageTimer=setTimeout(()=>{this.showSaveMessage=!1,this.isSaving=!1},3e3),this.saldoAcumuladoAnterior}catch(e){return console.error("Error al cargar el saldo acumulado anterior:",e),this.saldoAcumuladoAnterior=0,this.lastSaveMessage="Error al cargar el saldo acumulado anterior",this.showSaveMessage=!0,this.saveMessageTimer=setTimeout(()=>{this.showSaveMessage=!1,this.isSaving=!1},3e3),0}},addCobro(){this.cobros.push({descripcion:"",monto:0})},removeCobro(e){this.cobros.splice(e,1)},addAbono(){this.abonos.push({descripcion:"",monto:0})},async removeAbono(e){try{const a=this.abonos[e];if(a.abonoGeneralId)try{const e=Object(s["e"])(n["a"],"abonosGeneralesOtilioIndependiente",a.abonoGeneralId),t=await Object(s["f"])(e);if(t.exists()){await Object(s["d"])(e),console.log("Abono eliminado del historial:",a.abonoGeneralId);const t=Object(s["c"])(n["a"],"cuentasOtilioIndependiente"),o=await Object(s["g"])(t),i=o.docs.map(async e=>{const t=e.data();if(t.abonos){const o=t.abonos.filter(e=>e.abonoGeneralId!==a.abonoGeneralId);o.length!==t.abonos.length&&await Object(s["r"])(Object(s["e"])(n["a"],"cuentasOtilioIndependiente",e.id),{abonos:o})}});await Promise.all(i)}}catch(t){throw console.error("Error al eliminar abono general:",t),new Error("Error al eliminar abono del historial")}this.abonos.splice(e,1);const o=this.$route.params.id;if(o){const e=Object(s["e"])(n["a"],"cuentasOtilioIndependiente",o);await Object(s["r"])(e,{abonos:this.abonos,estadoPagado:this.totalDiaActual<=0})}await this.actualizarCuentasPosteriores(this.fechaSeleccionada),console.log("Abono eliminado exitosamente")}catch(t){console.error("Error al eliminar abono:",t),alert("Error al eliminar el abono: "+t.message)}},async guardarNota(){try{if(this.isGuardando=!0,!this.fechaSeleccionada)throw new Error("La fecha es requerida");const t=this.$route.params.id,a="true"===this.$route.query.edit;if(!t||!a)try{const e=Object(s["c"])(n["a"],"cuentasOtilioIndependiente"),t=Object(s["o"])(e,Object(s["s"])("fecha","==",this.fechaSeleccionada)),a=await Object(s["g"])(t);if(!a.empty)return alert("Ya existe una nota registrada para esta fecha. No se puede crear una nueva."),void(this.isGuardando=!1)}catch(e){return console.error("Error de red al verificar notas existentes:",e),alert("Error de conexión al verificar notas existentes. Por favor, verifica tu conexión a internet e intenta nuevamente."),void(this.isGuardando=!1)}const o={fecha:this.fechaSeleccionada,items:this.items.map(e=>({kilos:Number(e.kilos)||0,medida:String(e.medida||""),costo:Number(e.costo)||0,total:Number(e.kilos*e.costo)||0})),itemsVenta:this.itemsVenta.map(e=>({kilosVenta:Number(e.kilosVenta)||0,medida:String(e.medida||""),precioVenta:Number(e.precioVenta)||0,totalVenta:Number(e.kilosVenta*e.precioVenta)||0,ganancia:Number(e.ganancia)||0})),saldoAcumuladoAnterior:Number(this.saldoAcumuladoAnterior)||0,cobros:this.cobros.map(e=>({descripcion:String(e.descripcion||""),monto:Number(e.monto)||0})),abonos:this.abonos.map(e=>({descripcion:String(e.descripcion||""),monto:Number(e.monto)||0})),totalGeneral:Number(this.totalGeneral)||0,totalGeneralVenta:Number(this.totalGeneralVenta)||0,totalCobros:Number(this.cobros.reduce((e,t)=>e+(Number(t.monto)||0),0)),totalAbonos:Number(this.abonos.reduce((e,t)=>e+(Number(t.monto)||0),0)),totalDia:Number(this.totalDiaActual)||0,nuevoSaldoAcumulado:Number(this.nuevoSaldoAcumulado)||0,gananciaDelDia:Number(this.gananciaDelDia)||0,estadoPagado:Boolean(this.totalDiaActual<=0),tieneObservacion:this.tieneObservacion,observacion:this.observacion,ultimaActualizacion:(new Date).toISOString()};let i;if(t&&a)i=Object(s["e"])(n["a"],"cuentasOtilioIndependiente",t),await Object(s["r"])(i,o),console.log("Documento actualizado exitosamente:",t);else{const e=Object(s["c"])(n["a"],"cuentasOtilioIndependiente"),t=Object(s["o"])(e,Object(s["s"])("fecha","==",this.fechaSeleccionada)),a=await Object(s["g"])(t);if(!a.empty)return alert("Ya existe una nota registrada para esta fecha. No se puede crear una nueva."),this.isGuardando=!1,null;i=await Object(s["b"])(Object(s["c"])(n["a"],"cuentasOtilioIndependiente"),o),console.log("Nuevo documento creado:",i.id),await this.$router.push({name:"CuentasOtilioIndependiente",params:{id:i.id},query:{edit:"true"}})}const r=await Object(s["f"])(i);if(!r.exists())throw new Error("Error al verificar el documento guardado");const c=r.data(),l=this.validateSavedData(o,c);if(!l)throw new Error("Los datos guardados no coinciden con los datos originales");return setTimeout(()=>{this.actualizarCuentasPosteriores(this.fechaSeleccionada).catch(e=>console.error("Error al actualizar cuentas posteriores:",e))},1e3),alert("Datos guardados exitosamente"),i.id}catch(t){console.error("Error al guardar nota:",t);let e="Error al guardar la nota.";"unavailable"===t.code||"network-request-failed"===t.code?e="Error de conexión. Por favor, verifica tu conexión a internet e intenta nuevamente.":"permission-denied"===t.code?e="No tienes permisos para realizar esta operación.":"resource-exhausted"===t.code?e="Se ha excedido el límite de operaciones. Por favor, intenta más tarde.":t.message&&(e="Error al guardar: "+t.message),alert(e)}finally{this.isGuardando=!1}},validateSavedData(e,t){const a=["fecha","saldoAcumuladoAnterior","totalGeneral","totalGeneralVenta","totalCobros","totalAbonos","totalDia","nuevoSaldoAcumulado","gananciaDelDia","estadoPagado"];for(const i of a)if(e[i]!==t[i])return console.error(`Discrepancia en campo ${i}:`,{original:e[i],saved:t[i]}),!1;const o=["items","itemsVenta","cobros","abonos"];for(const i of o)if(e[i].length!==t[i].length)return console.error("Discrepancia en longitud de array "+i),!1;return!0},agregarObservacion(){this.showObservacionModal=!0},guardarObservacion(){this.tieneObservacion=this.observacion.trim().length>0,this.showObservacionModal=!1,this.$route.params.id&&"true"===this.$route.query.edit&&this.handleDataChange()},cancelarObservacion(){this.tieneObservacion||(this.observacion=""),this.showObservacionModal=!1},editarObservacion(){this.showObservacionModal=!0},eliminarObservacion(){confirm("¿Estás seguro de que deseas eliminar esta observación?")&&(this.observacion="",this.tieneObservacion=!1,this.$route.params.id&&"true"===this.$route.query.edit&&this.handleDataChange())},handleDataChange(){this.$route.params.id&&"true"===this.$route.query.edit&&(this.autoSaveTimer&&clearTimeout(this.autoSaveTimer),this.autoSaveTimer=setTimeout(async()=>{await this.queueSave()},2e3))},async queueSave(){this.saveQueue.push({timestamp:Date.now(),operation:async()=>{this.$route.params.id?await this.autoSaveNota():console.log("No hay ID de cuenta, no se realizará guardado automático")}}),this.isSaving||await this.processSaveQueue()},async processSaveQueue(){if(!this.isSaving&&0!==this.saveQueue.length){this.isSaving=!0;try{while(this.saveQueue.length>0){const e=Date.now();this.lastSaveTime&&e-this.lastSaveTime<this.saveMinInterval&&await new Promise(t=>setTimeout(t,this.saveMinInterval-(e-this.lastSaveTime)));const t=this.saveQueue[0];await this.retryOperation(t.operation),this.lastSaveTime=Date.now(),this.saveQueue.shift()}}catch(e){console.error("Error procesando cola de guardado:",e),"resource-exhausted"===e.code&&(await new Promise(e=>setTimeout(e,1e4)),await this.processSaveQueue())}finally{this.isSaving=!1}}},async autoSaveNota(){try{const e=this.$route.params.id;if(!e)return;const t={fecha:this.fechaSeleccionada,items:this.items.map(e=>({kilos:Number(e.kilos)||0,medida:String(e.medida||""),costo:Number(e.costo)||0,total:Number(e.kilos*e.costo)||0})),itemsVenta:this.itemsVenta.map(e=>({kilosVenta:Number(e.kilosVenta)||0,medida:String(e.medida||""),precioVenta:Number(e.precioVenta)||0,totalVenta:Number(e.kilosVenta*e.precioVenta)||0,ganancia:Number(e.ganancia)||0})),saldoAcumuladoAnterior:Number(this.saldoAcumuladoAnterior)||0,cobros:this.cobros.map(e=>({descripcion:String(e.descripcion||""),monto:Number(e.monto)||0})),abonos:this.abonos.map(e=>({descripcion:String(e.descripcion||""),monto:Number(e.monto)||0})),totalGeneral:Number(this.totalGeneral)||0,totalGeneralVenta:Number(this.totalGeneralVenta)||0,totalCobros:Number(this.cobros.reduce((e,t)=>e+(Number(t.monto)||0),0)),totalAbonos:Number(this.abonos.reduce((e,t)=>e+(Number(t.monto)||0),0)),totalDia:Number(this.totalDiaActual)||0,nuevoSaldoAcumulado:Number(this.nuevoSaldoAcumulado)||0,gananciaDelDia:Number(this.gananciaDelDia)||0,estadoPagado:Boolean(this.totalDiaActual<=0),tieneObservacion:Boolean(this.tieneObservacion),observacion:String(this.observacion||""),ultimaActualizacion:(new Date).toISOString()};await Object(s["r"])(Object(s["e"])(n["a"],"cuentasOtilioIndependiente",e),t),this.lastSaveMessage="Guardado automático: "+(new Date).toLocaleTimeString(),this.showSaveMessage=!0,this.saveMessageTimer&&clearTimeout(this.saveMessageTimer),this.saveMessageTimer=setTimeout(()=>{this.showSaveMessage=!1},3e3),console.log("Cuenta auto-guardada exitosamente:",(new Date).toLocaleTimeString())}catch(e){if(console.error("Error en auto-guardado:",e),"resource-exhausted"===e.code)throw this.lastSaveMessage="Límite de operaciones excedido. Reintentando...",e;throw"unavailable"===e.code||"network-request-failed"===e.code?this.lastSaveMessage="Error de conexión al guardar automáticamente":this.lastSaveMessage="Error al guardar automáticamente",this.showSaveMessage=!0,this.saveMessageTimer&&clearTimeout(this.saveMessageTimer),this.saveMessageTimer=setTimeout(()=>{this.showSaveMessage=!1},3e3),e}},async retryOperation(e,t=3){let a=0;while(a<t)try{return await e()}catch(o){if(a++,console.error(`Error en operación (intento ${a}/${t}):`,o),"resource-exhausted"===o.code?await new Promise(e=>setTimeout(e,5e3*Math.pow(2,a))):await new Promise(e=>setTimeout(e,1e3*Math.pow(2,a))),a>=t)throw console.error("Se alcanzó el número máximo de intentos. Operación fallida."),o}},editField(e,t){this.editingField={index:e,field:t},this.$nextTick(()=>{var e;this.$refs.editInput&&(null===(e=this.$refs.editInput[0])||void 0===e||e.focus())})},finishEditing(){this.editingField={index:null,field:null},this.items.length>0&&(this.items=this.items.map(e=>({...e,total:e.kilos*e.costo})))},addNewProduct(){var e;if(!this.newProduct.kilosVenta||!this.newProduct.medida||!this.newProduct.precioVenta)return void alert("Por favor complete todos los campos");const t=this.newProduct.kilosVenta*this.newProduct.precioVenta;this.itemsVenta.push({...this.newProduct,totalVenta:t,ganancia:t-this.newProduct.kilosVenta*((null===(e=this.items[this.itemsVenta.length])||void 0===e?void 0:e.costo)||0)}),this.showAddProductModal=!1,this.newProduct={kilosVenta:null,medida:"",precioVenta:null}},calcularTotalVenta(e){const t=this.itemsVenta[e];if(t){var a;const o=Number(t.kilosVenta)||0,i=Number(t.precioVenta)||0,n=Number(null===(a=this.items[e])||void 0===a?void 0:a.costo)||0,s=o*i,r=s-o*n;this.$set(this.itemsVenta,e,{...t,kilosVenta:o,precioVenta:i,totalVenta:s,ganancia:r}),this.autoSaveTimer&&clearTimeout(this.autoSaveTimer),this.autoSaveTimer=setTimeout(()=>{this.guardarSilencioso()},1e3)}},async guardarSilencioso(){try{const e=this.$route.params.id,t="true"===this.$route.query.edit;if(e&&t){const t={fecha:this.fechaSeleccionada,items:this.items.map(e=>({kilos:Number(e.kilos)||0,medida:String(e.medida||""),costo:Number(e.costo)||0,total:Number(e.kilos*e.costo)||0})),itemsVenta:this.itemsVenta.map(e=>({kilosVenta:Number(e.kilosVenta)||0,medida:String(e.medida||""),precioVenta:Number(e.precioVenta)||0,totalVenta:Number(e.kilosVenta*e.precioVenta)||0,ganancia:Number(e.ganancia)||0})),saldoAcumuladoAnterior:Number(this.saldoAcumuladoAnterior)||0,cobros:this.cobros,abonos:this.abonos,totalGeneral:Number(this.totalGeneral)||0,totalGeneralVenta:Number(this.totalGeneralVenta)||0,totalDia:Number(this.totalDiaActual)||0,nuevoSaldoAcumulado:Number(this.nuevoSaldoAcumulado)||0,gananciaDelDia:Number(this.gananciaDelDia)||0,estadoPagado:Boolean(this.totalDiaActual<=0),tieneObservacion:this.tieneObservacion,observacion:this.observacion,ultimaActualizacion:(new Date).toISOString()},a=Object(s["e"])(n["a"],"cuentasOtilioIndependiente",e);await Object(s["r"])(a,t)}}catch(e){console.error("Error al guardar silenciosamente:",e)}},imprimirTablas(){window.print()},removeItem(e){this.items.splice(e,1),this.itemsVenta.splice(e,1)},editKilos(e){this.editingKilosIndex=e,this.$nextTick(()=>{var e;this.$refs.kilosInput&&(null===(e=this.$refs.kilosInput[0])||void 0===e||e.focus())})},finishEditingKilos(){this.editingKilosIndex=null,this.calcularTotalVenta(this.editingKilosIndex)},toggleGananciasMobile(e){window.innerWidth<=600&&(this.selectedRowIndex=this.selectedRowIndex===e?null:e)},async loadExistingCuenta(e){try{const t=Object(s["e"])(n["a"],"cuentasOtilioIndependiente",e),a=await Object(s["f"])(t);if(!a.exists())throw new Error("No se encontró la cuenta especificada");{const e=a.data();this.items=(e.items||[]).map(e=>({kilos:Number(e.kilos)||0,medida:e.medida||"",costo:Number(e.costo)||0,total:Number(e.total)||0})),this.itemsVenta=(e.itemsVenta||[]).map(e=>({kilosVenta:Number(e.kilosVenta)||0,medida:e.medida||"",precioVenta:Number(e.precioVenta)||0,totalVenta:Number(e.totalVenta)||0,ganancia:Number(e.ganancia)||0})),this.saldoAcumuladoAnterior=Number(e.saldoAcumuladoAnterior)||0,this.cobros=(e.cobros||[]).map(e=>({descripcion:e.descripcion||"",monto:Number(e.monto)||0})),this.abonos=(e.abonos||[]).map(e=>({descripcion:e.descripcion||"",monto:Number(e.monto)||0})),this.fechaSeleccionada=e.fecha||this.obtenerFechaActual(),this.showObservacionModal=!1,this.tieneObservacion=e.tieneObservacion||!1,this.observacion=e.observacion||""}}catch(t){throw console.error("Error al cargar la cuenta existente:",t),t}},async obtenerSaldoAcumuladoAnterior(){try{const e=Object(s["c"])(n["a"],"cuentasOtilioIndependiente"),t=Object(s["o"])(e,Object(s["s"])("fecha","<",this.fechaSeleccionada),Object(s["l"])("fecha","desc"),Object(s["j"])(1)),a=await Object(s["g"])(t);if(!a.empty){const e=a.docs[0].data(),t=(e.cobros||[]).reduce((e,t)=>e+(parseFloat(t.monto)||0),0),o=(e.abonos||[]).reduce((e,t)=>e+(parseFloat(t.monto)||0),0),i=(e.totalGeneralVenta||0)-t-o;if(i<=0)return 0;const n=(e.saldoAcumuladoAnterior||0)+i;return n}return 0}catch(e){return console.error("Error al obtener saldo acumulado anterior:",e),0}},async actualizarCuentasPosteriores(e){try{const e=Object(s["c"])(n["a"],"cuentasOtilioIndependiente"),t=Object(s["o"])(e,Object(s["l"])("fecha","asc")),a=await Object(s["g"])(t),o=a.docs.map(e=>({id:e.id,...e.data()})),i=o.sort((e,t)=>new Date(e.fecha)-new Date(t.fecha));let r=0;for(let c=0;c<i.length;c++){const e=i[c],t=Object(s["e"])(n["a"],"cuentasOtilioIndependiente",e.id),a=e.totalGeneralVenta+(e.cobros||[]).reduce((e,t)=>e+(parseFloat(t.monto)||0),0)-(e.abonos||[]).reduce((e,t)=>e+(parseFloat(t.monto)||0),0);r+=a,await Object(s["r"])(t,{saldoAcumuladoAnterior:0===c?0:i[c-1].nuevoSaldoAcumulado,nuevoSaldoAcumulado:r,estadoPagado:r<=0}),r<=0&&(r=0)}}catch(t){throw console.error("Error al actualizar cuentas posteriores:",t),t}},startLongPress(e,t){this.longPressTimer=setTimeout(()=>{this.showMobileActions=!0,this.selectedItemIndex=e,this.selectedField=t},500)},endLongPress(){clearTimeout(this.longPressTimer)},cancelMobileActions(){this.showMobileActions=!1,this.selectedItemIndex=null,this.selectedField=null},editItem(e){this.editingItem={...this.items[e]},this.editingIndex=e,this.showEditModal=!0,this.showMobileActions=!1},saveEditedItem(){null!==this.editingIndex&&this.editingItem&&(this.editingItem.total=this.editingItem.kilos*this.editingItem.costo,this.items[this.editingIndex]={...this.editingItem},this.actualizarItemsVenta()),this.showEditModal=!1,this.editingItem=null,this.editingIndex=null},cancelEdit(){this.showEditModal=!1,this.editingItem=null,this.editingIndex=null},actualizarItemsVenta(){const e=[...this.itemsVenta];this.itemsVenta=this.items.map((t,a)=>{const o=e[a]||{},i=Number(o.precioVenta)||0;return{kilosVenta:Number(t.kilos)||0,medida:t.medida,precioVenta:i,totalVenta:(Number(t.kilos)||0)*i,ganancia:(Number(t.kilos)||0)*i-(Number(t.kilos)||0)*(Number(t.costo)||0)}})},async crearNuevaCuenta(){try{console.log("Iniciando creación de nueva cuenta..."),this.isGuardando=!0,this.lastSaveMessage="Creando nueva cuenta...",this.showSaveMessage=!0;const t=Object(s["c"])(n["a"],"cuentasOtilioIndependiente");console.log("Referencia a la colección creada:",t);const a=Object(s["o"])(t,Object(s["s"])("fecha","==",this.fechaSeleccionada));console.log("Query construida para fecha:",this.fechaSeleccionada);const o=await Object(s["g"])(a);if(console.log("Query snapshot obtenido:",o.size,"documentos encontrados"),!o.empty)return this.isGuardando=!1,this.lastSaveMessage="Ya existe una nota para esta fecha",this.showSaveMessage=!0,setTimeout(()=>{this.showSaveMessage=!1},3e3),null;console.log("Obteniendo saldo acumulado anterior..."),0!==this.saldoAcumuladoAnterior&&null!==this.saldoAcumuladoAnterior||(this.lastSaveMessage="Cargando saldo acumulado anterior...",this.saldoAcumuladoAnterior=await this.obtenerSaldoAcumuladoAnterior()),console.log("Saldo anterior obtenido:",this.saldoAcumuladoAnterior);const i={fecha:this.fechaSeleccionada,items:this.items||[],itemsVenta:this.itemsVenta||[],saldoAcumuladoAnterior:this.saldoAcumuladoAnterior||0,cobros:this.cobros||[],abonos:this.abonos||[],totalGeneral:this.totalGeneral||0,totalGeneralVenta:this.totalGeneralVenta||0,nuevoSaldoAcumulado:0,estadoPagado:!1,tieneObservacion:Boolean(this.tieneObservacion),observacion:String(this.observacion||""),ultimaActualizacion:(new Date).toISOString()};console.log("Datos preparados para crear nueva cuenta:",i),this.lastSaveMessage="Guardando nueva cuenta...";try{console.log("Intentando crear documento en Firestore...");const e=await Object(s["b"])(t,i);console.log("Documento creado exitosamente con ID:",e.id);const a=await Object(s["f"])(e);if(!a.exists())throw new Error("El documento no se creó correctamente");return console.log("Documento verificado y existe en Firestore"),console.log("Actualizando URL..."),this.lastSaveMessage="Cuenta creada exitosamente",setTimeout(()=>{this.showSaveMessage=!1,this.isGuardando=!1},2e3),await this.$router.push({name:"CuentasOtilioIndependiente",params:{id:e.id},query:{edit:"true"}}),console.log("Cargando datos de la nueva cuenta..."),await this.loadExistingCuenta(e.id),e.id}catch(e){throw console.error("Error específico de Firestore:",e),this.isGuardando=!1,this.lastSaveMessage="Error: "+e.message,this.showSaveMessage=!0,setTimeout(()=>{this.showSaveMessage=!1},3e3),new Error("Error al crear el documento en Firestore: "+e.message)}}catch(t){throw console.error("Error detallado al crear nueva cuenta:",t),this.isGuardando=!1,this.lastSaveMessage="Error: "+t.message,this.showSaveMessage=!0,setTimeout(()=>{this.showSaveMessage=!1},3e3),t}}},created(){const e=this.$route.params.id,t="true"===this.$route.query.edit,a="/cuentas-otilio-independiente/nueva"===this.$route.path;e&&t?this.loadExistingCuenta(e):a?this.$nextTick(async()=>{try{this.limpiarDatos(),await this.loadSaldoAcumuladoAnterior(),setTimeout(async()=>{const e=await this.crearNuevaCuenta();e&&console.log("Nueva cuenta creada automáticamente con ID:",e)},800)}catch(e){console.error("Error al crear nueva cuenta automáticamente:",e)}}):this.limpiarDatos()},watch:{items:{handler:"handleDataChange",deep:!0},itemsVenta:{handler:"handleDataChange",deep:!0},cobros:{handler:"handleDataChange",deep:!0},abonos:{handler:"handleDataChange",deep:!0},fechaSeleccionada:{handler:"handleDataChange"},saldoAcumuladoAnterior:{handler:"handleDataChange"},"newItem.kilos":"handleDataChange","newItem.medida":"handleDataChange","newItem.costo":"handleDataChange",observacion:"handleDataChange"},beforeUnmount(){this.autoSaveTimer&&clearTimeout(this.autoSaveTimer),this.saveMessageTimer&&clearTimeout(this.saveMessageTimer),this.saveQueue.length>0&&this.processSaveQueue()}},m=u,h=(a("1eae"),a("2877")),v=Object(h["a"])(m,o,i,!1,null,"4cddbe40",null);t["a"]=v.exports},a826:function(e,t,a){},fcb3:function(e,t,a){"use strict";var o=function(){var e=this,t=e._self._c;return t("div",{staticClass:"cuentas-ozuna-container"},[t("div",{staticClass:"back-button-container"},[t("BackButton",{attrs:{to:"/cuentas-ozuna"}})],1),t("h1",[e._v("Cuentas Ozuna")]),t("div",{staticClass:"precios-button-container"},[t("PreciosClienteButton",{attrs:{clienteId:"ozuna"}})],1),t("div",{staticClass:"fecha-actual"},[t("input",{directives:[{name:"model",rawName:"v-model",value:e.fechaSeleccionada,expression:"fechaSeleccionada"}],attrs:{type:"date"},domProps:{value:e.fechaSeleccionada},on:{input:function(t){t.target.composing||(e.fechaSeleccionada=t.target.value)}}}),t("span",[e._v(e._s(e.fechaFormateada))])]),t("div",{staticClass:"input-section"},[t("h2",[e._v("Ingresar Datos")]),t("div",{staticClass:"input-row"},[t("input",{directives:[{name:"model",rawName:"v-model.number",value:e.newItem.kilos,expression:"newItem.kilos",modifiers:{number:!0}}],attrs:{type:"number",placeholder:"Kilos"},domProps:{value:e.newItem.kilos},on:{input:function(t){t.target.composing||e.$set(e.newItem,"kilos",e._n(t.target.value))},blur:function(t){return e.$forceUpdate()}}}),t("input",{directives:[{name:"model",rawName:"v-model",value:e.newItem.medida,expression:"newItem.medida"}],attrs:{type:"text",placeholder:"Medida"},domProps:{value:e.newItem.medida},on:{input:function(t){t.target.composing||e.$set(e.newItem,"medida",t.target.value)}}}),t("input",{directives:[{name:"model",rawName:"v-model.number",value:e.newItem.costo,expression:"newItem.costo",modifiers:{number:!0}}],attrs:{type:"number",placeholder:"Costo"},domProps:{value:e.newItem.costo},on:{input:function(t){t.target.composing||e.$set(e.newItem,"costo",e._n(t.target.value))},blur:function(t){return e.$forceUpdate()}}}),t("button",{on:{click:e.addItem}},[e._v("Agregar")])])]),t("table",{staticClass:"tabla-principal"},[e._m(0),t("tbody",e._l(e.items,(function(a,o){return t("tr",{key:o},[t("td",{on:{click:function(t){return e.editarItem(o,"kilos")}}},[a.editando&&"kilos"===a.campoEditando?t("input",{directives:[{name:"model",rawName:"v-model.number",value:a.kilos,expression:"item.kilos",modifiers:{number:!0}}],attrs:{type:"number"},domProps:{value:a.kilos},on:{blur:[function(t){return e.finalizarEdicion(o)},function(t){return e.$forceUpdate()}],input:function(t){t.target.composing||e.$set(a,"kilos",e._n(t.target.value))}}}):t("span",[e._v(e._s(e.formatNumber(a.kilos)))])]),t("td",{on:{click:function(t){return e.editarItem(o,"medida")}}},[a.editando&&"medida"===a.campoEditando?t("input",{directives:[{name:"model",rawName:"v-model",value:a.medida,expression:"item.medida"}],attrs:{type:"text"},domProps:{value:a.medida},on:{blur:function(t){return e.finalizarEdicion(o)},input:function(t){t.target.composing||e.$set(a,"medida",t.target.value)}}}):t("span",[e._v(e._s(a.medida))])]),t("td",{on:{click:function(t){return e.editarItem(o,"costo")}}},[a.editando&&"costo"===a.campoEditando?t("input",{directives:[{name:"model",rawName:"v-model.number",value:a.costo,expression:"item.costo",modifiers:{number:!0}}],attrs:{type:"number"},domProps:{value:a.costo},on:{blur:[function(t){return e.finalizarEdicion(o)},function(t){return e.$forceUpdate()}],input:function(t){t.target.composing||e.$set(a,"costo",e._n(t.target.value))}}}):t("span",[e._v("$"+e._s(e.formatNumber(a.costo)))])]),t("td",[e._v("$"+e._s(e.formatNumber(a.total)))]),t("td",{staticClass:"action-column"},[t("button",{staticClass:"delete-btn",on:{click:function(t){return e.removeItem(o)}}},[e._v("Eliminar")])])])})),0),t("tfoot",[t("tr",[t("td",{attrs:{colspan:"3"}}),t("td",[e._v("$"+e._s(e.formatNumber(e.totalGeneral)))]),t("td")])])]),t("h2",[e._v("Saldo pendiente")]),t("div",{staticClass:"saldo-pendiente"},[t("div",{staticClass:"input-row"},[t("span",[e._v("Saldo Acumulado Anterior: $"+e._s(e.formatNumber(e.saldoAcumuladoAnterior)))])]),e._l(e.cobros,(function(a,o){return t("div",{key:o,staticClass:"input-row"},[t("input",{directives:[{name:"model",rawName:"v-model",value:a.descripcion,expression:"cobro.descripcion"}],attrs:{type:"text",placeholder:"Descripción"},domProps:{value:a.descripcion},on:{input:function(t){t.target.composing||e.$set(a,"descripcion",t.target.value)}}}),t("input",{directives:[{name:"model",rawName:"v-model.number",value:a.monto,expression:"cobro.monto",modifiers:{number:!0}}],attrs:{type:"number",placeholder:"Monto"},domProps:{value:a.monto},on:{input:function(t){t.target.composing||e.$set(a,"monto",e._n(t.target.value))},blur:function(t){return e.$forceUpdate()}}}),t("button",{staticClass:"delete-btn",on:{click:function(t){return e.removeCobro(o)}}},[e._v("Eliminar")])])})),t("button",{staticClass:"add-btn",on:{click:e.addCobro}},[e._v("Agregar Cobro")])],2),t("h2",[e._v("Abonos")]),t("div",{staticClass:"abonos"},[e._l(e.abonos,(function(a,o){return t("div",{key:o,staticClass:"input-row"},[t("input",{directives:[{name:"model",rawName:"v-model",value:a.descripcion,expression:"abono.descripcion"}],attrs:{type:"text",placeholder:"Descripción"},domProps:{value:a.descripcion},on:{input:function(t){t.target.composing||e.$set(a,"descripcion",t.target.value)}}}),t("input",{directives:[{name:"model",rawName:"v-model.number",value:a.monto,expression:"abono.monto",modifiers:{number:!0}}],attrs:{type:"number",placeholder:"Monto"},domProps:{value:a.monto},on:{input:function(t){t.target.composing||e.$set(a,"monto",e._n(t.target.value))},blur:function(t){return e.$forceUpdate()}}}),t("button",{staticClass:"delete-btn",on:{click:function(t){return e.removeAbono(o)}}},[e._v("Eliminar")])])})),t("button",{staticClass:"add-btn",on:{click:e.addAbono}},[e._v("Agregar Abono")])],2),t("table",{staticClass:"tabla-saldo"},[t("tr",[t("td",[e._v("Saldo Acumulado Anterior")]),t("td",[e._v("$"+e._s(e.formatNumber(e.saldoAcumuladoAnterior)))])]),t("tr",[t("td",[e._v("Saldo Hoy")]),t("td",[e._v("$"+e._s(e.formatNumber(e.totalGeneral)))])]),e._l(e.cobros,(function(a,o){return t("tr",{key:o},[t("td",[e._v(e._s(a.descripcion))]),t("td",[e._v("$"+e._s(e.formatNumber(a.monto)))])])})),e._l(e.abonos,(function(a,o){return t("tr",{key:"abono-"+o},[t("td",[e._v(e._s(a.descripcion)+" (Abono)")]),t("td",[e._v("-$"+e._s(e.formatNumber(a.monto)))])])})),t("tr",{staticClass:"total"},[t("td",[e._v("Total")]),t("td",[e._v("$"+e._s(e.formatNumber(e.totalSaldo)))])]),t("tr",{staticClass:"total"},[t("td",[e._v("Nuevo Saldo Acumulado")]),t("td",[e._v("$"+e._s(e.formatNumber(e.nuevoSaldoAcumulado)))])])],2),t("div",{staticClass:"button-container"},[t("button",{staticClass:"save-button",on:{click:e.guardarNota}},[e._v("Guardar Nota")]),t("button",{staticClass:"print-button",on:{click:e.imprimirTablas}},[e._v("Imprimir")])]),e.showMobileActions?t("div",{staticClass:"mobile-actions-modal"},[t("button",{on:{click:function(t){return e.editItem(e.selectedItemIndex)}}},[e._v("Editar")]),t("button",{on:{click:function(t){return e.removeItem(e.selectedItemIndex)}}},[e._v("Eliminar")]),t("button",{on:{click:e.cancelMobileActions}},[e._v("Cancelar")])]):e._e()])},i=[function(){var e=this,t=e._self._c;return t("thead",[t("tr",[t("th",[e._v("Kilos")]),t("th",[e._v("Medida")]),t("th",[e._v("Costo")]),t("th",[e._v("Total")]),t("th",[e._v("Acciones")])])])}],n=(a("14d9"),a("13d5"),a("dc59")),s=a("1494"),r=a("74c9"),c=a("03c4"),l={name:"CuentasOzuna",components:{BackButton:r["a"],PreciosClienteButton:c["a"]},data(){return{items:[],newItem:{kilos:null,medida:"",costo:null},saldoAcumuladoAnterior:0,cobros:[],abonos:[],fechaSeleccionada:this.obtenerFechaActual(),showMobileActions:!1,selectedItemIndex:null,presionTimer:null,autoSaveTimeout:null,currentDocId:null}},computed:{fechaFormateada(){const e=new Date(this.fechaSeleccionada+"T00:00:00"),t={year:"numeric",month:"long",day:"numeric"};return e.toLocaleDateString("es-ES",t)},totalGeneral(){return this.items.reduce((e,t)=>e+t.total,0)},totalSaldo(){const e=this.cobros.reduce((e,t)=>e+(t.monto||0),0),t=this.abonos.reduce((e,t)=>e+(t.monto||0),0);return this.saldoAcumuladoAnterior+this.totalGeneral+e-t},nuevoSaldoAcumulado(){return this.totalSaldo}},watch:{items:{deep:!0,handler:"triggerAutoSave"},cobros:{deep:!0,handler:"triggerAutoSave"},abonos:{deep:!0,handler:"triggerAutoSave"},fechaSeleccionada:{handler:async function(e){await this.loadSaldoAcumuladoAnterior(),this.triggerAutoSave()}}},async mounted(){console.log("Mounted ejecutado",this.$route.params,this.$route.query);const e=this.$route.params.id,t="true"===this.$route.query.edit;e&&t?(console.log("Iniciando carga de cuenta existente"),await this.loadExistingCuenta(e)):(console.log("Cargando saldo acumulado anterior para nueva cuenta"),await this.loadSaldoAcumuladoAnterior())},methods:{triggerAutoSave(){this.autoSaveTimeout&&clearTimeout(this.autoSaveTimeout),this.autoSaveTimeout=setTimeout(()=>{this.autoSave()},500)},async autoSave(){try{const e={fecha:this.fechaSeleccionada,items:this.items,saldoAcumuladoAnterior:this.saldoAcumuladoAnterior,cobros:this.cobros,abonos:this.abonos,totalGeneral:this.totalGeneral,totalSaldo:this.totalSaldo,nuevoSaldoAcumulado:this.nuevoSaldoAcumulado,lastAutoSave:(new Date).toISOString()};if(this.currentDocId)return await Object(s["r"])(Object(s["e"])(n["a"],"cuentasOzuna",this.currentDocId),e),void console.log("Auto-guardado exitoso (actualización)");const t=Object(s["c"])(n["a"],"cuentasOzuna"),a=Object(s["o"])(t,Object(s["s"])("fecha","==",this.fechaSeleccionada)),o=await Object(s["g"])(a);if(o.empty){const t=await Object(s["b"])(Object(s["c"])(n["a"],"cuentasOzuna"),e);this.currentDocId=t.id,console.log("Auto-guardado exitoso (nuevo documento)")}else this.currentDocId=o.docs[0].id,await Object(s["r"])(Object(s["e"])(n["a"],"cuentasOzuna",this.currentDocId),e),console.log("Auto-guardado exitoso (actualización)")}catch(e){console.error("Error en auto-guardado:",e)}},async loadExistingCuenta(e){try{console.log("Cargando cuenta con ID:",e);const t=Object(s["e"])(n["a"],"cuentasOzuna",e),a=await Object(s["f"])(t);if(a.exists()){const t=a.data();console.log("Datos de la cuenta cargados:",t),this.currentDocId=e,this.$nextTick(()=>{this.items=t.items||[],this.saldoAcumuladoAnterior=t.saldoAcumuladoAnterior||0,this.cobros=t.cobros||[],this.abonos=t.abonos||[],this.fechaSeleccionada=t.fecha||this.obtenerFechaActual(),console.log("Estado actualizado con $nextTick")})}else console.error("No se encontró la cuenta con el ID proporcionado")}catch(t){console.error("Error al cargar la cuenta existente: ",t)}},async loadSaldoAcumuladoAnterior(){try{const e=Object(s["c"])(n["a"],"cuentasOzuna"),t=Object(s["o"])(e,Object(s["s"])("fecha","<",this.fechaSeleccionada),Object(s["l"])("fecha","asc")),a=await Object(s["g"])(t);let o=0;a.forEach(e=>{const t=e.data(),a=t.totalGeneral||0,i=(t.cobros||[]).reduce((e,t)=>e+(t.monto||0),0),n=(t.abonos||[]).reduce((e,t)=>e+(t.monto||0),0);o+=a+i-n}),this.saldoAcumuladoAnterior=o,console.log("Saldo acumulado anterior calculado:",this.saldoAcumuladoAnterior)}catch(e){console.error("Error al calcular el saldo acumulado anterior:",e),this.saldoAcumuladoAnterior=0}},formatNumber(e){return e.toLocaleString("en-US",{minimumFractionDigits:2,maximumFractionDigits:2})},addItem(){if(this.newItem.kilos&&this.newItem.medida&&this.newItem.costo){const e=this.newItem.kilos*this.newItem.costo;this.items.push({...this.newItem,total:e}),this.newItem={kilos:null,medida:"",costo:null}}},removeItem(e){this.items.splice(e,1),this.showMobileActions=!1},addCobro(){this.cobros.push({descripcion:"",monto:0})},removeCobro(e){this.cobros.splice(e,1)},addAbono(){this.abonos.push({descripcion:"",monto:0})},removeAbono(e){this.abonos.splice(e,1)},obtenerFechaActual(){const e=new Date;return e.getFullYear()+"-"+String(e.getMonth()+1).padStart(2,"0")+"-"+String(e.getDate()).padStart(2,"0")},async guardarNota(){try{const e={fecha:this.fechaSeleccionada,items:this.items,saldoAcumuladoAnterior:this.saldoAcumuladoAnterior,cobros:this.cobros,abonos:this.abonos,totalGeneral:this.totalGeneral,totalSaldo:this.totalSaldo,nuevoSaldoAcumulado:this.nuevoSaldoAcumulado};if(this.currentDocId)await Object(s["r"])(Object(s["e"])(n["a"],"cuentasOzuna",this.currentDocId),e),console.log("Cuenta actualizada exitosamente");else{const t=await Object(s["b"])(Object(s["c"])(n["a"],"cuentasOzuna"),e);this.currentDocId=t.id,console.log("Nueva cuenta guardada exitosamente")}alert("Cuenta guardada exitosamente"),this.$router.push("/cuentas-ozuna")}catch(e){console.error("Error al guardar la cuenta:",e),alert("Error al guardar la cuenta")}},iniciarPresion(e){this.presionTimer=setTimeout(()=>{this.showMobileActionsModal(e)},500)},finalizarPresion(){clearTimeout(this.presionTimer)},showMobileActionsModal(e){this.selectedItemIndex=e,this.showMobileActions=!0},cancelMobileActions(){this.showMobileActions=!1,this.selectedItemIndex=null},editItem(e){console.log("Editar item:",e),this.showMobileActions=!1},imprimirTablas(){const e=`\n        <html>\n          <head>\n            <title>Cuentas Ozuna - ${this.fechaFormateada}</title>\n            <style>\n              body {\n                font-family: Arial, sans-serif;\n                font-size: 20pt;\n                line-height: 1.6;\n                max-width: 800px;\n                margin: 0 auto;\n                padding: 20px;\n                text-align: center;\n              }\n              h1 { font-size: 30pt; margin-bottom: 20px; }\n              h2 { font-size: 27pt; margin-top: 30px; margin-bottom: 15px; }\n              table {\n                width: 100%;\n                border-collapse: collapse;\n                margin-bottom: 30px;\n                font-size: 20pt;\n              }\n              th, td {\n                border: 1px solid #ddd;\n                padding: 10px;\n                text-align: left;\n              }\n              th { background-color: #f2f2f2; font-weight: bold; }\n              .total { font-weight: bold; }\n              .total td:first-child { text-align: right; }\n              @media print {\n                body { font-size: 20pt; }\n                h1 { font-size: 25pt; }\n                h2 { font-size: 25pt; }\n                table { font-size: 20pt; }\n              }\n            </style>\n          </head>\n          <body>\n            <h1>Cuentas Ozuna - ${this.fechaFormateada}</h1>\n            \n            <h2>Detalles de la cuenta</h2>\n            <table>\n              <thead>\n                <tr>\n                  <th>Kilos</th>\n                  <th>Medida</th>\n                  <th>Costo</th>\n                  <th>Total</th>\n                </tr>\n              </thead>\n              <tbody>\n                ${this.items.map(e=>`\n                  <tr>\n                    <td>${this.formatNumber(e.kilos)}</td>\n                    <td>${e.medida}</td>\n                    <td>$${this.formatNumber(e.costo)}</td>\n                    <td>$${this.formatNumber(e.total)}</td>\n                  </tr>\n                `).join("")}\n              </tbody>\n              <tfoot>\n                <tr class="total">\n                  <td colspan="3">Total</td>\n                  <td>$${this.formatNumber(this.totalGeneral)}</td>\n                </tr>\n              </tfoot>\n            </table>\n\n            <h2>Resumen de saldo</h2>\n            <table>\n              <tr>\n                <td>Saldo Anterior</td>\n                <td>$${this.formatNumber(this.saldoAcumuladoAnterior)}</td>\n              </tr>\n              <tr>\n                <td>Saldo Hoy</td>\n                <td>$${this.formatNumber(this.totalGeneral)}</td>\n              </tr>\n              ${this.cobros.map(e=>`\n                <tr>\n                  <td>${e.descripcion}</td>\n                  <td>$${this.formatNumber(e.monto)}</td>\n                </tr>\n              `).join("")}\n              ${this.abonos.map(e=>`\n                <tr>\n                  <td>${e.descripcion} (Abono)</td>\n                  <td>-$${this.formatNumber(e.monto)}</td>\n                </tr>\n              `).join("")}\n              <tr class="total">\n                <td>Total</td>\n                <td>$${this.formatNumber(this.totalSaldo)}</td>\n              </tr>\n            </table>\n          </body>\n        </html>\n      `,t=window.open("","_blank");t.document.write(e),t.document.close(),t.print()},editarItem(e,t){this.$set(this.items[e],"editando",!0),this.$set(this.items[e],"campoEditando",t),this.$nextTick(()=>{const a=this.$el.querySelector(`tr:nth-child(${e+1}) td:nth-child(${this.getCampoIndex(t)}) input`);a&&a.focus()})},finalizarEdicion(e){const t=this.items[e];t.editando=!1,t.campoEditando=null,t.total=t.kilos*t.costo,this.$set(this.items,e,t)},getCampoIndex(e){const t=["kilos","medida","costo"];return t.indexOf(e)+1}}},d=l,u=(a("45e6"),a("2877")),m=Object(u["a"])(d,o,i,!1,null,"16cbdb5f",null);t["a"]=m.exports}}]);