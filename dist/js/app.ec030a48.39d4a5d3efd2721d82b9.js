(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["app.ec030a48"],{"20bb":function(e,t,a){},"412e":function(e,t,a){"use strict";a("9406")},9406:function(e,t,a){},a866:function(e,t,a){"use strict";a("20bb")},b34e:function(e,t,a){"use strict";a("14d9");var o=function(){var e=this,t=e._self._c;return t("div",{staticClass:"lista-embarques"},[t("div",{staticClass:"header-section"},[e._m(0),t("div",{staticClass:"header-actions"},[t("button",{staticClass:"btn-refresh",attrs:{title:"Actualizar lista"},on:{click:e.cargarEmbarques}},[t("i",{staticClass:"icon"},[e._v("🔄")]),e._v(" Actualizar ")])])]),e.cargando?t("div",{staticClass:"loading-state"},[t("div",{staticClass:"loading-spinner"}),t("p",[e._v("Cargando embarques...")])]):e.error?t("div",{staticClass:"error-state"},[t("i",{staticClass:"icon-error"},[e._v("⚠️")]),t("h3",[e._v("Error al cargar")]),t("p",[e._v(e._s(e.error))]),t("button",{staticClass:"btn-retry",on:{click:e.cargarEmbarques}},[e._v("Reintentar")])]):t("div",{staticClass:"embarques-container"},[e.embarques.length>0?t("div",{staticClass:"embarques-grid"},e._l(e.embarques,(function(a){return t("div",{key:a.id,staticClass:"embarque-card",class:{"card-blocked":a.embarqueBloqueado}},[t("div",{staticClass:"card-header"},[t("div",{staticClass:"fecha-section"},[t("i",{staticClass:"icon-calendar"},[e._v("📅")]),t("div",{staticClass:"fecha-info"},[t("span",{staticClass:"fecha-label"},[e._v("Fecha")]),t("span",{staticClass:"fecha-value"},[e._v(e._s(e.formatearFecha(a.fecha)))])])]),t("div",{staticClass:"status-section"},[a.embarqueBloqueado?t("span",{staticClass:"status-badge blocked"},[t("i",{staticClass:"icon-lock"},[e._v("🔒")]),e._v(" Bloqueado ")]):t("span",{staticClass:"status-badge active"},[t("i",{staticClass:"icon-check"},[e._v("✅")]),e._v(" Activo ")])])]),t("div",{staticClass:"card-content"},[t("div",{staticClass:"stats-grid"},[t("div",{staticClass:"stat-item"},[t("i",{staticClass:"icon-clean"},[e._v("🥤")]),t("div",{staticClass:"stat-info"},[t("span",{staticClass:"stat-label"},[e._v("Kilos Limpios")]),t("span",{staticClass:"stat-value"},[e._v(e._s(e.calcularKilosLimpios(a))+" kg")])])]),t("div",{staticClass:"stat-item"},[t("i",{staticClass:"icon-raw"},[e._v("🦐")]),t("div",{staticClass:"stat-info"},[t("span",{staticClass:"stat-label"},[e._v("Kilos Crudos")]),t("span",{staticClass:"stat-value"},[e._v(e._s(e.calcularKilosCrudos(a))+" kg")])])]),t("div",{staticClass:"stat-item"},[t("i",{staticClass:"icon-total"},[e._v("⚖️")]),t("div",{staticClass:"stat-info"},[t("span",{staticClass:"stat-label"},[e._v("Total Kilos")]),t("span",{staticClass:"stat-value total"},[e._v(e._s((Number(e.calcularKilosLimpios(a))+Number(e.calcularKilosCrudos(a))).toFixed(1))+" kg")])])]),t("div",{staticClass:"stat-item"},[t("i",{staticClass:"icon-taras"},[e._v("📦")]),t("div",{staticClass:"stat-info"},[t("span",{staticClass:"stat-label"},[e._v("Total Taras")]),t("span",{staticClass:"stat-value"},[e._v(e._s(e.calcularTotalTaras(a)))])])])]),t("div",{staticClass:"additional-info"},[t("div",{staticClass:"info-item"},[t("i",{staticClass:"icon-truck"},[e._v("🚚")]),t("span",{staticClass:"info-label"},[e._v("Carga con:")]),t("span",{staticClass:"info-value"},[e._v(e._s(a.cargaCon||"No especificado"))])])])]),t("div",{staticClass:"card-actions"},[t("button",{staticClass:"btn-action btn-edit",attrs:{title:"Editar embarque"},on:{click:function(t){return e.editarEmbarque(a.id)}}},[t("i",{staticClass:"icon"},[e._v("✏️")]),e._v(" Editar ")]),t("button",{staticClass:"btn-action btn-delete",class:{"btn-disabled":a.embarqueBloqueado},attrs:{disabled:a.embarqueBloqueado,title:a.embarqueBloqueado?"Este embarque está bloqueado":"Eliminar embarque"},on:{click:function(t){return e.eliminarEmbarque(a.id)}}},[t("i",{staticClass:"icon"},[e._v("🗑️")]),e._v(" Eliminar ")])])])})),0):t("div",{staticClass:"empty-state"},[t("div",{staticClass:"empty-icon"},[e._v("📋")]),t("h3",[e._v("No hay embarques registrados")]),t("p",[e._v("Comienza creando tu primer embarque")]),t("button",{staticClass:"btn-create",on:{click:function(t){return e.$router.push({name:"NuevoEmbarque",params:{id:"nuevo"}})}}},[t("i",{staticClass:"icon"},[e._v("➕")]),e._v(" Crear Embarque ")])])])])},r=[function(){var e=this,t=e._self._c;return t("div",{staticClass:"header-content"},[t("h1",{staticClass:"main-title"},[t("i",{staticClass:"icon-ship"},[e._v("🚢")]),e._v(" Lista de Embarques ")]),t("p",{staticClass:"subtitle"},[e._v("Gestiona todos tus embarques de manera eficiente")])])}],i=(a("13d5"),a("1494")),s={name:"ListaEmbarques",data(){return{embarques:[],cargando:!0,error:null}},methods:{async cargarEmbarques(){try{this.cargando=!0,this.error=null;const t=Object(i["h"])(),a=Object(i["c"])(t,"embarques"),o=await Object(i["g"])(a),r={};o.docs.forEach(e=>{const t=e.data();let a;if(t.fecha&&"function"===typeof t.fecha.toDate)a=t.fecha.toDate();else if(t.fecha instanceof Date)a=t.fecha;else{if("string"!==typeof t.fecha)return void(r[e.id]=[{id:e.id,data:t}]);a=new Date(t.fecha)}const o=a.toISOString().split("T")[0];r[o]||(r[o]=[]),r[o].push({id:e.id,data:t,fecha:a})});const s=[];for(const e in r)if(r[e].length>1){r[e].sort((e,t)=>{const a=e.data.clientes?e.data.clientes.reduce((e,t)=>e+(t.productos?t.productos.length:0),0):0,o=t.data.clientes?t.data.clientes.reduce((e,t)=>e+(t.productos?t.productos.length:0),0):0;return o-a});for(let t=1;t<r[e].length;t++)s.push(r[e][t].id)}if(s.length>0){for(const a of s)try{await Object(i["d"])(Object(i["e"])(t,"embarques",a))}catch(e){console.error(`Error al eliminar embarque duplicado con ID ${a}:`,e)}if(s.length>0)return this.cargarEmbarques()}const n=[];for(const e in r){const t=r[e][0];n.push({id:t.id,fecha:t.fecha,embarqueBloqueado:t.data.embarqueBloqueado||!1,clientes:t.data.clientes||[],cargaCon:t.data.cargaCon||"No especificado"})}this.embarques=n.sort((e,t)=>new Date(t.fecha)-new Date(e.fecha))}catch(e){console.error("Error al cargar embarques:",e),this.error="Error al cargar los embarques. Por favor, intenta nuevamente."}finally{this.cargando=!1}},calcularKilosLimpios(e){if(!e.clientes)return"0.0";let t=0;return e.clientes.forEach(e=>{e.productos&&e.productos.forEach(e=>{if("c/h20"===e.tipo){const a=e.reporteTaras||[],o=e.reporteBolsas||[];let r=0;for(let e=0;e<a.length;e++){const t=parseInt(a[e])||0,i=parseInt(o[e])||0;r+=t*i}const i=r*(e.camaronNeto||.65);t+=i}else{const a=(e.kilos||[]).reduce((e,t)=>e+(Number(t)||0),0),o=(e.taras||[]).reduce((e,t)=>e+(Number(t)||0),0),r=e.restarTaras?3*o:0;t+=a-r}})}),t.toFixed(1)},calcularKilosCrudos(e){if(!e.clientes)return"0.0";let t=0;return e.clientes.forEach(e=>{e.crudos&&Array.isArray(e.crudos)&&e.crudos.forEach(e=>{e&&e.items&&Array.isArray(e.items)&&e.items.forEach(e=>{let a=0;if(e.taras){const t=/^(\d+)-(\d+)$/.exec(e.taras);if(t){const e=parseInt(t[1])||0;let o=parseInt(t[2])||0;19===o&&(o=20),a+=e*o}else{const[t,o]=e.taras.split("-").map(Number);a+=(t||0)*(o||0)}}if(e.sobrante){const t=/^(\d+)-(\d+)$/.exec(e.sobrante);if(t){const e=parseInt(t[1])||0;let o=parseInt(t[2])||0;19===o&&(o=20),a+=e*o}else{const[t,o]=e.sobrante.split("-").map(Number);a+=(t||0)*(o||0)}}t+=a})})}),t.toFixed(1)},calcularTotalTaras(e){if(!e.clientes)return 0;let t=0;return e.clientes.forEach(e=>{e.productos&&e.productos.forEach(e=>{const a=Array.isArray(e.taras)?e.taras:[],o=Array.isArray(e.tarasExtra)?e.tarasExtra:[],r=[...a,...o];t+=r.reduce((e,t)=>e+(parseInt(t)||0),0)}),e.crudos&&e.crudos.forEach(e=>{e.items&&Array.isArray(e.items)&&e.items.forEach(e=>{if(e.taras){const[a]=e.taras.split("-");t+=parseInt(a)||0}if(e.sobrante){const[a]=e.sobrante.split("-");t+=parseInt(a)||0}})})}),t},formatearFecha(e){if(!e)return"Fecha no disponible";let t;if(e.toDate&&"function"===typeof e.toDate)t=e.toDate();else if(e instanceof Date)t=e;else{if("string"!==typeof e)return"Fecha inválida";t=new Date(e)}const a=new Date(t.getTime()+6e4*t.getTimezoneOffset());return a.toLocaleDateString("es-ES",{day:"2-digit",month:"2-digit",year:"numeric"})},editarEmbarque(e){this.$router.push({name:"NuevoEmbarque",params:{id:e}})},regresarAMenu(){this.$router.push({name:"EmbarquesMenu"})},async eliminarEmbarque(e){const t=this.embarques.find(t=>t.id===e);if(t&&t.embarqueBloqueado)alert("Este embarque está bloqueado y no puede ser eliminado.");else if(confirm("¿Estás seguro de que quieres eliminar este embarque?"))try{const t=Object(i["h"])();await Object(i["d"])(Object(i["e"])(t,"embarques",e)),alert("Embarque eliminado con éxito"),await this.cargarEmbarques()}catch(a){console.error("Error al eliminar el embarque:",a),alert("Hubo un error al eliminar el embarque. Por favor, intente de nuevo.")}}},async mounted(){await this.cargarEmbarques()}},n=s,c=(a("412e"),a("2877")),l=Object(c["a"])(n,o,r,!1,null,"72444796",null);t["a"]=l.exports},f458:function(e,t,a){"use strict";var o=function(){var e,t,a,o,r,i,s=this,n=s._self._c;return n("div",{staticClass:"nuevo-embarque-container"},[n("Sidebar",{attrs:{embarque:s.embarque,clientesPredefinidos:s.clientesPredefinidos,clientesPersonalizadosEmbarque:s.clientesPersonalizadosEmbarque,clienteCrudos:s.clienteCrudos,clienteActivo:s.clienteActivo},on:{"seleccionar-cliente":function(e){s.clienteActivo=e},"toggle-sidebar":function(e){s.sidebarCollapsed=e},"mostrar-modal-nuevo-cliente":function(e){s.mostrarModalNuevoCliente=!0}}}),n("div",{staticClass:"nuevo-embarque",class:{"sidebar-collapsed":s.sidebarCollapsed}},[n("header-embarque",{attrs:{"modo-edicion":s.modoEdicion,"embarque-bloqueado":s.embarqueBloqueado,embarque:s.embarque,"is-generating-pdf":s.isGeneratingPdf,"pdf-type":s.pdfType,"embarque-id":s.embarqueId},on:{volver:s.volverAEmbarquesMenu,"toggle-bloqueo":s.toggleBloqueo,"update:fecha":function(e){s.embarque.fecha=e},"update:cargaCon":function(e){s.embarque.cargaCon=e},"generar-taras":function(e){return s.generarPDF("taras")},"generar-resumen":function(e){s.mostrarEscalaResumen=!0},"verificar-fecha":s.verificarFechaExistente}}),s.mostrarEscalaResumen?n("div",{staticClass:"scale-control scale-control-resumen"},[n("label",[s._v("Escala del resumen PDF:")]),n("input",{directives:[{name:"model",rawName:"v-model",value:s.escalaResumen,expression:"escalaResumen"}],staticClass:"scale-slider",attrs:{type:"range",min:"30",max:"100",step:"1"},domProps:{value:s.escalaResumen},on:{__r:function(e){s.escalaResumen=e.target.value}}}),n("span",{staticClass:"scale-value"},[s._v(s._s(s.escalaResumen)+"%")]),n("button",{staticClass:"btn btn-primary",on:{click:s.generarPDFResumenConEscala}},[s._v("Generar PDF Resumen")]),n("button",{staticClass:"btn btn-secondary",on:{click:function(e){s.mostrarEscalaResumen=!1}}},[s._v("Cancelar")])]):s._e(),n("div",{staticClass:"botones-undo-redo"},[n("button",{staticClass:"btn btn-secondary btn-sm",attrs:{type:"button",disabled:s.undoStack.length<=1},on:{click:s.undo}},[s._v(" Deshacer ")]),n("button",{staticClass:"btn btn-secondary btn-sm",attrs:{type:"button",disabled:0===s.redoStack.length},on:{click:s.redo}},[s._v(" Rehacer ")])]),n("form",{on:{submit:function(e){return e.preventDefault(),s.guardarEmbarque.apply(null,arguments)},keydown:function(e){if(!e.type.indexOf("key")&&s._k(e.keyCode,"enter",13,e.key,"Enter"))return null;e.preventDefault()}}},s._l(s.productosPorCliente,(function(e,t){return n("ClienteProductos",{key:t,attrs:{"cliente-id":t,productos:e,crudos:s.clienteCrudos[t]||[],"clientes-juntar-medidas":s.clientesJuntarMedidas,"clientes-regla-otilio":s.clientesReglaOtilio,"nombre-cliente":s.obtenerNombreCliente(t),"cliente-activo":s.clienteActivo,"embarque-bloqueado":s.embarqueBloqueado,"medidas-usadas":s.medidasUsadas,"is-generating-pdf":s.isGeneratingPdf,"pdf-type":s.pdfType,"is-creating-account":s.isCreatingAccount},on:{"update:productos":function(e){return s.actualizarProductosCliente(t,e)},"update:crudos":function(e){return s.actualizarCrudosCliente(t,e)},"juntarMedidas-change":s.handleJuntarMedidasChange,"reglaOtilio-change":s.handleReglaOtilioChange,"eliminar-cliente":s.eliminarCliente,"eliminar-producto":s.eliminarProducto,"eliminar-crudo":s.eliminarCrudo,"eliminar-crudo-item":s.eliminarCrudoItem,"agregar-producto":s.agregarProducto,"agregar-crudo":s.agregarCrudo,"agregar-crudo-item":s.agregarCrudoItem,"toggle-sobrante":s.toggleSobrante,"mostrar-modal-precio":s.abrirModalPrecio,"mostrar-modal-hilos":s.abrirModalHilos,"mostrar-modal-nota":s.abrirModalNota,"mostrar-modal-nombre-alternativo":s.abrirModalNombreAlternativo,"mostrar-modal-alt":s.abrirModalAlt,"seleccionar-medida":s.seleccionarMedida,"generar-pdf":s.generarPDF,"crear-cuenta-joselito":s.crearCuentaJoselito,"crear-cuenta-catarro":s.crearCuentaCatarro,"crear-cuenta-ozuna":s.crearCuentaOzuna,"crear-cuenta-otilio":s.crearCuentaOtilio}})})),1)],1),n("NuevoClienteModal",{attrs:{mostrar:s.mostrarModalNuevoCliente},on:{cerrar:function(e){s.mostrarModalNuevoCliente=!1},agregar:s.agregarNuevoCliente}}),n("NombreAlternativoModal",{attrs:{mostrar:s.mostrarModalNombreAlternativo,"nombre-original":(null===(e=s.productoSeleccionado)||void 0===e?void 0:e.medida)||"","nombre-alternativo":(null===(t=s.productoSeleccionado)||void 0===t?void 0:t.nombreAlternativoPDF)||""},on:{cerrar:function(e){s.mostrarModalNombreAlternativo=!1},guardar:s.guardarNombreAlternativo}}),n("PrecioModal",{attrs:{mostrar:s.mostrarModalPrecio,precio:(null===(a=s.itemSeleccionado)||void 0===a?void 0:a.precio)||""},on:{cerrar:s.cerrarModalPrecio,guardar:s.guardarPrecio}}),n("HilosModal",{attrs:{mostrar:s.mostrarModalHilos,hilos:(null===(o=s.itemSeleccionado)||void 0===o?void 0:o.hilos)||""},on:{cerrar:s.cerrarModalHilos,guardar:s.guardarHilos}}),n("NotaModal",{attrs:{mostrar:s.mostrarModalNota,nota:(null===(r=s.itemSeleccionado)||void 0===r?void 0:r.nota)||""},on:{cerrar:s.cerrarModalNota,guardar:s.guardarNota}}),n("AltModal",{attrs:{mostrar:s.mostrarModalAlt,alt:(null===(i=s.itemSeleccionado)||void 0===i?void 0:i.textoAlternativo)||""},on:{cerrar:s.cerrarModalAlt,guardar:s.guardarAlt}})],1)},r=[],i=(a("14d9"),a("13d5"),a("88e6"),a("70cc"),a("eb03"),a("22e5c"),a("c01e"),a("fa76"),a("8306"),a("1494")),s=(a("2ef0"),a("7c01")),n=a("dc59"),c=a("f549"),l=a("2b0e"),d=a("5ea5"),u=a("fdb2"),m=a("e7ae"),h=a("ad72"),b=a("b9b6"),g=a("ec26"),p=a("e7e0"),f=a("eb99"),C=a("57d4"),q=a("6123"),v=a("c005"),E=a("6d00"),S=a("c0b0"),I=a("fa40");const O=Object(l["defineAsyncComponent"])(()=>Promise.resolve().then(a.bind(null,"4dc0")));var y={mixins:[m["a"],h["a"]],name:"NuevoEmbarque",components:{Rendimientos:O,Sidebar:d["a"],HeaderEmbarque:u["a"],ClienteProductos:b["a"],NuevoClienteModal:f["a"],NombreAlternativoModal:C["a"],PrecioModal:q["a"],HilosModal:v["a"],NotaModal:E["a"],AltModal:S["a"]},setup(){const e=Object(c["a"])();return{authStore:e}},data(){return{usuariosActivos:[],clientesJuntarMedidas:{},clientesReglaOtilio:{},clientesPredefinidos:p["a"],clientesPersonalizados:[],ultimoIdPersonalizado:0,embarque:{fecha:null,cargaCon:"",productos:[],crudos:[]},nuevoClienteId:"",undoStack:[],redoStack:[],isUndoRedo:!1,cambios:[],producto:{reporteTaras:[],reporteBolsas:[]},embarqueId:null,modoEdicion:!1,guardadoAutomaticoActivo:!1,clienteCrudos:{},unsubscribe:null,medidasSugeridas:[],medidasUsadas:[],mostrarSugerencias:!1,sugerenciasMedidas:[],mostrarModalNuevoCliente:!1,nuevoClienteNombre:"",nuevoClienteColor:"#007bff",mostrarModalNombreAlternativo:!1,nombreAlternativoTemp:"",productoSeleccionado:null,mostrarModalPrecio:!1,precioTemp:"",itemSeleccionado:null,mostrarModalHilos:!1,hilosTemp:"",mostrarModalNota:!1,notaTemp:"",mostrarModalAlt:!1,altTemp:"",clientesOffsets:{},embarqueBloqueado:!1,clienteActivo:null,sidebarCollapsed:!1,isGeneratingPdf:!1,pdfType:null,isCreatingAccount:!1,_creandoEmbarque:!1,_guardandoEmbarque:!1,mostrarEscalaResumen:!1,escalaResumen:100,_guardandoInicial:!1}},computed:{clientesDisponibles(){const e=new Set,t=this.clientesPredefinidos.filter(t=>!e.has(t.nombre)&&(e.add(t.nombre),!0)),a=this.clientesPersonalizados.filter(t=>!e.has(t.nombre)&&(e.add(t.nombre),!0));return[...t,...a,{id:"otro",nombre:"Otro",key:"otro"}]},productosPorCliente(){console.log("Calculando productosPorCliente. Contenido de embarque.productos:",this.embarque.productos);const e={};return this.embarque.productos.forEach(t=>{const a=t.clienteId;e[a]||(e[a]=[]),e[a].push(t),t.isEditing||e[a].sort((e,t)=>e.medida&&e.tipo&&t.medida&&t.tipo?this.compararMedidas(t.medida,e.medida):e.medida&&e.tipo?t.medida&&t.tipo?0:-1:1)}),e},clientesPersonalizadosEmbarque(){const e=new Set(this.embarque.productos.map(e=>e.clienteId.toString()));return this.clientesPersonalizados.filter(t=>e.has(t.id.toString()))},totalKilosCrudoActivo(){return this.clienteActivo&&this.clienteCrudos[this.clienteActivo]?this.clienteCrudos[this.clienteActivo].reduce((e,t)=>e+(parseFloat(t.kilos)||0),0):0},totalTarasCrudoActivo(){return this.clienteActivo&&this.clienteCrudos[this.clienteActivo]?this.clienteCrudos[this.clienteActivo].reduce((e,t)=>{if(!t||!t.items||!Array.isArray(t.items))return e;const a=t.items.reduce((e,t)=>{let a=0;if(t.taras){const[e]=t.taras.split("-");a+=parseInt(e)||0}if(t.sobrante){const[e]=t.sobrante.split("-");a+=parseInt(e)||0}return e+a},0);return e+a},0):0},resumenKilosProductos(){const e={};return this.embarque.productos.forEach(t=>{e[t.clienteId]||(e[t.clienteId]={kilos:0,taras:0}),e[t.clienteId].kilos+=this.calcularKilos(t),e[t.clienteId].taras+=this.calcularTotalTaras(t)}),e},resumenKilosCrudos(){const e={};for(const t in this.clienteCrudos)e[t]||(e[t]={kilos:0,taras:0}),this.clienteCrudos[t].forEach(a=>{e[t].kilos+=parseFloat(a.kilos)||0;const o=a.items.reduce((e,t)=>{let a=0;if(t.taras){const[e]=t.taras.split("-");a+=parseInt(e)||0}if(t.sobrante){const[e]=t.sobrante.split("-");a+=parseInt(e)||0}return e+a},0);e[t].taras+=o});return e}},methods:{async triggerGuardadoInicial(){console.log("[LOG] Se activó triggerGuardadoInicial."),this.embarqueId?console.log(`[LOG] El embarque ya tiene ID (${this.embarqueId}), no se procede con el guardado inicial.`):this.embarque.fecha&&this.embarque.cargaCon?(console.log("[LOG] Fecha y CargaCon listos, iniciando guardado inicial..."),await this.guardarEmbarqueInicial()):console.log(`[LOG] Faltan datos para guardado inicial. Fecha: ${this.embarque.fecha}, Carga con: ${this.embarque.cargaCon}`)},seleccionarMedida(e){this.productoSeleccionado&&(this.productoSeleccionado.medida=e,this.mostrarSugerencias=!1,this.productoSeleccionado.isEditing=!0,this.$nextTick(()=>{setTimeout(()=>{this.productoSeleccionado.isEditing=!1},100)}))},actualizarProductosCliente(e,t){this.embarque.productos=this.embarque.productos.filter(t=>t.clienteId!==e),this.embarque.productos=[...this.embarque.productos,...t],this.guardadoAutomaticoActivo&&this.embarqueId&&this.guardarCambiosEnTiempoReal()},actualizarCrudosCliente(e,t){this.$set(this.clienteCrudos,e,t),this.guardadoAutomaticoActivo&&this.embarqueId&&this.guardarCambiosEnTiempoReal()},agregarProducto(e){const t=this.embarque.productos.some(t=>t.clienteId===e&&(t.isNew||t.isEditing)&&!t.medida);if(t)return console.warn(`Ya existe un producto nuevo vacío para el cliente ${this.obtenerNombreCliente(e)}. No se agregará otro.`),void this.$nextTick(()=>{const t=document.querySelectorAll(".medida-input"),a=Array.from(t).find(t=>{var a;const o=t.closest(".producto");if(!o)return!1;const r=null===(a=o.dataset)||void 0===a?void 0:a.productoId,i=this.embarque.productos.find(e=>String(e.id)===r);return i&&i.clienteId===e&&!i.medida});a&&a.focus()});const a=Object(p["c"])(e);this.setTipoDefaultParaCliente(a),a.nombreCliente=this.obtenerNombreCliente(e),this.embarque.productos.push(a),!this.guardadoAutomaticoActivo&&this.embarqueId&&(this.guardadoAutomaticoActivo=!0),this.embarqueId&&this.guardarCambiosEnTiempoReal(),this.actualizarMedidasUsadas(),this.$nextTick(()=>{const e=document.querySelectorAll(".medida-input"),t=Array.from(e).find(e=>{var t;const o=null===(t=e.closest(".producto"))||void 0===t||null===(t=t.dataset)||void 0===t?void 0:t.productoId;return o===String(a.id)});t&&t.focus()})},eliminarProducto(e){console.log(`Intentando eliminar producto con ID: ${e.id}, Medida: ${e.medida}, Cliente: ${this.obtenerNombreCliente(e.clienteId)}`);const t=this.embarque.productos.findIndex(t=>t.id===e.id);if(t>-1)console.log(`Encontrado en índice ${t}. Producto en this.embarque.productos[${t}]:`,JSON.stringify(this.embarque.productos[t])),this.embarque.productos[t].medida===e.medida&&this.embarque.productos[t].clienteId===e.clienteId?console.log("Confirmado: El producto encontrado coincide con el producto a eliminar."):console.warn("Advertencia: El producto encontrado por ID tiene medida o clienteId diferente al esperado.","Esperado:",e,"Encontrado:",this.embarque.productos[t]),this.embarque.productos.splice(t,1),console.log(`Producto con ID ${e.id} eliminado del array embarque.productos.`),this.embarqueId&&this.guardarCambiosEnTiempoReal(),this.actualizarMedidasUsadas();else{console.warn("Intento de eliminar un producto NO ENCONTRADO en this.embarque.productos por ID:",e);const t=this.embarque.productos.filter(t=>t.clienteId===e.clienteId&&t.medida===e.medida);t.length>0&&console.warn(`Se encontraron ${t.length} productos con la misma medida y cliente, pero diferente ID.`)}},async agregarClienteProducto(){const e=this.mostrarModalPrecio||this.mostrarModalHilos||this.mostrarModalNota||this.mostrarModalAlt||this.mostrarModalNombreAlternativo||this.mostrarModalNuevoCliente;if(!e)if(this.embarque.fecha){if("otro"===this.nuevoClienteId){const e=prompt("Ingrese el nombre del nuevo cliente:");if(e&&""!==e.trim()){this.ultimoIdPersonalizado++;const t="personalizado_"+this.ultimoIdPersonalizado,a={id:t,nombre:e.trim(),editable:!0,personalizado:!0};this.clientesPersonalizados.push(a),await this.guardarEmbarqueInicial(t)}}else this.nuevoClienteId&&await this.guardarEmbarqueInicial(this.nuevoClienteId);this.nuevoClienteId=""}else alert("Por favor, seleccione una fecha para el embarque.")},async guardarEmbarqueInicial(e){const t=this.mostrarModalPrecio||this.mostrarModalHilos||this.mostrarModalNota||this.mostrarModalAlt||this.mostrarModalNombreAlternativo||this.mostrarModalNuevoCliente;if(t)return null;if(!this.embarqueId&&this._guardandoInicial)return console.warn("Guardado inicial automático aún en progreso. Esperando para agregar cliente/producto."),null;if(this._creandoEmbarque)return console.warn("Ya hay una operación de creación de embarque en curso"),null;this._creandoEmbarque=!0,console.log("[LOG] Iniciando guardarEmbarqueInicial. Estado de _creandoEmbarque:",this._creandoEmbarque);try{if(this.embarqueId)return console.log(`[LOG] Ya existe un embarqueId (${this.embarqueId}), no se crea uno nuevo. Se procederá a agregar el cliente.`),this.agregarProducto(e),this.clienteActivo=e,this._creandoEmbarque=!1,this.embarqueId;{console.log("[LOG] No hay embarqueId, se procede a crear un nuevo documento en Firestore.");const t=Object(i["h"])();try{const o=new Date(this.embarque.fecha),r=o.toISOString().split("T")[0],s=Object(i["c"])(t,"embarques"),n=await Object(i["g"])(s),c=n.docs.filter(e=>{const t=e.data();let a;if(t.fecha&&"function"===typeof t.fecha.toDate)a=t.fecha.toDate();else if(t.fecha instanceof Date)a=t.fecha;else{if("string"!==typeof t.fecha)return!1;a=new Date(t.fecha)}const o=a.toISOString().split("T")[0];return o===r&&e.id!==this.embarqueId});if(c.length>0)return alert("Ya existe un embarque para la fecha seleccionada. Por favor, seleccione otra fecha."),this._creandoEmbarque=!1,console.log("[LOG] Creación cancelada: Ya existe un embarque en la fecha seleccionada."),null;const l=Object(i["e"])(t,"reservas_fechas",r);await Object(i["q"])(l,{fecha:r,timestamp:Object(i["p"])(),usuario:this.authStore.userId||"anónimo","expiración":new Date(Date.now()+6e4)});const d=this.prepararDatosEmbarque();console.log("[LOG] Datos preparados para el nuevo embarque:",JSON.parse(JSON.stringify(d)));const u=await Object(i["b"])(Object(i["c"])(t,"embarques"),d);try{await Object(i["d"])(l)}catch(a){console.error("Error al eliminar la reserva de fecha:",a)}return this.embarqueId=u.id,console.log("[LOG] Embarque creado con éxito. Nuevo ID: "+this.embarqueId),this.modoEdicion=!0,this.guardadoAutomaticoActivo=!0,this.agregarProducto(e),this.clienteActivo=e,this._creandoEmbarque=!1,console.log("[LOG] Proceso guardarEmbarqueInicial finalizado. Estado de _creandoEmbarque:",this._creandoEmbarque),this.embarqueId}catch(a){return this._creandoEmbarque=!1,console.error("[LOG] Error catastrófico dentro de guardarEmbarqueInicial:",a),alert("Hubo un error muy grave al intentar crear el embarque. Revise la consola."),null}}}catch(o){return this._creandoEmbarque=!1,console.error("[LOG] Error al crear el embarque:",o),alert("Hubo un error al crear el embarque. Por favor, intente de nuevo."),null}},eliminarCliente(e){this.embarque.productos=this.embarque.productos.filter(t=>t.clienteId!==e),this.$forceUpdate(),this.cambios.push(`Cliente ${this.obtenerNombreCliente(e)} eliminado`)},obtenerNombreCliente(e){const t=this.clientesDisponibles.find(t=>t.id.toString()===e.toString());if(t)return t.nombre;const a=this.embarque.productos.find(t=>t.clienteId.toString()===e.toString());return a?a.nombreCliente:"Cliente Desconocido"},editarNombreCliente(e){const t=this.clientesDisponibles.find(t=>t.id===e);if(t&&t.editable){const a=prompt("Ingrese el nuevo nombre del cliente:",t.nombre);null!==a&&""!==a.trim()&&(t.nombre=a.trim(),this.embarque.productos.forEach(t=>{t.clienteId===e&&(t.nombreCliente=a.trim())}))}},async cargarEmbarque(e){if("nuevo"===e)return console.log("[LOG] Limpiando ultimoEmbarqueId de localStorage para un nuevo embarque."),localStorage.removeItem("ultimoEmbarqueId"),void this.resetearEmbarque();const t=Object(i["h"])(),a=Object(i["e"])(t,"embarques",e);this.unsubscribe=Object(i["k"])(a,t=>{if(t.exists()){const a=t.data();let o;this.embarqueBloqueado=a.embarqueBloqueado||!1,a.clientesJuntarMedidas?this.clientesJuntarMedidas=a.clientesJuntarMedidas:(this.clientesJuntarMedidas={},a.clientes.forEach(e=>{this.$set(this.clientesJuntarMedidas,e.id,!1)})),a.clientesReglaOtilio?this.clientesReglaOtilio=a.clientesReglaOtilio:(this.clientesReglaOtilio={},a.clientes.forEach(e=>{const t=e.nombre&&e.nombre.toLowerCase().includes("otilio");this.$set(this.clientesReglaOtilio,e.id,t)})),a.fecha&&"function"===typeof a.fecha.toDate?o=a.fecha.toDate():a.fecha instanceof Date?o=a.fecha:"string"===typeof a.fecha?o=new Date(a.fecha):(console.warn("Formato de fecha no reconocido, usando la fecha actual"),o=new Date);const r=new Map(this.clientesPredefinidos.map(e=>[e.id.toString(),e]));this.clientesPersonalizados=a.clientes.filter(e=>!r.has(e.id.toString())).map(e=>({id:e.id,nombre:e.nombre,editable:!0,personalizado:!0,key:"personalizado_"+e.id})),this.embarque={fecha:o.toISOString().split("T")[0],cargaCon:a.cargaCon||"",productos:a.clientes.flatMap(e=>{const t=r.get(e.id.toString())||e;return e.productos.map(a=>({...a,clienteId:e.id,nombreCliente:t.nombre,restarTaras:a.restarTaras||!1}))}),kilosCrudos:a.kilosCrudos||{}};const i=a.clientes.map(e=>e.id.toString());i.forEach(e=>{const t=this.embarque.productos.some(t=>t.clienteId.toString()===e);if(!t){const t=Object(p["c"])(e),o=r.get(e)||a.clientes.find(t=>t.id.toString()===e);t.nombreCliente=o?o.nombre:"Cliente Desconocido",this.setTipoDefaultParaCliente(t),this.embarque.productos.push(t),console.log(`Se ha creado un producto para el cliente ${t.nombreCliente} que no tenía ninguno.`)}}),this.clienteCrudos={},a.clientes.forEach(e=>{e.crudos&&e.crudos.length>0?this.$set(this.clienteCrudos,e.id,e.crudos):this.$set(this.clienteCrudos,e.id,[])}),this.embarqueId=e,this.modoEdicion=!0,this.guardadoAutomaticoActivo=!0}else localStorage.removeItem("embarque"),localStorage.removeItem("ultimoEmbarqueId"),localStorage.removeItem("ultimaRuta"),alert("El embarque no existe o está corrupto. Se reiniciará el formulario para evitar errores."),this.resetearEmbarque()},e=>{console.error("Error al escuchar cambios del embarque:",e)})},async resetearEmbarque(){const e=this.mostrarModalPrecio||this.mostrarModalHilos||this.mostrarModalNota||this.mostrarModalAlt||this.mostrarModalNombreAlternativo||this.mostrarModalNuevoCliente;if(e)return void console.log("[LOG] resetearEmbarque detenido, hay un modal abierto.");console.log("[LOG] Iniciando reseteo de embarque.");const t=(new Date).toISOString().split("T")[0];try{const e=Object(i["h"])(),a=Object(i["c"])(e,"embarques"),o=await Object(i["g"])(a),r={};o.docs.forEach(e=>{const t=e.data();let a;if(t.fecha&&"function"===typeof t.fecha.toDate)a=t.fecha.toDate();else if(t.fecha instanceof Date)a=t.fecha;else{if("string"!==typeof t.fecha)return;a=new Date(t.fecha)}const o=a.toISOString().split("T")[0];r[o]||(r[o]=[]),r[o].push({id:e.id,fecha:o,data:e.data()})});const s=r[t]||[];let n=t;if(console.log("[LOG] Fecha actual para nuevo embarque: "+n),s.length>0){let e=new Date(t),a=!1;for(let t=1;t<=7&&!a;t++){e.setDate(e.getDate()+1);const t=e.toISOString().split("T")[0];r[t]&&0!==r[t].length||(a=!0,n=t,console.log("[LOG] Fecha actual ocupada. Nueva fecha encontrada: "+n))}if(!a)return console.warn("[LOG] No se encontró una fecha disponible en los próximos 7 días"),this.embarque={fecha:t,cargaCon:"",productos:[]},this.clientesJuntarMedidas={},this.clientesReglaOtilio={},this.embarqueId=null,this.modoEdicion=!1,this.guardadoAutomaticoActivo=!1,this.embarqueBloqueado=!1,this.clientesPersonalizados=[],console.log("[LOG] No se creará embarque automáticamente por falta de fecha disponible."),void(esRecargaPagina||alert("Ya existe un embarque para hoy y los próximos días. Por favor, seleccione manually una fecha diferente."))}this.embarque={fecha:n,cargaCon:"",productos:[],crudos:[]},this.clienteCrudos={},this.clientesJuntarMedidas={},this.clientesReglaOtilio={},this.embarqueId=null,this.modoEdicion=!1,this.guardadoAutomaticoActivo=!1,this.embarqueBloqueado=!1,this.clientesPersonalizados=[];const c=this.clientesPredefinidos.map(e=>{const t=Object(p["c"])(e.id.toString());return t.nombreCliente=e.nombre,this.setTipoDefaultParaCliente(t),t});this.clienteCrudos={},this.embarque.productos=c,this.clientesPredefinidos.forEach(e=>{const t=e.nombre&&e.nombre.toLowerCase().includes("otilio");this.$set(this.clientesReglaOtilio,e.id.toString(),t)}),this.clientesPredefinidos.length>0&&(this.clienteActivo=this.clientesPredefinidos[0].id.toString()),this.embarque.fecha&&(this._guardandoInicial=!0,console.log("[LOG] Estado local reseteado. Se intentará un guardado inicial en segundo plano."),this.$nextTick(async()=>{try{console.log("[LOG] Verificando fecha antes del guardado automático inicial...");const t=Object(i["c"])(e,"embarques"),a=await Object(i["g"])(t),o=a.docs.some(e=>{const t=e.data();let a;if(t.fecha&&"function"===typeof t.fecha.toDate)a=t.fecha.toDate();else if(t.fecha instanceof Date)a=t.fecha;else{if("string"!==typeof t.fecha)return!1;a=new Date(t.fecha)}const o=a.toISOString().split("T")[0];return o===this.embarque.fecha});if(o)return console.warn("[LOG] Se detectó un embarque con la misma fecha durante la inicialización, no se guardará automáticamente."),void(this._guardandoInicial=!1);console.log("[LOG] Fecha disponible. Procediendo con el guardado automático inicial.");const r=this.prepararDatosEmbarque(),s=await Object(i["b"])(Object(i["c"])(e,"embarques"),r);this.embarqueId=s.id,this.modoEdicion=!0,this.guardadoAutomaticoActivo=!0,localStorage.setItem("ultimoEmbarqueId",this.embarqueId),console.log("[LOG] Guardado inicial automático exitoso. ID: "+this.embarqueId)}catch(t){console.error("Error en el guardado inicial automático:",t)}finally{this._guardandoInicial=!1,console.log("[LOG] Bandera _guardandoInicial reseteada a false.")}}))}catch(a){console.error("Error al resetear el embarque:",a),this.embarque={fecha:t,cargaCon:"",productos:[]},this.clientesJuntarMedidas={},this.clientesReglaOtilio={},this.clientesPredefinidos.forEach(e=>{const t=e.nombre&&e.nombre.toLowerCase().includes("otilio");this.$set(this.clientesReglaOtilio,e.id.toString(),t)}),this.embarqueId=null,this.modoEdicion=!1,this.guardadoAutomaticoActivo=!1,this.embarqueBloqueado=!1,this.clientesPersonalizados=[]}},async guardarCambiosEnTiempoReal(){if(!this.guardadoAutomaticoActivo||!this.embarqueId||this.mostrarModalPrecio||this.mostrarModalHilos||this.mostrarModalNota||this.mostrarModalAlt||this.mostrarModalNombreAlternativo||this.mostrarModalNuevoCliente)return;const e={...JSON.parse(JSON.stringify(this.prepararDatosEmbarque())),clientesJuntarMedidas:{...this.clientesJuntarMedidas},clientesReglaOtilio:{...this.clientesReglaOtilio}},t=Object(i["h"])();Object(i["r"])(Object(i["e"])(t,"embarques",this.embarqueId),e).then(()=>{console.log("Cambios guardados automáticamente:",(new Date).toLocaleString()),this.$emit("guardado-automatico")}).catch(e=>{console.error("Error al guardar automáticamente:",e)})},async guardarEmbarque(){if(!this.embarque.fecha)return void alert("Por favor, seleccione una fecha para el embarque.");const e=this.mostrarModalPrecio||this.mostrarModalHilos||this.mostrarModalNota||this.mostrarModalAlt||this.mostrarModalNombreAlternativo||this.mostrarModalNuevoCliente;if(e)return;if(this._guardandoEmbarque)return void console.warn("Ya hay una operación de guardado en curso");this._guardandoEmbarque=!0;const t=this.prepararDatosEmbarque(),a=Object(i["h"])();try{if(this.modoEdicion)await Object(i["r"])(Object(i["e"])(a,"embarques",this.embarqueId),t),alert("Embarque actualizado exitosamente."),this._guardandoEmbarque=!1;else{const e=new Date(this.embarque.fecha),r=e.toISOString().split("T")[0],c=Object(i["c"])(a,"embarques"),l=await Object(i["g"])(c),d=l.docs.filter(e=>{const t=e.data();let a;if(t.fecha&&"function"===typeof t.fecha.toDate)a=t.fecha.toDate();else if(t.fecha instanceof Date)a=t.fecha;else{if("string"!==typeof t.fecha)return!1;a=new Date(t.fecha)}const o=a.toISOString().split("T")[0];return o===r});if(d.length>0)return alert("Ya existe un embarque para la fecha seleccionada. Por favor, seleccione otra fecha."),void(this._guardandoEmbarque=!1);const u=Object(i["e"])(a,"reservas_fechas",r);await Object(i["q"])(u,{fecha:r,timestamp:Object(i["p"])(),usuario:this.authStore.userId||"anónimo","expiración":new Date(Date.now()+6e4)});try{const e=await Object(i["b"])(Object(i["c"])(a,"embarques"),{...t,ultimaEdicion:{userId:this.authStore.userId,username:this.authStore.user.username,timestamp:Object(i["p"])()}}),r=Object(s["d"])(n["c"],"cambios/"+e.id);await Object(s["e"])(r,{tipo:"guardar",userId:this.authStore.userId,username:this.authStore.user.username,timestamp:Object(i["p"])()}),this.embarqueId=e.id,alert("Embarque creado exitosamente y guardado en la base de datos."),this.modoEdicion=!0}finally{try{await Object(i["d"])(u)}catch(o){console.error("Error al eliminar la reserva de fecha:",o)}this._guardandoEmbarque=!1}}this.guardadoAutomaticoActivo=!0,this.$router.push("/lista-embarques")}catch(o){this._guardandoEmbarque=!1,console.error("Error al guardar el embarque: ",o),alert("Hubo un error al guardar el embarque. Por favor, intente nuevamente.")}},prepararDatosEmbarque(){console.log("Preparando datos del embarque:",this.embarque);const e={fecha:new Date(this.embarque.fecha),cargaCon:this.embarque.cargaCon,clientes:[],clientesJuntarMedidas:this.clientesJuntarMedidas,clientesReglaOtilio:this.clientesReglaOtilio,embarqueBloqueado:this.embarqueBloqueado},t=new Map(this.clientesPredefinidos.map(e=>[e.id.toString(),e]));if(0===Object.keys(this.productosPorCliente).length&&this.clientesPredefinidos.length>0){const e=this.clientesPredefinidos[0].id.toString(),t=this.clientesPredefinidos[0],a=Object(p["c"])(e);a.nombreCliente=t.nombre,this.embarque.productos.push(a),this.clienteActivo=e,this.$forceUpdate()}const a=this.clientesDisponibles.filter(e=>"otro"!==e.id).map(e=>e.id.toString());return a.forEach(e=>{const a=this.embarque.productos.some(t=>t.clienteId.toString()===e);if(!a){const a=t.get(e)||this.clientesDisponibles.find(t=>t.id.toString()===e);if(a){const t=Object(p["c"])(e);t.nombreCliente=a.nombre,this.setTipoDefaultParaCliente(t),this.embarque.productos.push(t),console.log(`Se ha creado un producto para el cliente ${t.nombreCliente} que no tenía ninguno.`)}}}),Object.entries(this.productosPorCliente).forEach(([a,o])=>{const r=t.get(a);let i=this.clienteCrudos[a]||[];const s={id:a,nombre:r?r.nombre:this.obtenerNombreCliente(a),productos:o.map(e=>({...e,restarTaras:e.restarTaras||!1,noSumarKilos:e.noSumarKilos||!1})),crudos:i};e.clientes.push(s)}),console.log("Datos del embarque preparados:",e),e},setTipoDefaultParaCliente(e){const t=this.obtenerNombreCliente(e.clienteId);"Catarro"===t&&(e.tipo="s/h20")},undo(){if(this.undoStack.length>1){const e=this.undoStack.pop();this.redoStack.push(e);const t=this.undoStack[this.undoStack.length-1];this.isUndoRedo=!0,this.embarque=JSON.parse(t),console.log("Undo realizado. Estado actual restaurado."),this.guardarCambiosEnTiempoReal()}else console.log("No hay más acciones para deshacer.")},redo(){if(this.redoStack.length>0){const e=this.redoStack.pop();this.undoStack.push(e),this.isUndoRedo=!0,this.embarque=JSON.parse(e),console.log("Redo realizado. Estado actual restaurado."),this.guardarCambiosEnTiempoReal()}else console.log("No hay más acciones para rehacer.")},actualizarProducto(e){const t=this.embarque.productos.findIndex(t=>t.id===e.id);-1!==t&&(Object.keys(e).forEach(a=>{"id"!==a&&"clienteId"!==a&&this.$set(this.embarque.productos[t],a,e[a])}),this.$forceUpdate())},onTipoChange(e){"otro"!==e.tipo&&(e.tipoPersonalizado=""),"c/h20"!==e.tipo||e.camaronNeto||(e.camaronNeto=.65),e.isEditing=!0,this.$nextTick(()=>{setTimeout(()=>{e.medida&&e.tipo&&(e.isEditing=!1)},100)})},agregarCrudo(e){this.clienteCrudos[e]||this.$set(this.clienteCrudos,e,[]),this.clienteCrudos[e].push({items:[Object(p["b"])()]}),this.guardarCambiosEnTiempoReal()},agregarCrudoItem(e,t){this.clienteCrudos[e]||this.$set(this.clienteCrudos,e,[]),this.clienteCrudos[e][t]||this.$set(this.clienteCrudos[e],t,{items:[]}),Array.isArray(this.clienteCrudos[e][t].items)||this.$set(this.clienteCrudos[e][t],"items",[]),this.clienteCrudos[e][t].items.push(Object(p["b"])()),this.guardarCambiosEnTiempoReal()},eliminarCrudoItem(e,t,a){this.clienteCrudos[e]?this.clienteCrudos[e][t]?this.clienteCrudos[e][t].items?(this.clienteCrudos[e][t].items.splice(a,1),0===this.clienteCrudos[e][t].items.length&&this.eliminarCrudo(e,t),this.guardarCambiosEnTiempoReal()):console.error("El objeto crudo no tiene propiedad items"):console.error("Índice de crudo no válido:",t):console.error("Cliente no encontrado:",e)},eliminarCrudo(e,t){this.clienteCrudos[t]?(this.clienteCrudos[t].splice(e,1),0===this.clienteCrudos[t].length&&this.$delete(this.clienteCrudos,t),this.guardarCambiosEnTiempoReal()):console.error("Cliente no encontrado:",t)},toggleSobrante(e,t,a){if(!this.clienteCrudos[e])return void console.error("Cliente no encontrado:",e);if(!this.clienteCrudos[e][t])return void console.error("Índice de crudo no válido:",t);if(!this.clienteCrudos[e][t].items)return this.$set(this.clienteCrudos[e][t],"items",[]),void console.error("El objeto crudo no tiene propiedad items");if(!this.clienteCrudos[e][t].items[a])return void console.error("Índice de item no válido:",a);const o=this.clienteCrudos[e][t].items[a];o.hasOwnProperty("mostrarSobrante")?o.mostrarSobrante=!o.mostrarSobrante:this.$set(o,"mostrarSobrante",!0),this.guardarCambiosEnTiempoReal()},actualizarTotalCrudos(e,t){this.$forceUpdate(),this.guardarCambiosEnTiempoReal()},actualizarCrudos(){this.guardarCambiosEnTiempoReal()},onRestarTarasChange(e){console.log("Restar taras cambiado:",e.restarTaras),this.$nextTick(()=>{this.actualizarProducto(e)})},handleJuntarMedidasChange(e,t){this.$set(this.clientesJuntarMedidas,e,t),this.modoEdicion&&this.embarqueId&&this.guardarCambiosEnTiempoReal()},handleReglaOtilioChange(e,t){this.$set(this.clientesReglaOtilio,e,t),this.modoEdicion&&this.embarqueId&&this.guardarCambiosEnTiempoReal()},agregarNuevoCliente(e){if(!e||!e.nombre)return;const t={id:Date.now().toString(),nombre:e.nombre,color:e.color||this.nuevoClienteColor,editable:!0,personalizado:!0,key:"personalizado_"+Date.now()};this.clientesPersonalizados.push(t);const a=Object(p["c"])(t.id);this.embarque.productos.push(a),this.clienteCrudos[t.id]||this.$set(this.clienteCrudos,t.id,[]);const o=t.nombre&&t.nombre.toLowerCase().includes("otilio");this.$set(this.clientesReglaOtilio,t.id,o),this.guardarClientesPersonalizados(),this.guardarCambiosEnTiempoReal(),this.mostrarModalNuevoCliente=!1,this.seleccionarCliente(t.id)},abrirModalNombreAlternativo(e){this.productoSeleccionado=e,this.mostrarModalNombreAlternativo=!0},guardarNombreAlternativo(e){if(this.productoSeleccionado){const t=this.guardadoAutomaticoActivo;this.guardadoAutomaticoActivo=!1,e?this.$set(this.productoSeleccionado,"nombreAlternativoPDF",e):this.$delete(this.productoSeleccionado,"nombreAlternativoPDF");const a=this.embarque.productos.findIndex(e=>e.id===this.productoSeleccionado.id);-1!==a&&(e?this.$set(this.embarque.productos[a],"nombreAlternativoPDF",e):this.$delete(this.embarque.productos[a],"nombreAlternativoPDF"),this.$forceUpdate()),this.$nextTick(()=>{this.guardadoAutomaticoActivo=t,this.guardarCambiosEnTiempoReal(),this.mostrarModalNombreAlternativo=!1})}else this.mostrarModalNombreAlternativo=!1},abrirModalPrecio(e){this.itemSeleccionado=e,this.mostrarModalPrecio=!0},cerrarModalPrecio(){this.mostrarModalPrecio=!1,this.itemSeleccionado=null},guardarPrecio(e){if(this.itemSeleccionado){null!==e?this.$set(this.itemSeleccionado,"precio",e):this.$delete(this.itemSeleccionado,"precio");const t=this.guardadoAutomaticoActivo;this.guardadoAutomaticoActivo=!1,this.$nextTick(()=>{this.guardadoAutomaticoActivo=t,this.guardarCambiosEnTiempoReal()})}this.cerrarModalPrecio()},abrirModalHilos(e){this.itemSeleccionado=e,this.mostrarModalHilos=!0},cerrarModalHilos(){this.mostrarModalHilos=!1,this.itemSeleccionado=null},guardarHilos(e){if(this.itemSeleccionado){e?this.$set(this.itemSeleccionado,"hilos",e):this.$delete(this.itemSeleccionado,"hilos");const t=this.guardadoAutomaticoActivo;this.guardadoAutomaticoActivo=!1,this.$nextTick(()=>{this.guardadoAutomaticoActivo=t,this.guardarCambiosEnTiempoReal()})}this.cerrarModalHilos()},abrirModalNota(e){this.itemSeleccionado=e,this.mostrarModalNota=!0},cerrarModalNota(){this.mostrarModalNota=!1,this.itemSeleccionado=null},guardarNota(e){if(this.itemSeleccionado){e?this.$set(this.itemSeleccionado,"nota",e):this.$delete(this.itemSeleccionado,"nota");const t=this.guardadoAutomaticoActivo;this.guardadoAutomaticoActivo=!1,this.$nextTick(()=>{this.guardadoAutomaticoActivo=t,this.guardarCambiosEnTiempoReal()})}this.cerrarModalNota()},abrirModalAlt(e){this.itemSeleccionado=e,this.mostrarModalAlt=!0},cerrarModalAlt(){this.mostrarModalAlt=!1,this.itemSeleccionado=null},guardarAlt(e){this.itemSeleccionado&&(e?this.$set(this.itemSeleccionado,"textoAlternativo",e):this.$delete(this.itemSeleccionado,"textoAlternativo"),this.guardarCambiosEnTiempoReal()),this.cerrarModalAlt()},seleccionarCliente(e){const t=this.mostrarModalPrecio||this.mostrarModalHilos||this.mostrarModalNota||this.mostrarModalAlt||this.mostrarModalNombreAlternativo||this.mostrarModalNuevoCliente;if(t)return;if(!this.embarque.fecha)return void alert("Por favor, seleccione una fecha para el embarque.");const a=this.embarque.productos.some(t=>t.clienteId.toString()===e.toString());a?this.clienteActivo=e:this.guardarEmbarqueInicial(e).then(()=>{this.clienteActivo=e})},scrollToCliente(e){this.$nextTick(()=>{const t=document.querySelector(`.cliente-header[data-cliente="${this.obtenerNombreCliente(e)}"]`);t&&(document.querySelectorAll(".cliente-header").forEach(e=>{e.classList.remove("cliente-seleccionado")}),t.classList.add("cliente-seleccionado"),t.scrollIntoView({behavior:"smooth",block:"start"}),setTimeout(()=>{t.classList.remove("cliente-seleccionado")},2e3))})},toggleSidebar(){this.sidebarCollapsed=!this.sidebarCollapsed},toggleBloqueo(){if(this.embarqueBloqueado=!this.embarqueBloqueado,this.modoEdicion&&this.embarqueId){const e=Object(i["h"])();Object(i["r"])(Object(i["e"])(e,"embarques",this.embarqueId),{embarqueBloqueado:this.embarqueBloqueado}).catch(e=>{console.error("Error al guardar estado de bloqueo:",e)})}},actualizarMedidasUsadas(){this.medidasUsadas=[...new Set(this.embarque.productos.filter(e=>e.medida&&""!==e.medida.trim()).map(e=>e.medida.trim()))]},validarYRepararIDsProductos(){console.log("Validando IDs de productos en busca de duplicados...");const e=new Map;let t=0;return this.embarque.productos.forEach(a=>{if(e.has(a.id)){console.warn(`ID duplicado encontrado: ${a.id} - Medida: ${a.medida} - Cliente: ${this.obtenerNombreCliente(a.clienteId)}`),console.warn("Conflicto con producto existente:","Medida: "+e.get(a.id).medida,"Cliente: "+this.obtenerNombreCliente(e.get(a.id).clienteId));const o=Object(g["a"])();console.log(`Corrigiendo ID duplicado: ${a.id} -> ${o} para producto ${a.medida}`),a.id=o,t++,e.set(o,a)}else e.set(a.id,a)}),t>0?(console.log(`Se corrigieron ${t} productos con IDs duplicados.`),this.guardarCambiosEnTiempoReal()):console.log("No se encontraron IDs duplicados en los productos."),t},onMedidaInput(e,t){const a=t.target.value.toLowerCase();this.productoEditandoId=e.id,e.medida=t.target.value,this.sugerenciasMedidas=a?this.medidasUsadas.filter(e=>e.toLowerCase().includes(a)&&e.toLowerCase()!==a):[],e.isEditing=!0,this.actualizarProducto(e)},onMedidaBlur(e){setTimeout(()=>{this.productoEditandoId=null},200),e.medida&&e.medida.length>0&&e.tipo&&(e.isEditing=!1,e.isNew=!1)},seleccionarMedida(e,t){e.medida=t,this.productoEditandoId=null,this.actualizarProducto(e)},onTallaCrudoChange(e){e.medida||(e.medida=e.talla),this.guardarCambiosEnTiempoReal()},guardarClientesPersonalizados(){localStorage.setItem("clientesPersonalizados",JSON.stringify(this.clientesPersonalizados))},cargarClientesPersonalizados(){const e=localStorage.getItem("clientesPersonalizados");e&&(this.clientesPersonalizados=JSON.parse(e))},async escucharUsuariosActivos(){try{console.log("Iniciando escucha de usuarios activos");const t=Object(s["d"])(n["c"],"status");if(this.authStore.isLoggedIn&&this.authStore.user){console.log("Usuario autenticado:",this.authStore.user.username);const t=Object(s["d"])(n["c"],"status/"+this.authStore.userId);try{await Object(s["e"])(t,{username:this.authStore.user.username,status:"online",lastSeen:(new Date).toISOString()}),console.log("Estado del usuario actualizado correctamente")}catch(e){console.error("Error al actualizar estado del usuario:",e)}}else console.log("Usuario no autenticado");this.unsubscribeUsuarios=Object(s["c"])(t,e=>{const t=[];console.log("Recibiendo actualización de usuarios activos"),e.forEach(e=>{const a=e.val();console.log("Usuario encontrado:",a),a&&a.username&&t.push({userId:e.key,username:a.username,status:a.status||"online",lastSeen:a.lastSeen})}),console.log("Total usuarios activos:",t.length),this.usuariosActivos=t},e=>{console.error("Error al escuchar usuarios activos:",e)})}catch(e){console.error("Error al iniciar escucha de usuarios:",e)}},async iniciarPresenciaUsuario(){try{if(!this.authStore.isLoggedIn||!this.authStore.user)return void console.log("Usuario no autenticado");const e=Object(s["d"])(n["c"],"status/"+this.authStore.userId);await Object(s["b"])(e).remove(),await Object(s["e"])(e,{username:this.authStore.user.username,status:"online",lastSeen:(new Date).toISOString()})}catch(e){console.error("Error al iniciar presencia:",e.message,e.stack)}},volverAEmbarquesMenu(){this.$router.push({name:"EmbarquesMenu"})},calcularPosicionSticky(e){const t=Object.keys(this.productosPorCliente),a=t.indexOf(e.toString());if(0===a)return 0;let o=0;for(let i=0;i<a;i++){var r;const e=t[i],a=(null===(r=this.$el.querySelector(`[data-cliente="${this.obtenerNombreCliente(e)}"]`))||void 0===r?void 0:r.offsetHeight)||0;o+=a}return o},async crearCuentaJoselito(e,t,a){try{this.isCreatingAccount=!0;const e="1",o={...this.embarque,productos:t,clienteCrudos:{[e]:a}};await I["a"].crearCuentaJoselito(o,this.$router)}catch(o){console.error("Error al crear cuenta para Joselito:",o),alert("Error al crear cuenta para Joselito")}finally{this.isCreatingAccount=!1}},async crearCuentaCatarro(e,t,a){try{this.isCreatingAccount=!0;const e="2",o={...this.embarque,productos:t,clienteCrudos:{[e]:a}};await I["a"].crearCuentaCatarro(o,this.$router),alert("Cuenta de Catarro creada exitosamente y abierta en una nueva pestaña.")}catch(o){console.error("Error al crear cuenta para Catarro:",o),alert("Error al crear cuenta para Catarro: "+o.message)}finally{this.isCreatingAccount=!1}},esClienteJoselito(e){const t=this.clientesDisponibles.find(t=>t.id.toString()===e.toString());return t&&t.nombre.toLowerCase().includes("joselito")},esClienteCatarro(e){const t=this.clientesDisponibles.find(t=>t.id.toString()===e.toString());return t&&t.nombre.toLowerCase().includes("catarro")},obtenerEmbarqueCliente(e){const t=this.productosPorCliente[e],a=this.clienteCrudos[e];return{fecha:this.embarque.fecha,cargaCon:this.embarque.cargaCon,productos:t,clienteCrudos:{[e]:a},kilosCrudos:this.embarque.kilosCrudos||{}}},async verificarFechaExistente(e){if(this.embarqueBloqueado)alert("El embarque está bloqueado. No se puede cambiar la fecha.");else if(e!==this.embarque.fecha)try{const t=Object(i["h"])(),a=new Date(e),o=a.toISOString().split("T")[0],r=Object(i["c"])(t,"embarques"),s=await Object(i["g"])(r),n=s.docs.filter(e=>{if(this.embarqueId&&e.id===this.embarqueId)return!1;const t=e.data();let a;if(t.fecha&&"function"===typeof t.fecha.toDate)a=t.fecha.toDate();else if(t.fecha instanceof Date)a=t.fecha;else{if("string"!==typeof t.fecha)return!1;a=new Date(t.fecha)}const r=a.toISOString().split("T")[0];return r===o});if(n.length>0)return void alert("Ya existe un embarque para la fecha seleccionada. Por favor, seleccione otra fecha.");this.embarqueId&&localStorage.setItem("ultimoEmbarqueId",this.embarqueId),this.embarque.fecha=e,this.modoEdicion&&this.embarqueId&&this.guardarCambiosEnTiempoReal()}catch(t){console.error("Error al verificar fecha existente:",t),alert("Hubo un error al verificar la fecha. Por favor, intente nuevamente.")}},async crearCuentaCatarro(e,t,a){try{this.isCreatingAccount=!0;const e="2",o={...this.embarque,productos:t,clienteCrudos:{[e]:a}};await I["a"].crearCuentaCatarro(o,this.$router),alert("Cuenta de Catarro creada exitosamente y abierta en una nueva pestaña.")}catch(o){console.error("Error al crear cuenta para Catarro:",o),alert("Error al crear cuenta para Catarro: "+o.message)}finally{this.isCreatingAccount=!1}},async crearCuentaOzuna(e,t,a){try{this.isCreatingAccount=!0;const e="4",o={...this.embarque,productos:t,clienteCrudos:{[e]:a}};await I["a"].crearCuentaOzuna(o,this.$router),alert("Cuenta de Ozuna creada exitosamente y abierta en una nueva pestaña.")}catch(o){console.error("Error al crear cuenta para Ozuna:",o),alert("Error al crear cuenta para Ozuna: "+o.message)}finally{this.isCreatingAccount=!1}},async crearCuentaOtilio(e,t,a){try{this.isCreatingAccount=!0;const e="3",o={...this.embarque,productos:t,clienteCrudos:{[e]:a}};await I["a"].crearCuentaOtilio(o,this.$router),alert("Cuenta de Otilio creada exitosamente y abierta en una nueva pestaña.")}catch(o){console.error("Error al crear cuenta para Otilio:",o),alert("Error al crear cuenta para Otilio: "+o.message)}finally{this.isCreatingAccount=!1}},syncOffline(){this.embarqueId?this.guardarCambiosEnTiempoReal():this.guardarEmbarque().catch(e=>console.error("Error al sincronizar embarque offline:",e))},async generarPDFResumenConEscala(){this.mostrarEscalaResumen=!1,this.$options.mixins&&this.$options.mixins.some(e=>e.methods&&e.methods.generarPDFResumen)||"function"===typeof this.generarPDFResumen?await this.generarPDFResumen(this.escalaResumen):await this.generarPDF("resumen",null,this.escalaResumen)},detectarRecarga(){if(window.performance&&window.performance.navigation)return 1===window.performance.navigation.type;if(window.performance&&window.performance.getEntriesByType&&window.performance.getEntriesByType("navigation")){const e=window.performance.getEntriesByType("navigation");if(e.length>0&&e[0].type)return"reload"===e[0].type}const e=localStorage.getItem("ultimaVisita"),t=Date.now();return localStorage.setItem("ultimaVisita",t),!!(e&&t-parseInt(e)<5e3)},handleBeforeUnload(e){this.embarqueId&&(localStorage.setItem("ultimoEmbarqueId",this.embarqueId),localStorage.setItem("ultimaRuta",window.location.pathname))},async seleccionarClienteParaProducto(e){if(this.embarque.fecha&&this.embarque.cargaCon)if(this.embarqueId)this.agregarProducto(e),this.clienteActivo=e;else{const t=await this.guardarEmbarqueInicial();t&&(this.agregarProducto(e),this.clienteActivo=e)}else alert("Por favor, seleccione la fecha y con quién se carga el embarque antes de agregar productos.")},agregarCliente(e){}},watch:{embarque:{handler(e){this.isUndoRedo?this.isUndoRedo=!1:(localStorage.setItem("embarque",JSON.stringify(e)),this.undoStack.push(JSON.stringify(e)),this.redoStack=[],this.guardarCambiosEnTiempoReal())},deep:!0},clienteCrudos:{handler(){localStorage.setItem("clienteCrudos",JSON.stringify(this.clienteCrudos)),this.guardarCambiosEnTiempoReal()},deep:!0},"embarque.productos":{handler(e){e.forEach(e=>{})},deep:!0},"embarque.fecha":{handler(e,t){console.log(`[LOG] Watcher de fecha disparado. Nuevo valor: ${e}, Valor antiguo: ${t}`),this.embarqueId||this.triggerGuardadoInicial()}},"embarque.cargaCon":{handler(e,t){console.log(`[LOG] Watcher de cargaCon disparado. Nuevo valor: ${e}, Valor antiguo: ${t}`),this.embarqueId||this.triggerGuardadoInicial()}}},async created(){console.log('[LOG] Hook "created" de NuevoEmbarque.');const e=localStorage.getItem("embarque");if(!navigator.onLine&&e){this.embarque=JSON.parse(e);const t=localStorage.getItem("clienteCrudos");return t&&(this.clienteCrudos=JSON.parse(t)),this.undoStack.push(JSON.stringify(this.embarque)),this.actualizarMedidasUsadas(),this.cargarClientesPersonalizados(),this.guardadoAutomaticoActivo=!0,void window.addEventListener("online",this.syncOffline)}const t=this.$route.params.id;console.log('[LOG] ID de embarque en "created": '+t),await this.cargarEmbarque(t),this.undoStack.push(JSON.stringify(this.embarque)),this.actualizarMedidasUsadas(),this.cargarClientesPersonalizados(),await this.iniciarPresenciaUsuario(),this.escucharUsuariosActivos()},mounted(){console.log('[LOG] Hook "mounted" de NuevoEmbarque.');const e=this.$route.params.id;if("nuevo"===e)console.log("[LOG] Montando componente para un NUEVO embarque."),this.resetearEmbarque();else{if(!e)return console.error("[LOG] ID de embarque no encontrado en la ruta. Redirigiendo a nuevo."),void this.$router.replace({name:"NuevoEmbarque",params:{id:"nuevo"}});console.log("[LOG] Montando componente para cargar embarque existente: "+e),this.cargarEmbarque(e)}localStorage.setItem("ultimaRuta",window.location.pathname),e&&"nuevo"!==e?localStorage.setItem("ultimoEmbarqueId",e):localStorage.removeItem("ultimoEmbarqueId"),this.cargarClientesPersonalizados(),this.authStore.isLoggedIn&&this.authStore.user?this.embarqueId:console.log("Usuario no autenticado en mounted, no se inicia presencia."),window.addEventListener("beforeunload",this.handleBeforeUnload),this.$nextTick(()=>{const e=document.querySelectorAll(".crudo input, .crudo select");e.forEach(e=>{e.addEventListener("input",this.actualizarCrudos)})}),this.$nextTick(()=>{this.validarYRepararIDsProductos()})},beforeDestroy(){this.unsubscribe&&this.unsubscribe();const e=document.querySelectorAll(".crudo input, .crudo select");e.forEach(e=>{e.removeEventListener("input",this.actualizarCrudos)}),this.unsubscribeUsuarios&&(console.log("Limpiando escucha de usuarios activos"),this.unsubscribeUsuarios()),window.removeEventListener("beforeunload",this.handleBeforeUnload),window.removeEventListener("online",this.syncOffline)},updated(){}},A=y,M=(a("a866"),a("2877")),P=Object(M["a"])(A,o,r,!1,null,"42f7b76d",null);t["a"]=P.exports}}]);